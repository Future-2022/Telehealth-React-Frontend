{"version":3,"sources":["theme/sharedColor.js","config/router.js","config/server.js","components/sideBar/sideBar.js","store/actionNames/homePageActions.js","components/avatarComponent/avatars.js","components/userDataComponent/medicalRecords/allergies.js","components/userDataComponent/medicalRecords/immunizations.js","components/userDataComponent/medicalRecords/medications.js","components/userDataComponent/medicalRecords/diagnoses.js","components/userDataComponent/medicalRecord.js","components/userDataComponent/labResult/labResultBody.js","api/axios.js","components/userDataComponent/labResult/labResult.js","components/my_confirm_dlg/ConfirmDlg.js","components/my_confirm_dlg/showConfirmDlg.js","components/my_alert_dlg/MyAlertDlg.js","components/my_alert_dlg/showAlertDlg.js","components/userDataComponent/assignedTask/taskSectionHeader.js","components/my_check_box/my_check_box.js","components/userDataComponent/assignedTask/enum_task.js","components/userDataComponent/assignedTask/commonComponents/taskTemplateDropdownWidget/taskTemplateDropdownWidget.js","components/userDataComponent/assignedTask/commonComponents/taskTypeDropdownWidget/taskTypeDropdownWidget.js","components/userDataComponent/assignedTask/detailTasks/shared/PlacesAutocomplete.jsx","components/userDataComponent/assignedTask/detailTasks/appointmentTaskWidget.js","components/userDataComponent/assignedTask/detailTasks/listTaskWidget.js","components/userDataComponent/assignedTask/detailTasks/medicationTaskWidget.js","components/userDataComponent/assignedTask/detailTasks/questionnaire.js","components/userDataComponent/assignedTask/detailTasks/referTaskWidget.js","components/userDataComponent/assignedTask/detailTasks/treatmentTaskWidget.js","components/userDataComponent/assignedTask/taskSectionBody.js","components/userDataComponent/assignedTask/taskSectionTail.js","api/axiosAPIs.js","components/userDataComponent/assignedTask/assignedTask.js","components/userDataComponent/doctorNotes/doctorNotes_medication.js","components/userDataComponent/doctorNotes/doctorNotesComponents.js","components/userDataComponent/doctorNotes/doctorNotes.js","components/userDataComponent/addNewPatient.js","components/userDataComponent/healthData.js","components/userDataComponent/userDataComponent.js","components/chatWindow/chatWindow.js","components/chatUserInfo/chatUserInfo.js","components/chatAvatarComponent/chatAvatarComponent.js","components/calendarComponent/calendarComponent.js","pages/homePage/homePage.js","pages/patientPage/patientPage.js","components/chatWindow/Participant.js","components/chatWindow/Room.js","components/chatWindow/Management.js","components/chatWindow/VideoChat.js","pages/chatPage/chatPage.js","pages/calendarPage/calendarPage.js","pages/notificationPage/notificationPage.js","components/settingComponent/changeEmail.js","components/settingComponent/changePassword.js","components/settingComponent/setting.js","pages/settingPage/settingPage.js","pages/userDetailPage/userDetailPage.js","pages/loginPage/loginPage.js","pages/registerPage/registerPage.js","pages/telehealthPage/telehealthPage.js","pages/profilePage/profilePage.js","App.js","serviceWorker.js","store/reducers/index.js","store/reducers/usersReducers.js","store/reducers/chatReducers.js","saga/patientsSaga.js","saga/index.js","index.js"],"names":["sharedColors","routers","console","log","process","server","navIcons","token","localStorage","getItem","SideBar","select","history","useHistory","specialColorFont","color","useState","navMenu","setNavMenu","selectedTab","setSelectedTab","userName","setUserName","setClick","React","notifications","setNotifications","status","setChangeStatus","countNotification","setCountNotification","useEffect","search","window","location","foo","URLSearchParams","get","route","element","size","id","name","getNotification","anchorEl","setAnchorEl","anchorE2","setAnchorE2","axios","headers","Authorization","then","response","data","length","open","Boolean","id1","undefined","open2","id2","className","to","pathname","state","mode","style","map","item","i","variant","onClick","event","currentTarget","Badge","badgeContent","overlap","src","fontSize","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","top","List","sx","width","maxWidth","bgcolor","ListItem","alignItems","ListItemText","primary","Fragment","Typography","put","alert","Math","random","cursor","type","secondary","display","component","backdropInvisible","MenuList","backgroundColor","paddingLeft","paddingRight","MenuItem","ListItemIcon","clear","push","GET_USER","GET_PATIENTS_LIST","SET_PATIENT_SELECTED","GET_PATIENT_PERSONAL_DATA","GET_PATIENT_MEDICATION_DATA","ADD_NEW_PATIENT","USER_ROLE_SET","GET_PATIENT_HEALTH_DATA","GET_ASSIGNED_DATA","GET_USER_CHAT","GET_PATIENT_TASK_DATA","AvatarsContainer","setMainSection","setSectionTitle","dispatch","useDispatch","patientList","useSelector","patientsList","patientSelect","arrowDirection","setArrowDirection","usersData","setUsersData","check_user_name","showAvatar","useRef","selectedUserId","newUsersData","Array","isArray","patient","selected","innerWidth","current","ref","payload","onChange","ev","str","filteredUsers","filter","user","patient_name","toLowerCase","includes","onHandleSearch","target","value","placeholder","index","userNameSpan","slice","toUpperCase","onHandleClickAvatar","selectedUser","find","Avatar","props","domRef","isVisible","setVisible","options","root","document","querySelector","rootMargin","observer","IntersectionObserver","entries","isIntersecting","observe","unobserve","userimage","alt","DOB","Allerges","Immunizations","Medications","userInfo","medication","setChatMedication","array","getMedicationData","title","description","author","date","Diagnoses","paginationList","text","paginationTogggle","MedicalRecord","paginationData","setPaginationData","paginationPage","setPaginationPage","selectedNumber","virtualArray","setCurrentSelected","LabResultBody","selectedTest","setSelectedTest","Object","keys","cat","background","details","detail","amount","unit","base_URL","Axios","create","baseURL","defaults","common","LabResult","setData","catch","error","confirmable","show","proceed","content","Modal","onHide","Body","showConfirm","createConfirmation","ConfirmDlg","showAlert","MyAlertDlg","TaskSectionHeader","onSelectGroup","setVisibleBody","onDeleteGroup","isFromChat","isFromNote","isAboveItem","userTaskGroupList","onHandleClick","onClickAddNewTask","userTaskGroupUIList","textAlign","is_template","group_name","clsx","onClickDelete","MyCheckBox","isChecked","setIsChecked","checked","v","TASKTYPE","TASKNAME","ALL_TASK_NAME","TaskTemplateDropdownWidget","selTaskTemplate","setSelTaskTemplate","taskTemplateList","setIsVisible","selectedTask","x","float","taskTemplate","TaskTypeDropdownWidget","selTaskType","setSelTaskType","taskTypeList","itemKey","childUIList","listInfo","parseInt","PlacesAutocomplete","setCursor","setOpen","address","onChangeAddress","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","setValue","clearSuggestions","useOnclickOutside","handleSelect","getGeocode","results","getLatLng","lat","lng","e","disabled","onKeyDown","keyCode","marginTop","position","boxShadow","zIndex","listStyleType","overflowY","paddingright","suggestion","place_id","structured_formatting","main_text","secondary_text","AppointmentTaskWidget","initValue","task_name","task_dueDate","task_detail","phone_number","initDetails","taskNo","isNew","onSubmitTask","tempTaskList","sameTaskUIList","infoDetails","setInfoDetails","marginBottom","type_id","ListTaskWidget","items","sequences","medications_to_stop","isSequenceData","setIsSequenceData","addNewItem","val","condition","sequence_time","instruction","MedicationTaskWidget","strength","quantity","refill_number","dosage","frequency","pharmacyList","openMedicationName","setOpenMedicationName","openStrength","setOpenStrength","drugStatement","setDrugStatement","availableMedicationList","setAvailableMedicationList","availableStrengthList","setAvailableStrengthList","handleKeyDown","DrugName","Form","Strength","it","err","term","uuid","string","minHeight","padding","rows","cols","label_text","post","resultArr","Questionnaire","questions","question","answers","quIndex","marginRight","marginLeft","answer","anIndex","ReferTaskWidget","comments","TreatmentTaskWidget","link","TaskSectionBody","onSubmitTaskGroup","setIsLoading","selectedGroup","selectedTaskGroup","groupName","setGroupName","isTemplate","setIsTemplate","setTempTaskList","selTempTask","setSelTempTask","selTempTaskIndex","setSelTempTaskIndex","_","isEmpty","getTaskListBasedOnTemplateID","onDeleteTask","taskInfo","a","filteredList","task","delete","res","templateId","end_date","onSetTempTaskListFromServer","taskList","tempList","updateTempTaskList","onClickTempTask","onClickTaskDropdownList","taskType","userTempTaskUIList","paddingTop","div","TaskSectionTail","qs","require","resultGet","endPointURL","getPatientPersonalInfoAPI","patientID","getPatientPersonalAllergyAPI","getPatientMedicationDataAPI","getPatientHealthDataAPI","getAssignedDataAPI","getPatientTaskDataAPI","config_urlEncoded","AssignedTask","homeUserName","setCreatedGroupId","setUserTaskGroupList","setTaskTemplateList","setPharmacyList","isLoading","updateSelectedGroup","visibleBody","getTaskTemplateList","getPharmacyList","getPatientTaskGroupList","callback","url","param","user_id","stringify","result","getPharmacyList_FromCorePhp","templateList","info","template_name","updateGroup","addNewGroup","patient_id","groupParam","group_id","task_group_id","taskParam","notifyParam","body","notification_id","message","taskGroupParam","groupId","groupInfo","active","spinner","NoteMedication","chatMedication","DoctorNotesDetails","assignedTaskGroupId","onSignNote","noteInfo","onCreateNewNote","onDiscardNote","onUpdateNote","dataType","setDataType","setHealthData","detailsSection","setDetailsSection","isEditing","setIsEditing","allData","setAllData","chief_complaint","HPI","Objective","physicalExam_Notes_general","physicalExam_General","physicalExam_Heent","physicalExam_Lungs","newNoteInfo","setNewNoteInfo","setAssignedTaskGroup","labData","addObject","getGroupInfo","setTimeout","healthdata","healthData","values","category","last_updated","visible","visIndex","doctor_name","create_date","is_sign","moment","updated_at","format","doctor_note_id","DoctorNotes","createdGroupId","selectedPatient","doctorNoteList","setDoctorNoteList","config","getNoteList","userId","tmpNoteList","sort","b","created_at","_noteInfo","noteId","_noteId","AddNewPatient","userRole","sendWelcomeMessage","patient_info","code_link","onSubmit","preventDefault","password","password_confirmation","date_of_birth","getElementById","reset","patient_data","usertype","first_name","email","last_name","age","chat_date","chat_date_time","city","diagnosis","recent_chat","street_address","zip","zipcode","HealthDataComponent","setGluecoseData","setOtherHealthData","now","Date","getFullYear","getMonth","getDate","days","before","getTime","from","startDate","endDate","choice","userid","startdate","enddate","getHealthGlucoseData_FromCorePhp","makeHealthData","getOtherHealthData_FromCorePhp","historyList","origin","timing","beforeDeal","measurement","afterDeal","UserDataComponent","currentSelectedUserData","patientDetailData","patientPersonalInfo","addNewPatientStatus","infoData","setInfoData","userDetailsSection","setUserDetailsSection","detailsSectionClass","setDetailsSectionClass","detailsSectionRef","sentImage","receivedImage","ChatWindow","page","setVideoCall","chatInfo","roomName","currentUrl","href","chatTexts","setChatTexts","newMessage","setNewMessage","channelName","setChannelName","setChatToken","videoToken","setVideoToken","smsTo","setSmsTo","smsBody","setSmsBody","chatUserInfo","setChatUserInfo","setShow","messagesEndRef","loading","setLoading","configureChannelEvents","chatInfoValidation","userRoleValidation","getToken","createChatClient","joinGeneralChannel","jwt","decode","obj","send","sendImage","receive","receiveImage","receiver","setChatImage","Promise","resolve","reject","getChatToken","chatToken","chatClient","TwilioChat","getSubscribedChannels","getChannelByUniqueName","channel","join","addEventListener","leave","Error","createGeneralChannel","createChannel","uniqueName","friendlyName","identity","split","sid","getMessages","messagesLoaded","msg","on","messageData","messageAdded","setMessageHistory","messagePage","messageHistory","messageHistoryRecord","key","reverse","virtualChatTexts","chatRowRecord","unshift","onSendMessage","getUserDescriptors","users","online","channel_name","sendNotification","sendMessage","scrollIntoView","behavior","sender_id","recipient_id","chat_by","sendMessageToDB","onhandleSMSClose","Header","closeButton","Title","Group","controlId","Label","Control","as","Footer","Button","icon","bxsMessage","twilioVideoToken","room_name","sendVideoNotification","getVideoToken","margin","ChatUserInfo","selPatient","chatUserSelect","allergy","setAllergy","getAllergyData","ID","overflow","ChatAvatarsContainer","getChannelName","chatPatientList","setChatPatientList","setHighlightedUser","userItem","replace","sender","s_phone_number","userImage","r_phone_number","encode","handleSearch","chatDate","d","weekday","day","getDay","nowData","i_bottom","i_color","i_StartTime","nowDate","Moment","globalChannelName","Calendar","calendarComponentRef","createRef","timeSloteId_ref","appointDescription_ref","patient_id_ref","title_ref","viewChangeHandle","viewType","getApi","changeView","start_vCall","patientdata","patientData","selectData","goVideoCall","setState","handleWeekendsToggle","weekendsVisible","handleDateSelect","selectInfo","setDay","appName","timeValue","appDate","start","fetchTimeSlot","handleEventClick","clickInfo","_def","extendedProps","utc","getTimezoneOffset","eventId","appointment_id","modalState","fetchSelectData","nextDate","tomorrow","nowdate","setDate","tempDate","selDay","prevDate","yesterday","setToday","startStr","handleEvents","events","seldate","calendarEvents","appointment_date","i_time","i_mh","Number","r","virtualTime","patientlist","time","setModalShow","modalShow","modalHide","timeslot","heightSpec","height","durationBarVisible","timeRangeSelectedHandling","date1","date2","date3","date4","date5","hasError","viewCustom","currentEvents","chartUserInfo","changeStatus","fetchData","bind","fetchPatient","handlePChange","handleDateChange","handleDesChange","newSchedule","newAppointment","updateAppointment","deleteAppointment","handleModalHide","handleTimeChange","handleNameChange","hideModal","this","forEach","renameKey","renameValue","oldKey","newKey","field","oldValue","newValue","appointmentDetail","toISOString","substring","event_id","time_slot","time_slot_id","first","secondDate","thirdDate","firthDate","fifthDate","sixthDate","second","setMonth","third","firth","fifth","sixth","warn","tzoffset","localISOTime","JSON","errors","gotoDate","renderSidebar","schedulerLicenseKey","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","initialView","editable","eventDurationEditable","timeZone","selectable","selectMirror","weekends","eventContent","renderEventContent","eventClick","eventsSet","contentHeight","eventLimit","customButtons","weekButton","click","monthButton","headerToolbar","center","end","centered","htmlFor","appointmentDate","dateFormat","defaultValue","borderColor","timeIndicates","bottom","getHours","getMinutes","fontWeight","class","borderLeft","Component","eventInfo","lineHeight","timeText","HomePage","mainPart","setMainPart","part","homeMessage","setHomeMessage","sethomeUserName","sectionTitle","setSectionTitleFunc","checkUserToken","setHomeUserData","user_name","role_id","urlStatus","PatientPage","Participant","participant","isRecipient","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","publication","track","kind","removeAllListeners","videoTrack","eventWindowResize","attach","detach","$","resize","videoWinHeight","audioTrack","autoPlay","muted","Room","handleLogout","room","setRoom","participants","setParticipants","switchs","setswitchs","participantConnected","prevParticipants","participantDisconnected","p","Video","connect","currentRoom","localParticipant","tracks","trackPublication","stop","disconnect","remoteParticipants","right","phoneHangUp","ColorButton","styled","ButtonUnstyled","theme","palette","getContrastText","purple","fontFamily","drugData","noAllergy","button_text","colourStyles","control","styles","option","isDisabled","isFocused","isSelected","chroma","Management","setAge","setButtonAction","checkAction1","setCheckAction1","checkAction2","setCheckAction2","checkAction3","setCheckAction3","checkAction4","setCheckAction4","checkAction5","setCheckAction5","checkAction6","setCheckAction6","backButtonAction","setBackButtonAction","buttonDisableAction","setButtonDisableAction","screenAction","setScreenAction","listAction1","setListAction1","listAction2","setListAction2","medicineName","setMedicineName","listAction3","setListAction3","expanded","setExpanded","subExpanded","setSubExpanded","activeNumber","setActiveNumber","list1","setList1Action","list2","setList2Action","list3","setList3Action","list4","setList4Action","setSelectAction","medicineSave","setMedicineSave","expandedDescription","setExpandedDescription","setPatient","survey","setSurvey","gapsincare","setGapsInCare","afterSummary","setafterSummary","afterVisitSummary","setAfterVisitSummary","careGaps","setCareGaps","shortText","setShortText","goalsList","setGoalsList","changeStatusvalue","setChangeStatusValue","recommendation_for_resolution","setrecommendation_for_resolution","notes","setNotes","markStatus","setMarkStatus","selVisitId","setSelVisitId","reviewButton","setReviewButton","markAsReviewedAllergy","setMarkAsReviewedAllergy","medicationButton","setMedicationButton","markAsReviewedMedication","setMarkAsReviewedMedication","markAsReviewedMedicationText","setMarkAsReviewedMedicationText","handleChange","panel","isExpanded","handleAction1","disableGutters","my","py","IconButton","px","SaveOrBack","l1","l2","completeAllergy","allergyData","tempID","getAllergy","innerText","completeMedicine","medicineData","getDrugData","get_survey_info","get_gapincare_info","get_after_summary","label","textedithandler","tempData","lastElement","formgaps","createTheme","Accordion","AccordionSummary","expandIcon","flexShrink","AccordionDetails","allergy_name","interaction","allergy_type","mt","paddingBottom","Box","minWidth","Select","se","Autocomplete","disablePortal","renderInput","params","TextField","border","l3","hidden","l4","letterSpacing","question_description","multiple_options","multiple_type_id","dangerouslySetInnerHTML","__html","gapdata","gapscare","medications","care_gaps_as_noted_on_survey","subitem","lines","goals","goalItem","summaryData","short_text","newExpanded","VideoChat","minute","useCallback","ChatPage","videoCallStatus","setVideoCallStatus","setChatInfo","setSelPatient","pathName","render","CalendarPage","NotificationPage","ChangeEmail","emailData","ChangePassword","passwordData","Setting","SettingPage","left","UserDetailPage","recordInfo","lapResult","bloodTest","xRays","mri","birthday","allergies","LoginPage","usernameRef","passwordRef","handleEnter","onLoginClick","access_token","setItem","user_info","profile_description","RegisterPage","userStatus","setUserStatus","FormHeader","FormPatient","onPatientRegisterSubmit","FormInput","FormButton","FormPhysician","onPhysicianRegisterSubmit","handleUserStatus","OtherMethods","Facebook","Twitter","Google","TelehealthPage","dense","secondaryAction","edge","textTransform","ProfilePage","selectedFile","setSelectedFile","avatarStatus","setAvatarStatus","avatar","setAvatar","profileDescription","setProfileDescription","setUser","oldPassowrd","setOldPassword","newPassowrd","setNewPassword","confirmPassowrd","setConfirmPassword","type1","setType1","type2","setType2","type3","setType3","getAvatar","changePasswordHandle","formData","viewPass","nonePass","FormData","append","files","onMouseDown","onMouseUp","Pusher","cluster","subscribe","App","patientFullName","store","addNotification","onClickViewResults","insert","container","animationIn","animationOut","dismiss","duration","onScreen","pauseOnHover","touch","showIcon","path","exact","hostname","match","combineReducers","action","setPatientChat","patientHealthData","assignedData","patientPersonalAllergy","getSelectedUser","getSelectedChatUser","getPatientsList","setPatientSelected","getPatientPersonalInfo","getPatientPersonalAllergy","setPatientChatTarget","setPatientChatTargetChange","getAssignedData","getPatientTaskData","getPatientHealthData","getPatientMedicationData","onAddNewPatient","onUserRoleSet","mySaga","call","API","patients","patientSet","patientSets","taskSets","takeEvery","initialActions","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","createLogger","createStore","reducer","applyMiddleware","run","ReactDOM","StrictMode","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.4685f710.chunk.js","sourcesContent":["export const sharedColors = {\r\n    primaryFontColor: '#39D3E3',\r\n    primaryButtonsColor: '#4939E3',\r\n    primaryButtonGradientStart: '#877CEC',\r\n    primaryButtonGradientEnd: '#4939E3',\r\n}","export const routers = {\r\n    HOMEPAGE: \"/\",\r\n    CHATPAGE: \"/chat\",\r\n    CALENDAR_PAGE: \"/calendar\",\r\n    NOTIFICATION: \"/notification\",\r\n    SETTINGS: \"/settings\",\r\n    DETAIL_PAGE: \"/detail\",\r\n    LOGINPAGE: \"/login\",\r\n    REGISTERPAGE: \"/register\",\r\n    PATIENTREGISTERPAGE: \"/patientRegister\",\r\n    PATIENTPAGE: \"/patient\",\r\n    SETTINGPAGE: \"/setting\",\r\n    TELEHEALTHPAGE: \"/chat\",\r\n    PROFILEPAGE: \"/profile\"\r\n}\r\n","console.log(\" === process.env ====> \", process.env)\r\nexport const server = {\r\n  // serverURL: \"http://nexpil.test/api/\"\r\n\r\n  serverURL: \"https://twilio.nexp.xyz/api/\",\r\n  domainURL: \"https://twilio.nexp.xyz\",\r\n\r\n  // serverURL: process.env.NODE_ENV === 'development' ? \"http://localhost:8000/api/\" : \"https://twilio.nexp.xyz/api/\",\r\n  // domainURL: process.env.NODE_ENV === 'development' ? \"http://localhost:8000\" : \"https://twilio.nexp.xyz\",\r\n\r\n  // serverURL: \"https://twilio.nexp.xyz/api/\",\r\n  // domainURL: \"https://twilio.nexp.xyz\",\r\n\r\n  // serverURL: process.env.REACT_APP_API_URL,\r\n  // domainURL: process.env.REACT_APP_DOMAIN_URL,\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style.css';\r\nimport { BsCalendar} from \"react-icons/bs\";\r\nimport { sharedColors } from '../../theme/sharedColor';\r\nimport { routers } from '../../config/router';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport MenuList from '@mui/material/MenuList';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Typography from '@mui/material/Typography';\r\nimport ContentCut from '@mui/icons-material/ContentCut';\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\nimport Popover from '@mui/material/Popover';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Popper from '@mui/material/Popper';\r\nimport PopupState, { bindToggle, bindPopper } from 'material-ui-popup-state';\r\nimport Fade from '@mui/material/Fade';\r\nimport Paper from '@mui/material/Paper';\r\nimport { server } from \"../../config/server\";\r\nimport Badge from '@mui/material/Badge';\r\nimport { borderRadius } from '@mui/system';\r\nlet navIcons = [];\r\nlet token = localStorage.getItem(\"token\");\r\n\r\nexport const SideBar = ({ select }) => {\r\n    const history = useHistory();\r\n\r\n    // Style for special text\r\n    const specialColorFont = {\r\n        color: sharedColors.primaryFontColor,\r\n    }\r\n    const [navMenu, setNavMenu] = useState([]);\r\n    const [selectedTab, setSelectedTab] = useState();\r\n    const [userName, setUserName] = useState();\r\n    const [click, setClick] = useState();\r\n    const [notifications, setNotifications] = React.useState([]);\r\n    const [invisible, setInvisible] = React.useState(false);\r\n    const [count, setCount] = React.useState(1);\r\n    const [status, setChangeStatus] = React.useState(0);\r\n    const [countNotification, setCountNotification] = React.useState(0);\r\n\r\n    let username;\r\n    // Set selected tab icon highlihgt when selectedTab changes\r\n    useEffect(() => {\r\n        console.log(localStorage)\r\n        setSelectedTab(select);\r\n        setUserName(localStorage.getItem('userName'));\r\n        // get_notifyInfo(localStorage.getItem('id'))\r\n        const search = window.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const foo = params.get('info');       \r\n        \r\n        console.log(foo);\r\n        if (foo == \"videocall\" || foo == \"video\") {\r\n            // alert(\"tele\");\r\n        navIcons = [\r\n            // {\r\n            //     route: routers.HOMEPAGE,\r\n            //     element: <BsPerson size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n            //     id: 'home',\r\n            //     name: 'Patients',\r\n            // }, \r\n            {\r\n                route: routers.CALENDAR_PAGE,\r\n                element: <BsCalendar size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                id: 'calendar',\r\n                name: 'Schedule',\r\n            },\r\n            // {\r\n            //     route: routers.CHATPAGE,\r\n            //     element: <BsChatSquareDots size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n            //     id: 'chat',\r\n            //     name: 'Chat',\r\n            // },\r\n            /*{\r\n                route: routers.NOTIFICATION,\r\n                element: <BsBell size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                id: 'notify',\r\n                name: 'Notifications',\r\n            },*/ \r\n            // {\r\n            //     route: routers.SETTINGS,\r\n            //     element: <BsGear size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n            //     id: 'setting',\r\n            //     name: 'Settings',\r\n            // }, \r\n            {\r\n                route: routers.TELEHEALTHPAGE,\r\n                element: <BsCalendar size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                id: 'chat',\r\n                name: 'Telehealth',\r\n            },\r\n            {\r\n                route: \"/\",\r\n                // element: <BiLogOut size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                id: 'logout',\r\n                name: 'Logout',\r\n            }\r\n        ]\r\n        }\r\n        else if(foo == null && select != \"profile\") {\r\n            // alert(\"non-tele\");\r\n            navIcons = [\r\n                // {\r\n                //     route: routers.HOMEPAGE,\r\n                //     element: <BsPerson size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                //     id: 'home',\r\n                //     name: 'Patients',\r\n                // }, \r\n                {\r\n                    route: routers.CALENDAR_PAGE,\r\n                    element: <BsCalendar size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                    id: 'calendar',\r\n                    name: 'Schedule',\r\n                },\r\n                // {\r\n                //     route: routers.CHATPAGE,\r\n                //     element: <BsChatSquareDots size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                //     id: 'chat',\r\n                //     name: 'Chat',\r\n                // },\r\n                /*{\r\n                    route: routers.NOTIFICATION,\r\n                    element: <BsBell size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                    id: 'notify',\r\n                    name: 'Notifications',\r\n                },*/ \r\n                // {\r\n                //     route: routers.SETTINGS,\r\n                //     element: <BsGear size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                //     id: 'setting',\r\n                //     name: 'Settings',\r\n                // }, \r\n                // {\r\n                //     route: routers.TELEHEALTHPAGE,\r\n                //     element: <BsCalendar size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                //     id: 'chat',\r\n                //     name: 'Chat',\r\n                // },\r\n                {\r\n                    route: \"/\",\r\n                    // element: <BiLogOut size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                    id: 'logout',\r\n                    name: 'Logout',\r\n                }\r\n            ]\r\n        }\r\n        else {\r\n            navIcons = [\r\n                // {\r\n                //     route: routers.HOMEPAGE,\r\n                //     element: <BsPerson size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                //     id: 'home',\r\n                //     name: 'Patients',\r\n                // }, \r\n                {\r\n                    route: routers.CALENDAR_PAGE,\r\n                    element: <BsCalendar size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                    id: 'calendar',\r\n                    name: 'Schedule',\r\n                },\r\n                // {\r\n                //     route: routers.CHATPAGE,\r\n                //     element: <BsChatSquareDots size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                //     id: 'chat',\r\n                //     name: 'Chat',\r\n                // },\r\n                /*{\r\n                    route: routers.NOTIFICATION,\r\n                    element: <BsBell size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                    id: 'notify',\r\n                    name: 'Notifications',\r\n                },*/ \r\n                // {\r\n                //     route: routers.SETTINGS,\r\n                //     element: <BsGear size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                //     id: 'setting',\r\n                //     name: 'Settings',\r\n                // }, \r\n                {\r\n                    route: routers.TELEHEALTHPAGE,\r\n                    element: <BsCalendar size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                    id: 'profile',\r\n                    name: 'Profile',\r\n                },\r\n                {\r\n                    route: \"/\",\r\n                    // element: <BiLogOut size=\"33px\" color={sharedColors.primaryFontColor} />,\r\n                    id: 'logout',\r\n                    name: 'Logout',\r\n                }\r\n            ]\r\n        }\r\n        setNavMenu(navIcons);      \r\n        setClick(2);\r\n        getNotification();\r\n    }, [select, status]);\r\n    console.log(navMenu);\r\n    const logOutHandle = () => {\r\n        localStorage.clear();\r\n        history.push(\"login\");\r\n    }\r\n    // -----------------------popover--------------------------\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [anchorE2, setAnchorE2] = React.useState(null);\r\n\r\n    const handleClick2 = (event) => {\r\n        setAnchorE2(event.currentTarget);\r\n    };\r\n\r\n    const handleClose2 = () => {\r\n        setAnchorE2(null);\r\n    };\r\n    const getNotification = () => {\r\n        axios.get(server.serverURL + \"v1/notifications\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n          })\r\n          .then(function (response) {\r\n                setCountNotification(response.data.data.length)\r\n                setNotifications(response.data.data)\r\n          });\r\n    }\r\n    const handleBadgeVisibility = () => {\r\n        setInvisible(!invisible);\r\n    };\r\n    const checkedNotification = (id) => {\r\n        axios.put(server.serverURL + \"v1/notifications/\" +  id, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n          })\r\n          .then(function (response) {\r\n              alert(\"checked\");\r\n                setChangeStatus(Math.random());\r\n          });\r\n    }\r\n    const open = Boolean(anchorEl);\r\n    const id1 = open ? 'simple-popover' : undefined;\r\n\r\n    const open2 = Boolean(anchorE2);\r\n    const id2 = open2 ? 'simple-popover' : undefined;\r\n    \r\n    return (\r\n        <div className=\"side-bar d-flex\">\r\n            <Link className=\"home-link\" to={{\r\n                pathname: routers.HOMEPAGE,\r\n                state: { mode: \"intro\" }\r\n            }}>\r\n                <h1 className=\"side-bar-full-title\">n<span style={specialColorFont}>.</span></h1>\r\n                <h1 className=\"side-bar-reduced-title\">n<span style={specialColorFont}>.</span></h1>                \r\n            </Link>\r\n            <div className=\"navigation-icons-container justify-content-between\">\r\n                <div className=\"d-flex\">\r\n                {navMenu.map((item, i) => {\r\n                    if (selectedTab !== \"calendar\") {\r\n                        if (item.id === \"logout\") {\r\n                            return (                        \r\n                                <div key={i} className=\"navigation-icons-row\">\r\n                                    <div id={item.id} className={item.id !== selectedTab ? \"navigation-icon-none-selected\" : \"navigation-icon-selected\"}>\r\n                                        \r\n                                        {item.element}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <Link key={i} className=\"navigation-icons-row\" to={item.route}>\r\n                                    <div id={item.id} className={item.id !== selectedTab ? \"navigation-icon-none-selected\" : \"navigation-icon-selected\"}>\r\n                                        {/* {item.element}  */}\r\n                                        <span className=\"sidebar-name\">{item.name}</span>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        }\r\n                    } else {\r\n                        if (item.id === \"logout\") {\r\n                            return (                        \r\n                                <div key={i} className=\"navigation-icons-row\">\r\n                                    <div id={item.id} className={item.id !== selectedTab ? \"navigation-icon-none-selected\" : \"navigation-icon-selected\"}>\r\n                                        \r\n                                        {item.element}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        } else {                            \r\n                            {/* if(item.id === \"calendar\") { */}\r\n                                return (\r\n                                    <Link key={i} className=\"navigation-icons-row\" to={item.route}>\r\n                                        <div id={item.id} className={item.id !== selectedTab ? \"navigation-icon-none-selected\" : \"navigation-icon-selected\"}>\r\n                                            {/* {item.element}  */}\r\n                                            <span className=\"sidebar-name\">{item.name}</span>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            {/* } */}\r\n                        }\r\n                    }\r\n                }\r\n                )}\r\n                \r\n                </div>\r\n                <div className=\"d-flex align-items-center pr-5\">\r\n                    <span className=\"alarm-content\" aria-describedby={id1} variant=\"contained\" onClick={handleClick}>\r\n                        <Badge color=\"secondary\" badgeContent={countNotification} overlap=\"circular\">\r\n                            <img src=\"/assets/images/ring.png\" className=\"icon-size\"/>\r\n                        </Badge>\r\n                    </span>\r\n                    \r\n                    <span className=\"avatar-border\" aria-describedby={id2} variant=\"contained\" onClick={handleClick2}>\r\n                        <div className=\"avatar-content d-flex justify-content-around\">\r\n                            <div className=\"avatar-title\">\r\n                                <div>{userName}</div>\r\n                                <span className=\"on-off\" style={{fontSize:15}}>Online</span>\r\n                            </div>\r\n                            <div className=\"image-position\"><img src={localStorage.getItem('userImage')} className=\"img-circle avatar-size\"/></div>\r\n                            <div className=\"badge badge-pill badge-success on-off-icon\"></div>\r\n                        </div>                                        \r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <Popover\r\n                id={id1}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical:'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                style={{ borderRadius: '12px 12px 0 12px!important', top:\"0px!important\" }}\r\n                className=\"notification popover_class\"\r\n            >\r\n                <div className=\"notification-header\">\r\n                    <h3 className=\"notification-title\">{countNotification} Notifications <span className=\"read-all\">Read all</span> </h3>\r\n                </div>\r\n                <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper'}}>\r\n                    {notifications && notifications.map((item) => (\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            \r\n                                <ListItemText\r\n                                    style={{color:\"#ffdeed!important\"}}\r\n                                    primary={<React.Fragment>\r\n                                        {/* <Badge  onClick={() => checkedNotification(item['id'])} color=\"info\" variant=\"dot\" invisible={item['status'] === 0 ? false : true}anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'left',\r\n                                            }} style={{cursor:\"pointer\"}}> */}\r\n                                          <Typography onClick={() => checkedNotification(item['id'])} style={{cursor:\"pointer\"}}>{item['title']}</Typography>\r\n                                          {/* </Badge> */}\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                                            <span>×</span>\r\n                                        </button>\r\n                                    \r\n                                    </React.Fragment>}\r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                    <Typography\r\n                                        sx={{ display: 'inline' }}\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        style={{color:\"rgb(135 135 133)\"}}\r\n                                    >\r\n                                        {item['description']}                                \r\n                                    </Typography>\r\n                                    </React.Fragment>\r\n                                }                        \r\n                                />\r\n                        </ListItem>\r\n                    ))}                    \r\n                    \r\n                </List>\r\n            </Popover>\r\n            <Popover\r\n                id={id2}\r\n                open={open2}\r\n                anchorEl={anchorE2}\r\n                onClose={handleClose2}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical:'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                backdropInvisible={false}\r\n                className=\"popover_class\"\r\n            >\r\n                <MenuList style={{backgroundColor:\"#EFF0F6\", paddingLeft:20, paddingRight:20}}>\r\n                    <Link to=\"/profile\">\r\n                        <MenuItem>             \r\n                            <ListItemText>Profile</ListItemText>\r\n                            <ListItemIcon>\r\n                                <ArrowForwardIosIcon fontSize=\"small\" />\r\n                            </ListItemIcon>                        \r\n                        </MenuItem>\r\n                    </Link>\r\n                    <MenuItem onClick={logOutHandle}>                        \r\n                        <ListItemText>Log out</ListItemText>\r\n                        <ListItemIcon>\r\n                            <ArrowForwardIosIcon fontSize=\"small\" />\r\n                        </ListItemIcon>                        \r\n                    </MenuItem>                    \r\n                </MenuList>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n","export const GET_USER = 'GET_USER';\r\nexport const USER_SELECT = 'USER_SELECT';\r\nexport const GET_PATIENTS_LIST = 'GET_PATIENTS_LIST';\r\nexport const SET_PATIENT_SELECTED = 'SET_PATIENT_SELECTED';\r\nexport const GET_PATIENT_PERSONAL_DATA = 'GET_PATIENT_PERSONAL_DATA';\r\nexport const GET_CHAT_PATIENT_TARGET = 'GET_CHAT_PATIENT_TARGET';\r\nexport const SET_GET_CHAT_PATIENT_TARGET = 'SET_GET_CHAT_PATIENT_TARGET';\r\nexport const GET_PATIENT_MEDICATION_DATA = 'GET_PATIENT_MEDICATION_DATA';\r\nexport const ADD_NEW_PATIENT = 'ADD_NEW_PATIENT';\r\nexport const USER_ROLE_SET = \"USER_ROLE_SET\";\r\nexport const GET_PATIENT_HEALTH_DATA = \"GET_PATIENT_HEALTH_DATA\";\r\nexport const GET_ASSIGNED_DATA = \"GET_ASSIGNED_DATA\";\r\nexport const SET_CHAT_CHANNEL = \"SET_CHAT_CHANNEL\";\r\nexport const GET_USER_CHAT = \"GET_USER_CHAT\";\r\n\r\nexport const GET_PATIENT_TASK_DATA = \"GET_PATIENT_TASK_DATA\";\r\nexport const GET_PATIENT_PERSONAL_ALLERGY = \"GET_PATIENT_PERSONAL_ALLERGY\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    GET_USER, SET_PATIENT_SELECTED, GET_PATIENT_PERSONAL_DATA, GET_PATIENT_TASK_DATA,\r\n    GET_PATIENT_MEDICATION_DATA, ADD_NEW_PATIENT, GET_PATIENT_HEALTH_DATA, GET_ASSIGNED_DATA\r\n} from '../../store/actionNames';\r\nimport './style.css';\r\nimport { BsSearch, BsFillPlusCircleFill, BsChevronCompactDown, BsChevronCompactUp } from \"react-icons/bs\";\r\nimport { sharedColors } from '../../theme/sharedColor';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import VizSensor from 'react-visibility-sensor';\r\n// import { Fade } from '@material-ui/core';\r\n\r\nexport const AvatarsContainer = ({ setMainSection, setSectionTitle }) => {\r\n    const dispatch = useDispatch();\r\n    // const history = useHistory();\r\n    // const [active, setActive] = useState(false);\r\n    const patientList = useSelector(state => state.patientsList);\r\n    const patientSelect = useSelector(state => state.patientSelect);\r\n    \r\n    const [arrowDirection, setArrowDirection] = useState(true);\r\n    const [usersData, setUsersData] = useState([]);\r\n\r\n    let check_user_name = \"\";\r\n\r\n    // Style for the highlighted text.\r\n    const specialColorFont = {\r\n        color: sharedColors.primaryFontColor,\r\n    }\r\n    const showAvatar = useRef();\r\n\r\n    // select user\r\n    const onHandleClickAvatar = (selectedUser) => {\r\n        const selectedUserId = selectedUser.id;\r\n        const user = usersData.find(user => user.id === selectedUserId);\r\n        const patient = patientList.find(patient => patient.id === selectedUserId);\r\n\r\n        if (user && patient) {\r\n            console.log(\" selected user ======> \", user);\r\n            console.log(\" selected patient ======> \", patient);\r\n\r\n            if (setMainSection) setMainSection(\"userData\");\r\n            dispatch({ type: GET_USER, payload: patient });\r\n            dispatch({ type: SET_PATIENT_SELECTED, payload: user });\r\n\r\n            dispatch({ type: GET_PATIENT_PERSONAL_DATA, payload: user.id });\r\n            dispatch({ type: GET_PATIENT_MEDICATION_DATA, payload: user.id });\r\n            dispatch({ type: GET_PATIENT_HEALTH_DATA, payload: user.id });\r\n            dispatch({ type: GET_ASSIGNED_DATA, payload: user.id });\r\n            dispatch({ type: GET_PATIENT_TASK_DATA, payload: user.id });\r\n            dispatch({ type: ADD_NEW_PATIENT, payload: false });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const selectedUserId = patientSelect ? patientSelect.id : null;\r\n        const newUsersData = patientList && Array.isArray(patientList)\r\n            ? patientList.map(patient => {\r\n                if (selectedUserId === patient.id) return { ...patient, selected: true };\r\n                return { ...patient, selected: false };\r\n            })\r\n            : [];\r\n        setUsersData(newUsersData);\r\n\r\n        const width = window.innerWidth;\r\n        if (width <= 890) {\r\n            showAvatar.current.className = showAvatar.current.className === \"avatar-main-section\" ? \"avatar-main-section-showed\" : \"avatar-main-section\";\r\n            setArrowDirection(true);\r\n        }\r\n    }, [patientList, patientSelect]);\r\n\r\n    // Show patients list when mobile responsive\r\n    const onToggleAvatar = () => {\r\n        showAvatar.current.className = showAvatar.current.className === \"avatar-main-section\" ? \"avatar-main-section-showed\" : \"avatar-main-section\";\r\n        setArrowDirection(!arrowDirection);\r\n    }\r\n\r\n    const onHandleSearch = (str) => {\r\n        if (str) {\r\n            var filteredUsers = patientList.filter(user => user.patient_name.toLowerCase().includes(str.toLowerCase()));\r\n            setUsersData(filteredUsers);\r\n        } else setUsersData(patientList);\r\n    }\r\n\r\n    const onClickAddNewPatient = () => dispatch({ type: ADD_NEW_PATIENT, payload: true });\r\n\r\n    return (\r\n        <div className=\"avatars\">\r\n            <div className=\"show-avatars\" onClick={() => onToggleAvatar()}>\r\n                {arrowDirection ? <BsChevronCompactDown color=\"white\" /> : <BsChevronCompactUp color=\"white\" />}\r\n            </div>\r\n            <div className=\"avatar-main-section\" ref={showAvatar}>\r\n                <div className=\"avatars-title-container\">\r\n                    <h1 className=\"avatars-title-text\">\r\n                        {setSectionTitle}\r\n                        <span style={specialColorFont}>.</span></h1>\r\n                    <BsFillPlusCircleFill onClick={onClickAddNewPatient} color={sharedColors.primaryButtonsColor} className=\"avatars-title-add-button\" />\r\n                </div>\r\n                <div className=\"search-bar\">\r\n                    <BsSearch size=\"18px\" color={sharedColors.primaryFontColor} className=\"search-icon\" />\r\n                    <input onChange={ev => onHandleSearch(ev.target.value)} type=\"text\" placeholder=\"Search\" className=\"search-input\" />\r\n                </div>\r\n                <div className=\"users-avatar\" id=\"avatar-scrollbar\">\r\n                    {\r\n                        usersData && usersData.map((user, index) => {\r\n                            let userNameSpan = \"\";\r\n                            if (check_user_name !== user.patient_name.slice(0, 1).toUpperCase()) {\r\n                                userNameSpan = <div>{user.patient_name.slice(0, 1).toUpperCase()}</div>;\r\n                                check_user_name = user.patient_name.slice(0, 1).toUpperCase();\r\n                            }\r\n                            return (<Avatar key={index} onHandleClickAvatar={() => onHandleClickAvatar(user)} user={user} userNameSpan={userNameSpan} />);\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Avatar = (props) => {\r\n    // const dispatch = useDispatch();\r\n    // const history = useHistory();\r\n    const domRef = React.useRef();\r\n    const [isVisible, setVisible] = React.useState(false);\r\n    useEffect(() => {\r\n        const options = {\r\n            root: document.querySelector('#avatar-scrollbar'),\r\n            rootMargin: '-70px',\r\n            // threshold: [0.98, 0.99, 1]\r\n        }\r\n        const observer = new IntersectionObserver(entries => {\r\n            setVisible(entries[0].isIntersecting);\r\n            if (!entries[0].isIntersecting) {\r\n                setVisible(false);\r\n            }\r\n        }, options);\r\n\r\n        observer.observe(domRef.current);\r\n\r\n        return () => observer.unobserve(domRef.current);// eslint-disable-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const { user, userNameSpan } = props;\r\n\r\n    return (\r\n        <div ref={domRef} id=\"avatar-item\">\r\n            {userNameSpan}\r\n            <div onClick={() => props.onHandleClickAvatar(user)}\r\n                className={`${isVisible ? 'is-visible' : 'is-invisible'} ${user.selected === false ? \"user-avatar\" : \"user-avatar-selected\"}`}>\r\n                <img className=\"avatar-image\" src={user.userimage} alt={user.userimage} />\r\n                <div className=\"user-info\">\r\n                    <p className=\"user-name-text\">{user.patient_name}</p>\r\n                    <p className=\"user-chats-text\">{user.DOB}</p>\r\n                </div>\r\n                {/* <div className=\"chat-info-part\">\r\n                        <p className={user.selected === false ? \"chat-date\" : \"chat-date-selected\"}>Jul 29</p>\r\n                    </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport '../style.css';\r\n\r\nexport const Allerges = () => {\r\n    return (\r\n        <div className=\"medical-no-report\">\r\n            <p className=\"medical-no-report-text\">No Reported Allergies</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\n// const immunizationData = [\r\n//     {\r\n//         title: \"Hepatitis A\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"Hepatitis A\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"influnza\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"TDAP\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"HPV\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"Zoster\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"Meningitis\",\r\n//         description: \"10-03-2019\",\r\n//     }\r\n// ]\r\n\r\nexport const Immunizations = () => {\r\n    return <div className=\"medical-no-report\">\r\n        <p className=\"medical-no-report-text\">No Reported Immunizations</p>\r\n    </div>   \r\n}\r\n","// import userEvent from '@testing-library/user-event';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.css';\r\n\r\nexport const Medications = (props) => {\r\n    const { userInfo } = props;\r\n    const medication = useSelector(state => state.medication);\r\n    const [chatMedication, setChatMedication] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getMedicationData = (data) => {\r\n            let array = [];\r\n            if (data.length !== 0) {\r\n                for (let index = 0; index < 4; index++) {\r\n                    const element = data[index];\r\n                    element ? array.push(element[\"title\"]) : array.push(\"\");\r\n                }\r\n                setChatMedication(array);\r\n            } else {\r\n                setChatMedication([]);\r\n            }\r\n        }\r\n        getMedicationData(medication);\r\n    }, [medication, userInfo]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // return <div className=\"chat-user-info-main-section\" style={{ overflow: \"hidden\" }}>\r\n    //     <div className=\"chat-user-info-row\">\r\n    //         <p className=\"chat-user-info-row-title\">Age:</p>\r\n    //         <p className=\"chat-user-info-row-description\">{(userInfo ? userInfo.age : \"\")}</p>\r\n    //     </div>\r\n    //     <div className=\"chat-user-info-row\">\r\n    //         <p className=\"chat-user-info-row-title\">D.O.B:</p>\r\n    //         <p className=\"chat-user-info-row-description\">{userInfo ? userInfo.DOB : \"\"}</p>\r\n    //     </div>\r\n    //     <div className=\"chat-user-info-row\">\r\n    //         <p className=\"chat-user-info-row-title\">Allergies:</p>\r\n    //         <p className=\"chat-user-info-row-description\">{userInfo ? userInfo.allergies : \"\"}</p>\r\n    //     </div>\r\n    //     <div className=\"chat-user-info-row\">\r\n    //         <p className=\"chat-user-info-row-title\">Medication:</p>\r\n    //         <div className=\"chat-user-info-row-description\">\r\n    //             <div className=\"medication-row\">\r\n    //                 {chatMedication && chatMedication.map((item, i) =>\r\n    //                     <p key={i} className=\"medication-row-text\">{item}</p>\r\n    //                 )}\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    // </div>\r\n    return (\r\n        <div className=\"medication-subscription-container\">\r\n            {medication.map((item, i) =>\r\n                <div key={i} className=\"medication-every-data-card\">\r\n                    <div className=\"medication-between-part\">\r\n                        <p className=\"medication-subscription-title\">{item.title}</p>\r\n                        <p className=\"medication-subscription-description\">{item.description}</p>\r\n                    </div>\r\n                    <div className=\"medication-between-part\">\r\n                        <p className=\"medication-subscription-author\">{item.author}</p>\r\n                        <p className=\"medication-subscription-date\">{item.date}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../style.css';\r\n\r\n// const diagnosesData = [\r\n//     {\r\n//         title: \"Type1 Diabetes\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"Hyperetension\",\r\n//         description: \"10-03-2019\",\r\n//     }, {\r\n//         title: \"Hyperlipidemia\",\r\n//         description: \"10-03-2019\",\r\n//     }\r\n// ]\r\nexport const Diagnoses = () => {\r\n    return <div className=\"medical-no-report\">\r\n        <p className=\"medical-no-report-text\">No Reported Diagnoses</p>\r\n    </div>\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport './style.css';\r\nimport {\r\n    Allerges,\r\n    Immunizations,\r\n    Medications,\r\n    Diagnoses\r\n} from './medicalRecords';\r\n\r\nconst paginationList = [\r\n    {\r\n        text: \"Allergies\",\r\n        selected: true,\r\n        paginationTogggle: \"allergies\",\r\n    }, {\r\n        text: \"Diagnoses\",\r\n        selected: false,\r\n        paginationTogggle: \"diagnoses\",\r\n    }, {\r\n    }, {\r\n        text: \"Immunizations\",\r\n        selected: false,\r\n        paginationTogggle: \"immunization\",\r\n    }, {\r\n        text: \"Medications\",\r\n        selected: false,\r\n        paginationTogggle: \"medications\",\r\n    },\r\n];\r\n\r\nexport const MedicalRecord = (props) => {\r\n    const { userInfo } = props;\r\n    const [paginationData, setPaginationData] = useState(paginationList);\r\n    const [paginationPage, setPaginationPage] = useState(\"allergies\");\r\n\r\n    // Section pagination function\r\n    const setCurrentSelected = (selectedNumber) => {\r\n        let virtualArray = [];\r\n        for (let i = 0; i < paginationData.length; i++) {\r\n            if (i !== selectedNumber) virtualArray.push({ ...paginationData[i], selected: false });\r\n            if (i === selectedNumber) virtualArray.push({ ...paginationData[i], selected: true })\r\n        }\r\n        setPaginationData(virtualArray)\r\n        setPaginationPage(paginationList[selectedNumber].paginationTogggle);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-section\">\r\n            <div className=\"pagination-section\">\r\n                <h1 className=\"pagination-title\">Medical Record</h1>\r\n                <ul className=\"pagination-list\">\r\n                    {paginationData.map((item, i) =>\r\n                        <li onClick={() => setCurrentSelected(i)} key={i}\r\n                            className={item.selected === true ? \"pagination-item pagination-item-selected\" : \"pagination-item\"}\r\n                            style={{ paddingLeft: 5, paddingRight: 5 }}\r\n                        >\r\n                            <p>{item.text}</p>\r\n                            {item.selected === true && <div className=\"bottom-border\"></div>}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n\r\n            {paginationPage === \"allergies\" &&\r\n                <Allerges />\r\n            }\r\n            {paginationPage === \"diagnoses\" &&\r\n                <Diagnoses />\r\n            }\r\n\r\n            {paginationPage === \"immunization\" &&\r\n                <Immunizations />\r\n            }\r\n\r\n            {paginationPage === \"medications\" &&\r\n                <Medications userInfo={userInfo} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\n\r\n// const data = {\r\n//     blood_test: {\r\n//         title: \"Blood Test\",\r\n//         date: \"10-12-2020\",\r\n//         details: [\r\n//             { title: \"Cholesterol\", amount: 229, unit: \"mg/dl\" },\r\n//             { title: \"HDL\", amount: 45, unit: \"mg/dl\" },\r\n//             { title: \"LDL\", amount: 165, unit: \"mg/dl\" },\r\n//             { title: \"Triglycerdes\", amount: 93, unit: \"mg/dl\" },\r\n//             { title: \"Hemoglobin Alc\", amount: 8.5, unit: \"%\" },\r\n//             { title: \"PT - INR\", amount: 2.1, unit: \"\" },\r\n//         ]\r\n//     },\r\n//     mri_test: {\r\n//         title: \"MRI Test\",\r\n//         date: \"05-12-2020\",\r\n//         details: [\r\n//             { title: \"Cholesterol\", amount: 150, unit: \"mg/dl\" },\r\n//             { title: \"HDL\", amount: 12, unit: \"mg/dl\" },\r\n//             { title: \"LDL\", amount: 200, unit: \"mg/dl\" },\r\n//             { title: \"Triglycerdes\", amount: 57, unit: \"mg/dl\" },\r\n//         ]\r\n//     },\r\n//     x_ray_test: {\r\n//         title: \"X- Rays Test\",\r\n//         date: \"10-06-2020\",\r\n//         details: [\r\n//             { title: \"Cholesterol\", amount: 229, unit: \"mg/dl\" },\r\n//             { title: \"HDL\", amount: 45, unit: \"mg/dl\" },\r\n//             { title: \"LDL\", amount: 165, unit: \"mg/dl\" },\r\n//             { title: \"Triglycerdes\", amount: 93, unit: \"mg/dl\" },\r\n//             { title: \"Hemoglobin Alc\", amount: 8.5, unit: \"%\" },\r\n//             { title: \"PT - INR\", amount: 2.1, unit: \"\" },\r\n//             { title: \"Hemoglobin Alc\", amount: 8.5, unit: \"%\" },\r\n//             { title: \"Hemoglobin Alc\", amount: 8.5, unit: \"%\" },\r\n//         ]\r\n//     },\r\n// }\r\n\r\n// const labCatList = [\r\n//     \"blood_test\", \"mri_test\", \"x_ray_test\"\r\n// ]\r\nfunction LabResultBody(props) {\r\n    const [selectedTest, setSelectedTest] = useState(\"blood_test\");\r\n    console.log(\"LabResultBody Props ===> \", props);\r\n    if (!props.data || !props.data.data || props.data.data.length === 0) {\r\n        if (props.title === \"lab\") {\r\n            return (\r\n                <div className=\"lab-result-description-section\">\r\n                    <div className=\"lab-result-description-card\">\r\n                        <div className=\"title-section\">\r\n                            <p className=\"title-text\">\r\n                                No Lab Results\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"lab-result-description-section\">\r\n                    <div className=\"lab-result-description-card\">\r\n                        <div className=\"title-section\">\r\n                            <p className=\"title-text\">\r\n                                No Health Data\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        const { data } = props.data;\r\n        console.log(Object.keys(data))\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"lab-result-category-container\">\r\n                            {\r\n                                Object.keys(data).map((cat, index) => {\r\n                                    return (<div\r\n                                        key={`lab_result_${index}`}\r\n                                        className=\"lab-result-category-button\"\r\n                                        onClick={() => setSelectedTest(cat)}\r\n                                        style={{ background: selectedTest === cat ? \"#f1effd\" : \"#F7F7FA\" }}\r\n                                    >\r\n                                        <h4 className=\"round_head task_template_btn\">\r\n                                            {data[cat].title} <span className=\"round_arrow-add-task\">&gt;</span>\r\n                                        </h4>\r\n                                    </div>)\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6\">\r\n                        <div className=\"lab-result-description-section\">\r\n                            <div className=\"lab-result-description-card\">\r\n                                <div className=\"title-section\">\r\n                                    <p className=\"title-text\">{data[selectedTest].title}</p>\r\n                                    <p className=\"title-date-text\">{data[selectedTest].date}</p>\r\n                                </div>\r\n                                {\r\n                                    data[selectedTest].details.map((detail, index) => {\r\n                                        return (<div key={`${data[selectedTest].title}_${index}`}\r\n                                            className=\"description-row\"\r\n                                        >\r\n                                            <p className=\"description-row-title\">{detail.title}</p>\r\n                                            <p className=\"description-row-info\">\r\n                                                <span>{detail.amount}</span>\r\n                                                &nbsp;{detail.unit}\r\n                                            </p>\r\n                                        </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LabResultBody\r\n","import Axios from 'axios';\r\nimport { server } from '../config/server';\r\n\r\n\r\n// const qs = require('querystring')\r\nconst base_URL = server.serverURL;\r\n\r\n// let base_URL = process.env.NODE_ENV === \"development\" ? `http://localhost:5000/api` : `https://app.quotehard.com/api`;\r\nconsole.log(\"______ process.env.NODE_ENV ____\", process.env.NODE_ENV)\r\n\r\nlet axios = Axios.create({\r\n   baseURL: `${base_URL}`,\r\n   headers: {\r\n      'Content-Type': 'application/json',\r\n   }\r\n});\r\n\r\nconst token = localStorage.getItem('token');\r\nconsole.log(\"__ token __\", token);\r\n\r\nif (token) axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\nelse axios.defaults.headers.common['Authorization'] = \"\";\r\n\r\nexport default axios;","import React, { useEffect } from 'react';\r\nimport '../style.css';\r\nimport './style.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport LabResultBody from './labResultBody';\r\nimport { server } from '../../../config/server';\r\nimport axios from '../../../api/axios';\r\n\r\nexport const LabResult = () => {\r\n    const user = useSelector(state => state.patientSelect);\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        const fetchHealthData = () => {\r\n            axios.get(\"v1/patient-lab-data/\" + user.id).then(({ data }) => {\r\n                console.log(\" ======== Patient Lab Data for user response ===> \", data);\r\n                setData(data);\r\n            }).catch(error => {\r\n                console.log(\"Error during fetch Patient Lab Data.\");\r\n            })\r\n        };\r\n        if (user.id) fetchHealthData();\r\n    }, [user]);// eslint-disable-line react-hooks/exhaustive-deps\r\n    return (\r\n        <div className=\"card-section\">\r\n            <h1 className=\"card-title\">Lab Results</h1>\r\n            <LabResultBody data={data} title={\"lab\"} />\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport './MyConfirmDlg.css'\r\nimport { confirmable } from 'react-confirm';\r\n\r\nfunction ConfirmDlg(props) {\r\n    const { show, proceed, content } = props;\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={() => proceed(false)} className=\"my-confirm-dialog-style\">\r\n                {/* <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header> */}\r\n                <Modal.Body>\r\n                    <div >\r\n                        <div className=\"confirm-modal-content-container\">\r\n                            {content}\r\n                        </div>\r\n                        <div className=\"modal-button-container\">\r\n                            <div className=\"confirm-modal-ok-button primary-button\" onClick={() => proceed(true)}>\r\n                                <p className=\"doctor-notes-button-text\">OK</p>\r\n                            </div>\r\n                            <div className=\"confirm-modal-cancel-button discard-button\" onClick={() => proceed(false)}>\r\n                                <p className=\"doctor-notes-button-text\">Cancel</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default confirmable(ConfirmDlg);\r\n","import ConfirmDlg from \"./ConfirmDlg\";\r\nimport {createConfirmation} from 'react-confirm';\r\n\r\nexport const showConfirm = createConfirmation(ConfirmDlg);","import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport './MyAlertDlg.css'\r\nimport { confirmable } from 'react-confirm';\r\nfunction MyAlertDlg(props) {\r\n    const { show, proceed, content } = props;\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={() => proceed(true)} className=\"my-confirm-dialog-style\">\r\n                {/* <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header> */}\r\n                <Modal.Body>\r\n                    <div >\r\n                        <div className=\"confirm-modal-content-container\">\r\n                            {content}\r\n                        </div>\r\n                        <div className=\"modal-button-container\">\r\n                            <div className=\"confirm-modal-ok-button primary-button\" onClick={() => proceed(true)}>\r\n                                <p className=\"doctor-notes-button-text\">OK</p>\r\n                            </div> \r\n\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default confirmable(MyAlertDlg);\r\n","import MyAlertDlg from \"./MyAlertDlg\";\r\nimport { createConfirmation } from 'react-confirm';\r\n\r\nexport const showAlert = createConfirmation(MyAlertDlg);","import clsx from 'clsx';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../style.css'\r\n\r\nfunction TaskSectionHeader(props) {\r\n    const { onSelectGroup, setVisibleBody, onDeleteGroup, isFromChat, isFromNote, isAboveItem } = props;\r\n    const dispatch = useDispatch();\r\n    const userTaskGroupList = useSelector(state => state.userTaskGroupList);\r\n\r\n    const onHandleClick = (item) => {\r\n        onSelectGroup(item.id);\r\n        setVisibleBody(true);\r\n    }\r\n    const onClickAddNewTask = () => {\r\n        dispatch({ type: \"SELECT_PATIENT_TASK_GROUP\", payload: null });\r\n        setVisibleBody(true);\r\n    }\r\n    const onClickDelete = (item) => onDeleteGroup(item.id);\r\n\r\n    const userTaskGroupUIList = userTaskGroupList.map((item, index) => {\r\n        if (isFromChat) return (\r\n            <div key={index} style={{ textAlign: 'center' }}>\r\n                <div className={item.is_template === \"0\" ? \"patient-page-existing-task-style\" : \"patient-page-existing-task-title-style-complete\"}\r\n                    style={{ width: \"95%\" }}>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <span className=\"float-left\" style={item.is_template === \"0\" ? { color: 'black' } : { color: 'white' }}\r\n                            onClick={() => onHandleClick(item)}>\r\n                            {item.group_name}\r\n                        </span>\r\n                        {/* <span className=\"float-right\" style={item.is_template === \"0\" ? { color: 'darkgray' } : { color: 'white' }}>\r\n                                    {item.is_template}\r\n                                </span> */}\r\n                        {/* <span className=\"patient-page-delete-group-button float-right\"\r\n                                    style={{ marginRight: '5%' }}\r\n                                    onClick={() => onClickDelete(item)}>\r\n                                    &times;\r\n                                </span> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        else return (\r\n            <div key={index} className={clsx(isFromNote ? \"patient-page-existing-task-style-from-note\" : \"patient-page-existing-task-style\")}>\r\n                <div className=\"patient-page-existing-task-title-style\" >\r\n                    <span onClick={() => onHandleClick(item)}>{item.group_name}</span>\r\n                    <span className=\"patient-page-delete-group-button\" onClick={() => onClickDelete(item)}>&times;</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (isFromChat) return (\r\n        <div>\r\n            {userTaskGroupUIList}\r\n            <div className=\"patient-page-add-task-button-style\"\r\n                style={{ width: \"95%\", textAlign: 'center' }}\r\n                onClick={onClickAddNewTask}>\r\n                Add New Task\r\n            </div>\r\n        </div>\r\n    );\r\n    else if (isFromNote) {\r\n        if (isAboveItem) return (\r\n            <div className=\"patient-page-existing-task-container-style\">\r\n                {userTaskGroupUIList}\r\n            </div>\r\n        );\r\n        else return (\r\n            <div className=\"patient-page-existing-task-container-style\">\r\n                <div className=\"patient-page-add-task-button-style\"\r\n                    onClick={onClickAddNewTask}>\r\n                    Add New Task\r\n                </div>\r\n            </div>\r\n        );\r\n    } else return (\r\n        <div className=\"patient-page-existing-task-container-style\">\r\n            <div className=\"patient-page-add-task-button-style\"\r\n                onClick={onClickAddNewTask}>\r\n                Add New Task\r\n            </div>\r\n            {userTaskGroupUIList}\r\n            <div className=\"assigned-tasks-container row\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskSectionHeader\r\n","import React from 'react'\r\nimport './my_check_box.css'\r\nfunction MyCheckBox(props) {\r\n    const { isChecked, setIsChecked, isFromChat } = props;\r\n    const onChange = (v) => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <span className=\"checkbox\">\r\n                <input type=\"checkbox\" checked={isChecked} onChange={onChange} />\r\n                <span className=\"wrapper\" onClick={() => setIsChecked(!isChecked)}>\r\n                    <span className=\"knob\"></span>\r\n                </span>\r\n            </span>\r\n            <span className=\"checkbox-description\" style={{ fontSize: isFromChat ? 18 : 20 }}>I will save this set as template.</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCheckBox\r\n","export const TASKTYPE = {\r\n    none: 0,\r\n    list: 1,\r\n    prescribe_medication: 2,\r\n    treatment_plan: 3,\r\n    appintment_scheduling: 4,\r\n    refer_to_doctor: 5,\r\n    questionnaire: 6,\r\n};\r\n\r\nexport const TASKNAME={\r\n    none: \"All Task\",\r\n    list: \"List\" ,\r\n    prescribe_medication: \"Prescribe Medication\",\r\n    treatment_plan: \"Treatment Plan\",\r\n    appintment_scheduling: \"Appointment Scheduling\",\r\n    refer_to_doctor: \"Refer to Doctor\",\r\n    questionnaire: \"Questionnaire\",\r\n}\r\n\r\nexport const TASKADDINGSTATUS = {\r\n    new_task: 0,\r\n    update_old_task: 1,\r\n    update_temp_task: 2\r\n}\r\n\r\nexport const ALL_TASK_NAME = \"All Task\";\r\n\r\n\r\nexport function getEnumKeyByValue(Enum, val) {\r\n    return Object.keys(Enum).find(\r\n        key => Enum[key] === val\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport '../../../style.css'\r\nimport { ALL_TASK_NAME } from '../../enum_task';\r\n\r\nfunction TaskTemplateDropdownWidget(props) {\r\n    const { selTaskTemplate, setSelTaskTemplate, taskTemplateList, isFromChat } = props;\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const selectedTask = selTaskTemplate !== \"\" && selTaskTemplate !== ALL_TASK_NAME ? \"\" : taskTemplateList.filter(x => x.id === selTaskTemplate.id);\r\n    const title = selTaskTemplate === \"\" ? \"Task Template\" : selTaskTemplate === ALL_TASK_NAME ? ALL_TASK_NAME : selectedTask.length > 0 ? selectedTask[0].title : \"Task Template\";\r\n    return (\r\n        <div className={\"task_btn-group\"}\r\n            style={isFromChat ? { width: \"95%\", textAlign: 'left' } : { float: 'right', width: \"35%\" }}>\r\n            <div className=\"col2-roundblocktask\"\r\n                onClick={() => {\r\n                    setIsVisible(true);\r\n                }}\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded=\"true\">\r\n                <h4 className=\"round_head\"><span className=\"task_type_btn\">{title}</span><span className=\"round_arrow-add-task\">&gt;</span></h4>\r\n            </div>\r\n\r\n            {isVisible && <ul className=\"dropdown-menu shildra_task_ul_dropdown\" id=\"task-type-template\" x-placement=\"bottom-start\">\r\n                {\r\n                    taskTemplateList.map((taskTemplate, index) =>\r\n                        <li key={index}\r\n                            className=\"dropdown-item type_btn\"\r\n                            onClick={() => {\r\n                                setIsVisible(false);\r\n                                setSelTaskTemplate(taskTemplate);\r\n                            }}>\r\n                            {taskTemplate.title}\r\n                        </li>\r\n                    )\r\n                }\r\n                <li className=\"dropdown-item type_btn\"\r\n                    onClick={() => {\r\n                        setIsVisible(false);\r\n                        setSelTaskTemplate(ALL_TASK_NAME);\r\n                    }}>\r\n                    {/* {ALL_TASK_NAME} */}\r\n                </li>\r\n            </ul>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskTemplateDropdownWidget\r\n","import React, { useState } from 'react'\r\nimport '../../../style.css'\r\nimport { TASKNAME, TASKTYPE } from '../../enum_task';\r\n\r\nfunction TaskTypeDropdownWidget(props) {\r\n    const { selTaskType, setSelTaskType, isFromChat } = props;\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const taskTypeList = [\r\n        { itemKey: TASKTYPE.list, title: TASKNAME.list },\r\n        { itemKey: TASKTYPE.prescribe_medication, title: TASKNAME.prescribe_medication },\r\n        { itemKey: TASKTYPE.treatment_plan, title: TASKNAME.treatment_plan },\r\n        { itemKey: TASKTYPE.appintment_scheduling, title: TASKNAME.appintment_scheduling },\r\n        { itemKey: TASKTYPE.refer_to_doctor, title: TASKNAME.refer_to_doctor },\r\n        { itemKey: TASKTYPE.questionnaire, title: TASKNAME.questionnaire },\r\n    ];\r\n\r\n    const childUIList = taskTypeList.map((listInfo, index) => {\r\n        return (\r\n            <li key={index}\r\n                className=\"dropdown-item type_btn\"\r\n                onClick={() => {\r\n                    setIsVisible(false);\r\n                    setSelTaskType(listInfo.itemKey)\r\n                }}>\r\n                {listInfo.title}\r\n            </li>\r\n        );\r\n    });\r\n    console.log(\"taskTypeList === \", taskTypeList)\r\n    console.log(\"taskTypeList props === \", props)\r\n    console.log(\"tyskType selected ==== \", taskTypeList.filter(x => parseInt(x.itemKey) === parseInt(selTaskType)))\r\n    const title = selTaskType === TASKTYPE.none ? \"Task Type\" : taskTypeList.filter(x => parseInt(x.itemKey) === parseInt(selTaskType))[0].title;\r\n    return (\r\n        <div className={\"task_btn-group\"}\r\n            style={isFromChat ? { width: \"95%\", textAlign: 'left' } : { float: 'left', width: \"35%\" }}>\r\n            <div className=\"col2-roundblocktask\"\r\n                onClick={() => setIsVisible(true)}\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded=\"true\">\r\n                <h4 className=\"round_head\"><span className=\"task_type_btn\">{title}</span>\r\n                    <span className=\"round_arrow-add-task\">&gt;</span>\r\n                </h4>\r\n            </div>\r\n            {isVisible && <ul className=\"dropdown-menu shildra_task_ul_dropdown\" id=\"task-type\" x-placement=\"bottom-start\">\r\n                {childUIList}\r\n            </ul>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskTypeDropdownWidget\r\n","import React, { useEffect } from 'react';\r\nimport usePlacesAutocomplete, {\r\n    getGeocode,\r\n    getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport useOnclickOutside from \"react-cool-onclickoutside\";\r\nimport { useState } from 'react';\r\n\r\nconst PlacesAutocomplete = (props) => {\r\n\r\n    const [cursor, setCursor] = useState(0);\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const { address, onChangeAddress } = props;\r\n\r\n    const {\r\n        ready,\r\n        value,\r\n        suggestions: { status, data },\r\n        setValue,\r\n        clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n        requestOptions: {\r\n            /* Define search scope here */\r\n        },\r\n        debounce: 300,\r\n    });\r\n\r\n    console.log(\"ready === \", ready)\r\n    console.log(\"status === \", status)\r\n    console.log(\"data === \", data)\r\n\r\n    useEffect(() => {\r\n        onChangeAddress(value);\r\n    }, [value]);\r\n    useEffect(() => {\r\n        setValue(address);\r\n    }, []);\r\n\r\n    const ref = useOnclickOutside(() => {\r\n        // When user clicks outside of the component, we can dismiss\r\n        // the searched suggestions by calling this method\r\n        clearSuggestions();\r\n    });\r\n\r\n    const handleInput = (e) => {\r\n        if (e.target.value) setOpen(true);\r\n        // Update the keyword of the input element\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleSelect = ({ description }) => () => {\r\n        // When user selects a place, we can replace the keyword without request data from API\r\n        // by setting the second parameter to \"false\"\r\n        setValue(description, false);\r\n        clearSuggestions();\r\n\r\n        // Get latitude and longitude via utility functions\r\n        getGeocode({ address: description })\r\n            .then((results) => getLatLng(results[0]))\r\n            .then(({ lat, lng }) => {\r\n                console.log(\"📍 Coordinates: \", { lat, lng });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"😱 Error: \", error);\r\n            });\r\n    };\r\n\r\n\r\n    const handleKeyDown = (e) => {\r\n        // arrow up/down button should select next/previous list element\r\n        if (e.keyCode === 38 && cursor > 0) setCursor(cursor - 1);\r\n        else if (e.keyCode === 40 && cursor < data.length - 1) setCursor(cursor + 1);\r\n        else if (e.keyCode === 13) {\r\n            setCursor(0);\r\n            setOpen(false);\r\n            console.log(\"data[cursor] --- \", data[cursor]);\r\n            const { description } = data[cursor];\r\n            setValue(description)\r\n        }\r\n    }\r\n    return (\r\n        <div ref={ref}>\r\n            <input\r\n                className=\"add-inputs\"\r\n                value={value}\r\n                onChange={handleInput}\r\n                disabled={!ready}\r\n                placeholder=\"Address\"\r\n                onKeyDown={handleKeyDown}\r\n            />\r\n            {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\r\n            {\r\n                status === \"OK\" && open ?\r\n                    <ul style={{\r\n                        marginTop: \"2px\",\r\n                        width: \"95%\",\r\n                        position: \"absolute\",\r\n                        background: \"white\",\r\n                        borderRadius: \"20px\",\r\n                        boxShadow: \"0px 4px 8px #0000001a\",\r\n                        zIndex: \"1000\",\r\n                        listStyleType: \"none\",\r\n                        textAlign: \"left\",\r\n                        overflowY: \"auto\",\r\n                        paddingright: \"1.5em\"\r\n                    }}>\r\n                        {\r\n                            data.map((suggestion, index) => {\r\n                                const {\r\n                                    place_id,\r\n                                    structured_formatting: { main_text, secondary_text },\r\n                                } = suggestion;\r\n\r\n                                return (\r\n                                    <li key={place_id} onClick={handleSelect(suggestion)} style={{\r\n                                        cursor: \"pointer\",\r\n                                        background: \"none\",\r\n                                        color: cursor === index && \"#4939E3\"\r\n                                    }}>\r\n                                        <strong>{main_text}</strong> <small>{secondary_text}</small>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    : null\r\n            }\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default PlacesAutocomplete","import React, { useState, useEffect } from 'react'\r\nimport { showAlert } from '../../../my_alert_dlg/showAlertDlg';\r\nimport '../../style.css'\r\nimport { TASKTYPE } from '../enum_task';\r\nimport PlacesAutocomplete from './shared/PlacesAutocomplete';\r\n\r\nfunction AppointmentTaskWidget(props) {\r\n    const initValue = {\r\n        task_name: \"\",\r\n        task_dueDate: \"\",\r\n        description: \"\",\r\n        task_detail: {\r\n            phone_number: \"\",\r\n            address: \"\"\r\n        }\r\n    };\r\n\r\n    const { initDetails, taskNo, isNew, onSubmitTask, tempTaskList, sameTaskUIList, isFromChat } = props;\r\n    const [infoDetails, setInfoDetails] = useState({ ...initValue });\r\n\r\n    useEffect(() => {\r\n        if (initDetails)\r\n            setInfoDetails({ ...initDetails });\r\n    }, [initDetails]);\r\n    const validation = () => {\r\n        if (isNew && tempTaskList.filter(x => x.task_name === infoDetails.task_name).length > 0) {\r\n            showAlert({ content: \"The Title can not be duplicated\" });\r\n            return false;\r\n        }\r\n        if (infoDetails.task_name === \"\") {\r\n            showAlert({ content: \"The title can not be empty\" });\r\n        }\r\n        if (infoDetails.task_dueDate === \"\") {\r\n            showAlert({ content: \"The due date can not be empty\" });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const submitTaskInfo = () => {\r\n        if (validation() === false) return;\r\n        onSubmitTask({\r\n            ...infoDetails,\r\n            type_id: TASKTYPE.appintment_scheduling,\r\n            task_name: infoDetails.task_name,\r\n            task_dueDate: infoDetails.task_dueDate,\r\n            description: infoDetails.description,\r\n            task_detail: {\r\n                ...infoDetails.task_detail\r\n            }\r\n        }, isNew ? -1 : taskNo);\r\n        setInfoDetails({ ...initValue });\r\n    }\r\n    console.log(\" appointmnent infoDetails : \", infoDetails)\r\n    return (\r\n        <div className=\"add-input-section\">\r\n            {sameTaskUIList.length > 0 && <div>\r\n                {sameTaskUIList}\r\n                <div className=\"thin-line\" style={{ marginBottom: 10 }} />\r\n            </div>}\r\n\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Task Title\"\r\n                        value={infoDetails.task_name === undefined ? \"\" : infoDetails.task_name}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_name: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"mm/dd/yyyy\"\r\n                        type=\"date\" style={{ color: infoDetails.task_dueDate === undefined || infoDetails.task_dueDate === \"\" ? \"grey\" : \"black\" }}\r\n                        value={infoDetails.task_dueDate === undefined ? \"\" : infoDetails.task_dueDate}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_dueDate: e.target.value })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Phone Number\"\r\n                        value={infoDetails.task_detail.phone_number === undefined ? \"\" : infoDetails.task_detail.phone_number}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, phone_number: e.target.value } })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    {/* <input className=\"add-inputs\" placeholder=\"Address\"\r\n                        value={infoDetails.task_detail.address === undefined ? \"\" : infoDetails.task_detail.address}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, address: e.target.value } })}\r\n                    /> */}\r\n                    {/* <GooglePlacesAutocomplete\r\n                        apiKey=\"AIzaSyAfLIRT6KpzH73ykScFqIvJd3EXkL1qv8Y\"\r\n                    /> */}\r\n                    <PlacesAutocomplete\r\n                        address={infoDetails.task_detail.address ? infoDetails.task_detail.address : \"\"}\r\n                        onChangeAddress={(value) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, address: value } })}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className=\"col-7\">\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-4\"}>\r\n                    <button className=\"primary-button\" onClick={submitTaskInfo}>\r\n                        <p className=\"doctor-notes-button-text\">\r\n                            {isNew === true ? \"Save Task\" : \"Update Task\"}\r\n                        </p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentTaskWidget\r\n","import React, { useEffect, useState } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { showAlert } from '../../../my_alert_dlg/showAlertDlg';\r\nimport '../../style.css'\r\nimport { TASKTYPE } from '../enum_task';\r\nfunction ListTaskWidget(props) {\r\n    const initValue = {\r\n        task_name: \"\",\r\n        task_dueDate: \"\",\r\n        description: \"\",\r\n        task_detail: {\r\n            items: [\"\"],\r\n            sequences: {\r\n                medications_to_stop: \"\",\r\n                items: []\r\n            }\r\n        }\r\n    }\r\n    const { initDetails, taskNo, isNew, onSubmitTask, tempTaskList, sameTaskUIList, isFromChat } = props;\r\n    console.log(\" ListTaskWidget props ==> \", props)\r\n    const [infoDetails, setInfoDetails] = useState({ ...initValue });\r\n\r\n    const [isSequenceData, setIsSequenceData] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(\"initDetails === >\", initDetails)\r\n        if (initDetails) {\r\n            setInfoDetails({ ...initDetails });\r\n            if (initDetails.task_detail) {\r\n                if (initDetails.task_detail.items.length > 0) {\r\n                    setIsSequenceData(false);\r\n                } else {\r\n                    setIsSequenceData(true);\r\n                }\r\n            }\r\n        }\r\n    }, [initDetails]);\r\n\r\n    const toggleSequenceData = (val) => {\r\n        if (val === false && infoDetails.task_detail.items.length === 0) {\r\n            addNewItem(val);\r\n        }\r\n        if (val === true && infoDetails.task_detail.sequences.items.length === 0) {\r\n            addNewItem(val);\r\n        }\r\n        setIsSequenceData(val);\r\n    }\r\n\r\n    const addNewItem = (val) => {\r\n        var condition = isSequenceData;\r\n        if (val !== undefined) {\r\n            condition = val;\r\n        }\r\n        if (condition === false) {\r\n            setInfoDetails({\r\n                ...infoDetails,\r\n                task_detail: {\r\n                    ...infoDetails.task_detail,\r\n                    items: [...infoDetails.task_detail.items, \"\"],\r\n                }\r\n            });\r\n        }\r\n        if (condition === true) {\r\n            setInfoDetails({\r\n                ...infoDetails,\r\n                task_detail: {\r\n                    ...infoDetails.task_detail,\r\n                    sequences: {\r\n                        ...infoDetails.task_detail.sequences,\r\n                        items: [\r\n                            ...infoDetails.task_detail.sequences.items,\r\n                            { sequence_time: \"\", instruction: \"\" }\r\n                        ]\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const validation = () => {\r\n        if (isNew && tempTaskList.filter(x => x.task_name === infoDetails.task_name).length > 0) {\r\n            showAlert({ content: \"The Title can not be duplicated\" });\r\n            return false;\r\n        }\r\n        if (infoDetails.task_name === \"\") {\r\n            showAlert({ content: \"The title can not be empty\" });\r\n        }\r\n        if (infoDetails.task_dueDate === \"\") {\r\n            showAlert({ content: \"The due date can not be empty\" });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const submitTaskInfo = () => {\r\n        if (validation() === false) return;\r\n        onSubmitTask({\r\n            ...infoDetails,\r\n            type_id: TASKTYPE.list,\r\n            task_name: infoDetails.task_name,\r\n            task_dueDate: infoDetails.task_dueDate,\r\n            description: \"\",\r\n            task_detail: !isSequenceData ?\r\n                {\r\n                    ...infoDetails.task_detail,\r\n                    sequences: {\r\n                        medications_to_stop: \"\",\r\n                        items: []\r\n                    }\r\n                }\r\n                :\r\n                {\r\n                    ...infoDetails.task_detail,\r\n                    items: []\r\n                }\r\n        }, isNew ? -1 : taskNo);\r\n        setInfoDetails({ ...initValue });\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-input-section\">\r\n            {\r\n                sameTaskUIList.length > 0\r\n                    ? <div>\r\n                        {sameTaskUIList}\r\n                        <div className=\"thin-line\" style={{ marginBottom: 10 }} />\r\n                    </div>\r\n                    : null\r\n            }\r\n            {/* common header */}\r\n            <div className=\"input-row row\">\r\n                <div className={isFromChat === true ? \"col-12\" : \"col-6\"} style={{ marginTop: 5 }}>\r\n                    <input className=\"add-inputs\" placeholder=\"Task Title\"\r\n                        value={infoDetails.task_name === undefined ? \"\" : infoDetails.task_name}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_name: e.target.value })}\r\n                    />\r\n                </div>\r\n\r\n                <div className={isFromChat === true ? \"col-12\" : \"col-6\"} style={{ marginTop: 5 }}>\r\n                    <input type=\"date\" style={{ color: infoDetails.task_dueDate === undefined ? \"grey\" : \"black\" }}\r\n                        className=\"add-inputs\" placeholder=\"mm/dd/yyyy\"\r\n                        value={infoDetails.task_dueDate === undefined ? \"\" : infoDetails.task_dueDate}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_dueDate: e.target.value })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* particular items */}\r\n            <div>\r\n                {\r\n                    isSequenceData ?\r\n                        <div>\r\n                            <div className=\"input-row row\">\r\n                                <div className={isFromChat === true ? \"col-12\" : \"col-6\"} style={{ marginTop: 5 }}>\r\n                                    <TextareaAutosize className=\"add-inputs\" placeholder=\"Medications To Stop\"\r\n                                        value={infoDetails.task_detail.sequences.medications_to_stop === undefined\r\n                                            ? \"\"\r\n                                            : infoDetails.task_detail.sequences.medications_to_stop}\r\n                                        onChange={(e) => setInfoDetails({\r\n                                            ...infoDetails,\r\n                                            task_detail: {\r\n                                                ...infoDetails.task_detail,\r\n                                                sequences: {\r\n                                                    ...infoDetails.task_detail.sequences,\r\n                                                    medications_to_stop: e.target.value\r\n                                                }\r\n                                            }\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                                <div className={isFromChat === true ? \"col-12\" : \"col-6\"}>\r\n                                </div>\r\n                            </div>\r\n                            {infoDetails.task_detail.sequences.items.map((item, index) => {\r\n                                return <div key={`sequence_item_key_${index}`} className=\"input-row row\">\r\n                                    <div className={isFromChat === true ? \"col-6\" : \"col-3\"}>\r\n                                        <TextareaAutosize className=\"add-inputs\" placeholder={`Time`}\r\n                                            type=\"time\"\r\n                                            value={item.sequence_time}\r\n                                            onChange={(e) => {\r\n                                                var details = infoDetails.task_detail.sequences.items;\r\n                                                details[index] = { ...details[index], sequence_time: e.target.value, };\r\n                                                setInfoDetails({\r\n                                                    ...infoDetails,\r\n                                                    task_detail: {\r\n                                                        ...infoDetails.task_detail,\r\n                                                        sequences: {\r\n                                                            ...infoDetails.task_detail.sequences,\r\n                                                            items: [...details]\r\n                                                        }\r\n                                                    }\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={isFromChat === true ? \"col-6\" : \"col-3\"}>\r\n                                        <TextareaAutosize className=\"add-inputs\" placeholder={`Introduction #${index}`}\r\n                                            value={item.instruction}\r\n                                            onChange={(e) => {\r\n                                                var details = infoDetails.task_detail.sequences.items;\r\n                                                details[index] = { ...details[index], instruction: e.target.value, };\r\n                                                setInfoDetails({\r\n                                                    ...infoDetails,\r\n                                                    task_detail: {\r\n                                                        ...infoDetails.task_detail,\r\n                                                        sequences: {\r\n                                                            ...infoDetails.task_detail.sequences,\r\n                                                            items: [...details]\r\n                                                        }\r\n                                                    }\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={isFromChat === true ? \"col-12\" : \"col-4\"}></div>\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        : infoDetails.task_detail.items.map((item, index) => {\r\n                            return <div key={`no_sequence_item_key_${index}`} className=\"input-row row\">\r\n                                <div className={isFromChat === true ? \"col-12\" : \"col-6\"} style={{ marginTop: 5 }}>\r\n                                    <TextareaAutosize className=\"add-inputs py-2\" placeholder={`Checklist Item #${index}`}\r\n                                        value={item || \"\"}\r\n                                        onChange={(e) => {\r\n                                            var details = infoDetails.task_detail.items;\r\n                                            details[index] = e.target.value;\r\n\r\n                                            setInfoDetails({\r\n                                                ...infoDetails,\r\n                                                task_detail: {\r\n                                                    ...infoDetails.task_detail,\r\n                                                    items: [...details],\r\n                                                }\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={isFromChat === true ? \"col-12\" : \"col-6\"}></div>\r\n                            </div>\r\n                        })\r\n                }\r\n            </div>\r\n\r\n            {/* add item button */}\r\n            <div className=\"input-row row\">\r\n                <div className=\"col-10\">\r\n                    <span onClick={() => addNewItem(undefined)}\r\n                        className=\"task_input purplecol Medication_add_item_btn\" style={{ cursor: \"pointer\" }}>\r\n                        Add Item\r\n                    </span>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                </div>\r\n            </div>\r\n\r\n            {/* toggle buttto to switch the sequence mode AND save button */}\r\n            <div className=\"input-row row\">\r\n                <div className={isFromChat === true ? \"col-12\" : \"col-7\"}>\r\n                    <div className=\"primary-button\"\r\n                        onClick={() => { toggleSequenceData(!isSequenceData) }}>\r\n                        <p className=\"doctor-notes-button-text\">\r\n                            Show in sequence\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className={isFromChat === true ? \"col-12\" : \"col-4\"} style={{ marginTop: 5 }}>\r\n                    <button className=\"primary-button\"\r\n                        onClick={submitTaskInfo}>\r\n                        <p className=\"doctor-notes-button-text\">\r\n                            {isNew === true ? \"Save Task\" : \"Update Task\"}\r\n                        </p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListTaskWidget\r\n","import clsx from 'clsx';\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from '../../../../api/axios';\r\nimport { server } from '../../../../config/server';\r\nimport { showAlert } from '../../../my_alert_dlg/showAlertDlg';\r\nimport '../../style.css'\r\nimport { TASKTYPE } from '../enum_task';\r\n\r\nfunction MedicationTaskWidget(props) {\r\n    const initValue = {\r\n        task_name: \"\",\r\n        description: \"\",\r\n        task_detail: {\r\n            strength: \"\",\r\n            quantity: \"\",\r\n            refill_number: \"\",\r\n            dosage: \"\",\r\n            frequency: \"\",\r\n        }\r\n    };\r\n    const { initDetails, taskNo, isNew, onSubmitTask, tempTaskList, sameTaskUIList, isFromChat, pharmacyList } = props;\r\n    console.log(\"pharmacyList : \", pharmacyList)\r\n    // const isFromChat = true;\r\n    const [cursor, setCursor] = useState(0);\r\n    const [openMedicationName, setOpenMedicationName] = useState(true);\r\n    const [openStrength, setOpenStrength] = useState(true);\r\n    const [infoDetails, setInfoDetails] = useState({ ...initValue });\r\n    const [drugStatement, setDrugStatement] = useState(\"\");\r\n    const [availableMedicationList, setAvailableMedicationList] = useState([]);\r\n    const [availableStrengthList, setAvailableStrengthList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (initDetails) {\r\n            setInfoDetails({ ...initDetails });\r\n            setDrugStatement(\"Take \" + initDetails[\"task_detail\"][\"dosage\"] + \" by mouth \" + initDetails[\"task_detail\"][\"frequency\"]);\r\n        }\r\n    }, [initDetails]);\r\n\r\n    const validation = () => {\r\n        if (isNew && tempTaskList.filter(x => x.task_name === infoDetails.task_name).length > 0) {\r\n            showAlert({ content: \"The Title can not be duplicated\" });\r\n            return false;\r\n        }\r\n        if (infoDetails.task_name === \"\") {\r\n            showAlert({ content: \"The title can not be empty\" });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    // const submitTaskInfo = () => {\r\n    //     if (validation() === false) return;\r\n    //     onSubmitTask({\r\n    //         ...infoDetails,\r\n    //         type_id: TASKTYPE.prescribe_medication,\r\n    //         task_name: infoDetails.task_name,\r\n    //         description: infoDetails.description,\r\n    //         task_detail: {\r\n    //             ...infoDetails.task_detail,\r\n    //             dosage: \"1 pill\",\r\n    //             frequency: \"every 4 hours\",\r\n    //         }\r\n    //     }, isNew ? -1 : taskNo);\r\n    //     setInfoDetails({ ...initValue });\r\n    // }\r\n\r\n    const submitTaskInfo = () => {\r\n        console.log(\" Prescribe Medication Submit !!! \");\r\n        const payload = {\r\n            // label_text: \"Take one tablet by mouth every 4 hours\"\r\n            label_text: drugStatement\r\n        }\r\n\r\n        // Take (dosage) by mouth every (frequency)\r\n        if (validation() === false) return;\r\n        if (!infoDetails.description) {\r\n            showAlert({ content: \"The description can not be empty\" });\r\n            return false;\r\n        }\r\n        axios.post(\"/v1/patient-medication/aws-comprehend\", payload).then(({ data }) => {\r\n            const resultArr = data.data;\r\n            if (Array.isArray(resultArr) && resultArr.length >= 2) {\r\n                const dosage = resultArr[0][\"Text\"];\r\n                const frequency = resultArr[1][\"Text\"];\r\n\r\n                onSubmitTask({\r\n                    ...infoDetails,\r\n                    type_id: TASKTYPE.prescribe_medication,\r\n                    task_name: infoDetails.task_name,\r\n                    description: infoDetails.description,\r\n                    task_detail: {\r\n                        ...infoDetails.task_detail,\r\n                        dosage: dosage,\r\n                        frequency: frequency,\r\n                    }\r\n                }, isNew ? -1 : taskNo);\r\n                setInfoDetails({ ...initValue });\r\n                setDrugStatement(\"\");\r\n            } else {\r\n                showAlert({ content: \"Drug statement is invalid.\" });\r\n            }\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n    const onHandleInputMedicationName = (ev) => {\r\n        const term = ev.target.value;\r\n        console.log(\" iiiiiiiiii term \", term)\r\n        setInfoDetails({ ...infoDetails, task_name: term });\r\n        if (term) {\r\n            axios.get(`${server.domainURL}/nexpil/drug_product.php?Name=${term}&choice=0`).then(({ data }) => {\r\n                console.log(\" iiiiiiiiii data \", data)\r\n                setAvailableMedicationList(data);\r\n            }).catch(err => {\r\n\r\n            });\r\n        }\r\n    }\r\n    const handleKeyDown = (e) => {\r\n        // arrow up/down button should select next/previous list element\r\n        if (e.keyCode === 38 && cursor > 0) setCursor(cursor - 1);\r\n        else if (e.keyCode === 40 && cursor < availableMedicationList.length - 1) setCursor(cursor + 1);\r\n        else if (e.keyCode === 13) {\r\n            setCursor(0);\r\n            setOpenMedicationName(false);\r\n            console.log(\"availableMedicationList[cursor] --- \", availableMedicationList[cursor]);\r\n            const { DrugName } = availableMedicationList[cursor];\r\n            setInfoDetails({ ...infoDetails, task_name: DrugName });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (infoDetails.task_name) {\r\n            axios.get(`${server.domainURL}/nexpil/drug_product.php?name=${infoDetails.task_name}&choice=1`).then(({ data }) => {\r\n                console.log(\" ddddddddd \", data)\r\n                const {\r\n                    DrugName,\r\n                    Form,\r\n                    Strength\r\n                } = data;\r\n                setAvailableStrengthList(data.map(it => it.Strength));\r\n            }).catch(err => {\r\n\r\n            });\r\n        }\r\n    }, [infoDetails.task_name]);\r\n    console.log(\"availableStrengthList: \", availableStrengthList);\r\n    const onHandleInputStrength = (ev) => {\r\n        const string = ev.target.value;\r\n        setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, strength: string } })\r\n    }\r\n    return (\r\n        <div className=\"add-input-section\">\r\n            {\r\n                sameTaskUIList.length > 0 ?\r\n                    <div>\r\n                        {sameTaskUIList}\r\n                        <div className=\"thin-line\" style={{ marginBottom: 10 }} />\r\n                    </div>\r\n                    : null\r\n            }\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"} >\r\n                    <input className=\"add-inputs\"\r\n                        placeholder=\"Medication Name\"\r\n                        value={infoDetails.task_name ? infoDetails.task_name : \"\"}\r\n                        onChange={onHandleInputMedicationName}\r\n                        onKeyDown={handleKeyDown}\r\n                    />\r\n                    {\r\n                        availableMedicationList.length > 0 && openMedicationName ?\r\n                            <ul style={{\r\n                                marginTop: \"2px\",\r\n                                width: \"95%\",\r\n                                position: \"absolute\",\r\n                                background: \"white\",\r\n                                borderRadius: \"20px\",\r\n                                boxShadow: \"0px 4px 8px #0000001a\",\r\n                                zIndex: \"1000\",\r\n                                listStyleType: \"none\",\r\n                                textAlign: \"left\",\r\n                                overflowY: \"auto\",\r\n                                paddingright: \"1.5em\"\r\n                            }}>\r\n                                {\r\n                                    availableMedicationList.map((item, index) => {\r\n                                        const {\r\n                                            uuid,\r\n                                            DrugName\r\n                                        } = item;\r\n\r\n                                        return (\r\n                                            <li key={uuid}\r\n                                                onClick={() => {\r\n                                                    setInfoDetails({ ...infoDetails, task_name: DrugName });\r\n                                                    setOpenMedicationName(false);\r\n                                                }} style={{\r\n                                                    cursor: \"pointer\",\r\n                                                    background: \"none\",\r\n                                                    color: cursor === index && \"#4939E3\"\r\n                                                }}>\r\n                                                <strong>{DrugName}</strong>\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                            : null\r\n                    }\r\n                </div>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\"\r\n                        placeholder=\"Strength\"\r\n                        value={infoDetails.task_detail.strength ? infoDetails.task_detail.strength : \"\"}\r\n                        onChange={onHandleInputStrength}\r\n                        onKeyDown={handleKeyDown}\r\n                    />\r\n                    {\r\n                        availableStrengthList.length > 0 && openStrength ?\r\n                            <ul style={{\r\n                                marginTop: \"2px\",\r\n                                width: \"95%\",\r\n                                position: \"absolute\",\r\n                                background: \"white\",\r\n                                borderRadius: \"20px\",\r\n                                boxShadow: \"0px 4px 8px #0000001a\",\r\n                                zIndex: \"1000\",\r\n                                listStyleType: \"none\",\r\n                                textAlign: \"left\",\r\n                                overflowY: \"auto\",\r\n                                paddingright: \"1.5em\"\r\n                            }}>\r\n                                {\r\n                                    availableStrengthList.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index}\r\n                                                onClick={() => {\r\n                                                    setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, strength: item } });\r\n                                                    setOpenStrength(false);\r\n                                                }}\r\n                                                style={{\r\n                                                    cursor: \"pointer\",\r\n                                                    background: \"none\",\r\n                                                    color: cursor === index && \"#4939E3\"\r\n                                                }}>\r\n                                                <strong>{item}</strong>\r\n                                            </li>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs pr-3\"\r\n                        type=\"number\"\r\n                        placeholder=\"Quantity\"\r\n                        value={infoDetails.task_detail.quantity ? infoDetails.task_detail.quantity : \"\"}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, quantity: e.target.value } })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs pr-3\"\r\n                        type=\"number\"\r\n                        placeholder=\"Number of Refills\"\r\n                        value={infoDetails.task_detail.refill_number ? infoDetails.task_detail.refill_number : \"\"}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, refill_number: e.target.value } })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className=\"col-12 chat-patient-item-space\">\r\n                    <input className=\"add-inputs\"\r\n                        placeholder=\"Drug Statement: i.e. Take 1 pill by mouth every 8 hours.\"\r\n                        value={drugStatement}\r\n                        onChange={(e) => setDrugStatement(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className={clsx(isFromChat === true ? \"row\" : \"input-row row\", \"d-none\")}>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\"\r\n                        placeholder=\"Dosage\"\r\n                        value={infoDetails.task_detail.dosage ? infoDetails.task_detail.dosage : \"\"}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, dosage: e.target.value } })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\"\r\n                        placeholder=\"Frequency\"\r\n                        value={infoDetails.task_detail.frequency ? infoDetails.task_detail.frequency : \"\"}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, frequency: e.target.value } })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <textarea\r\n                        style={{ minHeight: \"150px\", padding: \"20px\" }} className=\"add-inputs\" rows=\"4\" cols=\"50\"\r\n                        value={infoDetails.description ? infoDetails.description : \"\"}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, description: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat === true ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <h3>Patient’s Preferred Pharmacy</h3>\r\n                    <hr />\r\n                    <div className=\"row col-12\">\r\n                        <div className=\"check_icon\"><i className=\"fa fa-check\"></i></div>\r\n                        {\r\n                            pharmacyList && pharmacyList.length > 0\r\n                                ? <h5>{pharmacyList[0]['brand']}<br />{pharmacyList[0]['address']} </h5>\r\n                                : <h5>No preferred Pharmacy</h5>\r\n                        }\r\n                        {/* <h4>CVS Pharmacy<br /> 208 W Washington St.<br /> Chicago, IL 60606</h4> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className=\"col-7\">\r\n                    <span className=\"task_input purplecol Medication_add_item_btn\" style={{ cursor: \"pointer\" }}>\r\n                        Add Item\r\n                    </span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <button className=\"primary-button\" onClick={submitTaskInfo}>\r\n                        <p className=\"doctor-notes-button-text\">\r\n                            {isNew === true ? \"Save Task\" : \"Update Task\"}\r\n                        </p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedicationTaskWidget\r\n","import React, { useState, useEffect } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n// import Autopilot from 'twilio/lib/rest/Autopilot';\r\nimport { showAlert } from '../../../my_alert_dlg/showAlertDlg';\r\nimport '../../style.css'\r\nimport { TASKTYPE } from '../enum_task';\r\n\r\nfunction Questionnaire(props) {\r\n    const initValue = {\r\n        task_name: \"\",\r\n        task_dueDate: \"\",\r\n        task_detail: {\r\n            questions: [{\r\n                type: \"\",\r\n                question: \"\",\r\n                answers: [\"\"],\r\n            }]\r\n        }\r\n    };\r\n\r\n    const { initDetails, taskNo, isNew, onSubmitTask, tempTaskList, sameTaskUIList, isFromChat } = props;\r\n    const [infoDetails, setInfoDetails] = useState({ ...initValue });\r\n\r\n    useEffect(() => {\r\n        if (initDetails)\r\n            setInfoDetails({ ...initDetails });\r\n    }, [initDetails]);\r\n    const validation = () => {\r\n        if (isNew && tempTaskList.filter(x => x.task_name === infoDetails.task_name).length > 0) {\r\n            showAlert({ content: \"The Title can not be duplicated\" });\r\n            return false;\r\n        }\r\n        if (infoDetails.task_name === \"\") {\r\n            showAlert({ content: \"The title can not be empty\" });\r\n        }\r\n        return true;\r\n    }\r\n    const submitTaskInfo = () => {\r\n        if (validation() === false) return;\r\n        onSubmitTask({\r\n            ...infoDetails,\r\n            type_id: TASKTYPE.questionnaire,\r\n            task_name: infoDetails.task_name,\r\n            task_dueDate: infoDetails.task_dueDate,\r\n            description: infoDetails.description,\r\n            task_detail: {\r\n                ...infoDetails.task_detail\r\n            }\r\n        }, isNew ? -1 : taskNo);\r\n        setInfoDetails({ ...initValue });\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-input-section\">\r\n            {sameTaskUIList.length > 0 && <div>\r\n                {sameTaskUIList}\r\n                <div className=\"thin-line\" style={{ marginBottom: 10 }} />\r\n            </div>}\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Questionnaire Title\"\r\n                        value={infoDetails.task_name === undefined ? \"\" : infoDetails.task_name}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_name: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat === true ? \"col-12\" : \"col-6\"} style={{ marginTop: 5 }}>\r\n                    <input\r\n                        type=\"date\" style={{ color: infoDetails.task_dueDate === undefined ? \"grey\" : \"black\" }}\r\n                        className=\"add-inputs\" placeholder=\"Due Date\"\r\n                        value={infoDetails.task_dueDate === undefined ? \"\" : infoDetails.task_dueDate}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_dueDate: e.target.value })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {\r\n                infoDetails.task_detail.questions.map((item, quIndex) => {\r\n                    return (\r\n                        <React.Fragment key={quIndex}>\r\n                            <div className={isFromChat ? \"row\" : \"input-row row\"} key={quIndex}>\r\n                                <div className={isFromChat ? \"col-12 chat-patient-item-space d-flex\" : \"col-6 d-flex\"}>\r\n                                    <span className=\"chat-paitient-questionaire-index\">{quIndex + 1}.</span>\r\n                                    <TextareaAutosize className=\"add-inputs py-2\" placeholder={`Question #${quIndex + 1}`}\r\n                                        value={item.question}\r\n                                        onChange={(e) => {\r\n                                            const questions = [...infoDetails.task_detail.questions];\r\n                                            questions[quIndex][\"question\"] = e.target.value;\r\n                                            setInfoDetails({\r\n                                                ...infoDetails,\r\n                                                task_detail: {\r\n                                                    questions: questions\r\n                                                }\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={isFromChat ? \"col-12 chat-patient-item-space d-flex\" : \"col-6 d-flex\"}>\r\n                                    <button className={item[\"type\"] === \"multiple\" ? \"chat-paitient-questionnaire-choice-active multiple\" : \"chat-paitient-questionnaire-choice multiple\"} onClick={() => {\r\n                                        const questions = [...infoDetails.task_detail.questions];\r\n                                        questions[quIndex][\"type\"] = \"multiple\";\r\n                                        questions[quIndex][\"answers\"] = [\"\", \"\"];\r\n                                        console.log(\" YYYYYYYYYYYYYYYYYY : \", questions)\r\n                                        setInfoDetails({\r\n                                            ...infoDetails,\r\n                                            task_detail: {\r\n                                                questions: questions,\r\n                                            }\r\n                                        });\r\n                                    }}>\r\n                                        <div className={item.type === \"multiple\" ? \"\" : \"d-none\"}>\r\n                                            <i className=\"fa fa-check\" style={{ marginRight: 10 }} />\r\n                                            Multiple Choice\r\n                                        </div>\r\n                                        <div className={item.type === \"multiple\" ? \"d-none\" : \"\"}>\r\n                                            Multiple Choice\r\n                                            <i className=\"fa fa-check\" style={{ marginLeft: 10 }} />\r\n                                        </div>\r\n                                    </button>\r\n                                    <button className={item[\"type\"] === \"short\" ? \"chat-paitient-questionnaire-choice-active\" : \"chat-paitient-questionnaire-choice\"} onClick={() => {\r\n                                        const questions = [...infoDetails.task_detail.questions];\r\n                                        questions[quIndex][\"type\"] = \"short\";\r\n                                        questions[quIndex][\"answers\"] = [\"\"];\r\n                                        setInfoDetails({\r\n                                            ...infoDetails,\r\n                                            task_detail: {\r\n                                                questions: questions,\r\n                                            }\r\n                                        });\r\n                                    }}>\r\n                                        <div className={item.type === \"short\" ? \"\" : \"d-none\"}>\r\n                                            <i className=\"fa fa-check\" style={{ marginRight: 10 }} />\r\n                                            Short Answer\r\n                                        </div>\r\n                                        <div className={item.type === \"short\" ? \"d-none\" : \"\"}>\r\n                                            Short Answer\r\n                                            <i className=\"fa fa-check\" style={{ marginLeft: 10 }} />\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                                {\r\n                                    item.type === \"multiple\" &&\r\n                                    <React.Fragment>\r\n                                        <div className=\"row d-flex\" style={{ width: \"90%\", marginTop: \"10px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                                            {\r\n                                                item.answers.map((answer, anIndex) => {\r\n                                                    return (\r\n                                                        <div className=\"col-6\" key={anIndex} style={{ marginBottom: \"10px\" }}>\r\n                                                            <input className=\"add-inputs\" placeholder={`Choice ${anIndex + 1}`}\r\n                                                                value={answer}\r\n                                                                onChange={(e) => {\r\n                                                                    const answers = [...infoDetails.task_detail.questions[quIndex].answers];\r\n                                                                    answers[anIndex] = e.target.value;\r\n                                                                    const questions = [...infoDetails.task_detail.questions];\r\n                                                                    questions[quIndex][\"answers\"] = answers;\r\n                                                                    setInfoDetails({\r\n                                                                        ...infoDetails,\r\n                                                                        task_detail: {\r\n                                                                            questions: questions\r\n                                                                        }\r\n                                                                    });\r\n                                                                }}\r\n                                                            />\r\n                                                        </ div>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"row\" style={{ width: \"95%\", marginLeft: \"auto\" }}>\r\n                                            <span style={{ marginLeft: \"30px\", color: \"#4939e3\", cursor: \"pointer\" }} onClick={() => {\r\n                                                const questions = [...infoDetails.task_detail.questions];\r\n                                                questions[quIndex][\"type\"] = \"multiple\";\r\n                                                questions[quIndex][\"answers\"].push(\"\");\r\n                                                setInfoDetails({\r\n                                                    ...infoDetails,\r\n                                                    task_detail: {\r\n                                                        questions: questions,\r\n                                                    }\r\n                                                });\r\n                                            }}>Add Choices</span>\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                }\r\n                                {\r\n                                    item.type === \"short\" &&\r\n                                    <React.Fragment>\r\n                                        {\r\n                                            item.answers.map((answer, anIndex) => {\r\n                                                return (\r\n                                                    <div className=\"row\" key={anIndex} style={{ width: \"85%\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"10px\" }}>\r\n                                                        <TextareaAutosize className=\"add-inputs py-2\" placeholder=\"Answer Input Field\"\r\n                                                            value={answer}\r\n                                                            onChange={(e) => {\r\n                                                                const answers = [...infoDetails.task_detail.questions[quIndex].answers];\r\n                                                                answers[anIndex] = e.target.value;\r\n                                                                const questions = [...infoDetails.task_detail.questions];\r\n                                                                questions[quIndex][\"answers\"] = answers;\r\n                                                                setInfoDetails({\r\n                                                                    ...infoDetails,\r\n                                                                    task_detail: {\r\n                                                                        questions: questions\r\n                                                                    }\r\n                                                                });\r\n                                                            }}\r\n                                                        />\r\n                                                    </ div>\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </React.Fragment>\r\n                                }\r\n                            </div>\r\n                        </React.Fragment>\r\n                    );\r\n                })\r\n            }\r\n            <div>\r\n                <span className=\"chat-paitient-questionaire-index\">{infoDetails.task_detail.questions.length + 1}.</span>\r\n                <span style={{ marginLeft: \"30px\", color: \"#4939e3\", cursor: \"pointer\" }} onClick={() => {\r\n                    const questions = [...infoDetails.task_detail.questions];\r\n                    questions.push({\r\n                        type: \"\",\r\n                        question: \"\",\r\n                        answers: [\"\"],\r\n                    });\r\n                    setInfoDetails({\r\n                        ...infoDetails,\r\n                        task_detail: {\r\n                            questions: questions,\r\n                        }\r\n                    });\r\n                }}>Add Question</span>\r\n            </div>\r\n\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className=\"col-7\">\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-4\"}>\r\n                    <button className=\"primary-button\" onClick={submitTaskInfo}>\r\n                        <p className=\"doctor-notes-button-text\">\r\n                            {isNew === true ? \"Save Task\" : \"Update Task\"}\r\n                        </p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Questionnaire","import React, { useState, useEffect } from 'react'\r\nimport { showAlert } from '../../../my_alert_dlg/showAlertDlg';\r\nimport '../../style.css'\r\nimport { TASKTYPE } from '../enum_task';\r\nimport PlacesAutocomplete from './shared/PlacesAutocomplete';\r\n\r\n\r\nfunction ReferTaskWidget(props) {\r\n    const initValue = {\r\n        task_name: \"\",\r\n        description: \"\",\r\n        task_detail: {\r\n            phone_number: \"\",\r\n            address: \"\",\r\n            comments: \"\"\r\n        }\r\n    };\r\n\r\n    const { initDetails, taskNo, isNew, onSubmitTask, tempTaskList, sameTaskUIList, isFromChat } = props;\r\n    const [infoDetails, setInfoDetails] = useState({ ...initValue });\r\n\r\n    useEffect(() => {\r\n        if (initDetails)\r\n            setInfoDetails({ ...initDetails });\r\n    }, [initDetails]);\r\n    const validation = () => {\r\n        if (isNew && tempTaskList.filter(x => x.task_name === infoDetails.task_name).length > 0) {\r\n            showAlert({ content: \"The Title can not be duplicated\" });\r\n            return false;\r\n        }\r\n        if (infoDetails.task_name === \"\") {\r\n            showAlert({ content: \"The title can not be empty\" });\r\n        }\r\n        return true;\r\n    }\r\n    const submitTaskInfo = () => {\r\n        if (validation() === false) return;\r\n        onSubmitTask({\r\n            ...infoDetails,\r\n            type_id: TASKTYPE.refer_to_doctor,\r\n            task_name: infoDetails.task_name,\r\n            description: infoDetails.description,\r\n            task_detail: {\r\n                ...infoDetails.task_detail\r\n            }\r\n        }, isNew ? -1 : taskNo);\r\n        setInfoDetails({ ...initValue });\r\n    }\r\n\r\n    console.log(\" infoDetails ===> \", infoDetails)\r\n    return (\r\n        <div className=\"add-input-section\">\r\n            {sameTaskUIList.length > 0 && <div>\r\n                {sameTaskUIList}\r\n                <div className=\"thin-line\" style={{ marginBottom: 10 }} />\r\n            </div>}\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Doctor's Name\"\r\n                        value={infoDetails.task_name === undefined ? \"\" : infoDetails.task_name}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_name: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Phone Number\"\r\n                        value={infoDetails.task_detail.phone_number === undefined ? \"\" : infoDetails.task_detail.phone_number}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, phone_number: e.target.value } })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Comments\"\r\n                        value={infoDetails.task_detail.comments === undefined ? \"\" : infoDetails.task_detail.comments}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, comments: e.target.value } })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    {/* <input className=\"add-inputs\" placeholder=\"Address\"\r\n                        value={infoDetails.task_detail.address ? infoDetails.task_detail.address : \"\"}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, address: e.target.value } })}\r\n                    /> */}\r\n                    <PlacesAutocomplete\r\n                        address={infoDetails.task_detail.address ? infoDetails.task_detail.address : \"\"}\r\n                        onChangeAddress={(value) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, address: value } })}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={isFromChat ? \"row\" : \"input-row row\"}>\r\n                <div className=\"col-7\">\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-4\"}>\r\n                    <button className=\"primary-button\" onClick={submitTaskInfo}>\r\n                        <p className=\"doctor-notes-button-text\">\r\n                            {isNew === true ? \"Save Task\" : \"Update Task\"}\r\n                        </p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReferTaskWidget\r\n","import React, { useState, useEffect } from 'react'\r\nimport { showAlert } from '../../../my_alert_dlg/showAlertDlg';\r\nimport '../../style.css'\r\nimport { TASKTYPE } from '../enum_task';\r\nfunction TreatmentTaskWidget(props) {\r\n    const initValue = {\r\n        task_name: \"\",\r\n        description: \"\",\r\n        task_detail: {\r\n            frequency: \"\",\r\n            link: \"\"\r\n        }\r\n    };\r\n    const { initDetails, taskNo, isNew, onSubmitTask, tempTaskList, sameTaskUIList, isFromChat } = props;\r\n    const [infoDetails, setInfoDetails] = useState({ ...initValue });\r\n\r\n    useEffect(() => {\r\n        if (initDetails)\r\n            setInfoDetails({ ...initDetails });\r\n    }, [initDetails]);\r\n\r\n    const validation = () => {\r\n        if (isNew && tempTaskList.filter(x => x.task_name === infoDetails.task_name).length > 0) {\r\n            showAlert({ content: \"The Title can not be duplicated\" });\r\n            return false;\r\n        }\r\n        if (infoDetails.task_name === \"\") {\r\n            showAlert({ content: \"The title can not be empty\" });\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const submitTaskInfo = () => {\r\n        if (validation() === false) return;\r\n        onSubmitTask({\r\n            ...infoDetails,\r\n            type_id: TASKTYPE.treatment_plan,\r\n            task_name: infoDetails.task_name,\r\n            description: infoDetails.description,\r\n            task_detail: {\r\n                ...infoDetails.task_detail\r\n            }\r\n        }, isNew ? -1 : taskNo);\r\n        setInfoDetails({ ...initValue });\r\n    }\r\n    return (\r\n        <div className=\"add-input-section\">\r\n            {sameTaskUIList.length > 0 && <div>\r\n                {sameTaskUIList}\r\n                <div className=\"thin-line\" style={{ marginBottom: 10 }} />\r\n            </div>}\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Task Title\"\r\n                        value={infoDetails.task_name === undefined ? \"\" : infoDetails.task_name}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_name: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Frequency\"\r\n                        value={infoDetails.task_detail.frequency === undefined ? \"\" : infoDetails.task_detail.frequency}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, frequency: e.target.value } })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <input className=\"add-inputs\" placeholder=\"Links to picture, video, etc.\"\r\n                        value={infoDetails.task_detail.link === undefined ? \"\" : infoDetails.task_detail.link}\r\n                        onChange={(e) => setInfoDetails({ ...infoDetails, task_detail: { ...infoDetails.task_detail, link: e.target.value } })}\r\n                    />\r\n                </div>\r\n                <div className={isFromChat ? \"col-12 chat-patient-item-space\" : \"col-6\"}>\r\n                    <p>When adding multiple links,<br /> separate each with a comma</p>\r\n                </div>\r\n            </div>\r\n            <div className={isFromChat === true ? \"row\" : \"input-row row\"}>\r\n                <div className=\"col-7\">\r\n                </div>\r\n                <div className={isFromChat ? \"col-12\" : \"col-4\"}>\r\n                    <button className=\"primary-button\" onClick={submitTaskInfo}>\r\n                        <p className=\"doctor-notes-button-text\">\r\n                            {isNew === true ? \"Save Task\" : \"Update Task\"}\r\n                        </p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TreatmentTaskWidget\r\n","import React, { useEffect, useState } from 'react'\r\nimport MyCheckBox from '../../my_check_box/my_check_box';\r\nimport { showConfirm } from '../../my_confirm_dlg/showConfirmDlg';\r\nimport '../style.css'\r\nimport TaskTemplateDropdownWidget from './commonComponents/taskTemplateDropdownWidget/taskTemplateDropdownWidget';\r\nimport TaskTypeDropdownWidget from './commonComponents/taskTypeDropdownWidget/taskTypeDropdownWidget';\r\nimport AppointmentTaskWidget from './detailTasks/appointmentTaskWidget';\r\nimport ListTaskWidget from './detailTasks/listTaskWidget';\r\nimport MedicationTaskWidget from './detailTasks/medicationTaskWidget';\r\nimport Questionnaire from './detailTasks/questionnaire';\r\nimport ReferTaskWidget from './detailTasks/referTaskWidget';\r\nimport TreatmentTaskWidget from './detailTasks/treatmentTaskWidget';\r\nimport { TASKTYPE } from './enum_task';\r\nimport _ from 'lodash';\r\nimport axios from '../../../api/axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction TaskSectionBody(props) {\r\n    const dispatch = useDispatch();\r\n    const { setVisibleBody, taskTemplateList, onSubmitTaskGroup, setIsLoading, isFromChat, isFromNote, pharmacyList } = props;\r\n    const selectedGroup = useSelector(state => state.selectedTaskGroup);\r\n    const updateSelectedGroup = payload => dispatch({ type: \"SELECT_PATIENT_TASK_GROUP\", payload: payload });\r\n\r\n    const isNew = selectedGroup ? false : true\r\n\r\n    console.log(\"TaskSectionBody isNew Value: \", isNew);\r\n    const [selTaskType, setSelTaskType] = useState(TASKTYPE.none);\r\n    const [selTaskTemplate, setSelTaskTemplate] = useState(\"\");\r\n    const [groupName, setGroupName] = useState(\"\");\r\n    const [isTemplate, setIsTemplate] = useState(false);\r\n\r\n    const [tempTaskList, setTempTaskList] = useState([]);\r\n    const [selTempTask, setSelTempTask] = useState(null);\r\n    const [selTempTaskIndex, setSelTempTaskIndex] = useState(-1);\r\n\r\n    console.log(\"isTemplate ===> \", isTemplate)\r\n    useEffect(() => {\r\n        setSelTaskTemplate(\"\");\r\n    }, [taskTemplateList]);\r\n\r\n    useEffect(() => {\r\n        if (!_.isEmpty(selTaskTemplate)) {\r\n            console.log(\"selected template ===> \", selTaskTemplate);\r\n            setGroupName(\"\");\r\n            setIsTemplate(false);\r\n            setTempTaskList([]);\r\n            setSelTempTask(null);\r\n            setSelTempTaskIndex(-1);\r\n            updateSelectedGroup(null);\r\n\r\n            getTaskListBasedOnTemplateID(selTaskTemplate.id);\r\n        }\r\n    }, [selTaskTemplate]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onDeleteTask = async (index, taskInfo) => {\r\n        if (await showConfirm({\r\n            content: 'Are you sure to delete this task?'\r\n        })) {\r\n            // console.log(`${index} has been deleted`);\r\n            // console.log(taskInfo);\r\n            let filteredList;\r\n            if (taskInfo.id === undefined) {\r\n                filteredList = tempTaskList.filter((x, index) => x !== index);\r\n                var task = tempTaskList[index];\r\n                filteredList = tempTaskList.filter(x => x !== task);\r\n            } else {\r\n                filteredList = tempTaskList.filter((x) => x.id !== taskInfo.id);\r\n\r\n                axios.delete(\"v1/tasks/\" + taskInfo.id).then((res) => {\r\n                    console.log(res)\r\n                }).catch((e) => { console.log(e) });\r\n            }\r\n\r\n            // console.log(filteredList);\r\n            setTempTaskList([...filteredList]);\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const getTaskListBasedOnTemplateID = (templateId) => {\r\n        if (templateId === \"\") {\r\n            return \"\";\r\n        }\r\n\r\n        setIsLoading(true);\r\n        axios.get('v1/tasks/' + templateId)\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                const task = res.data.data;\r\n                console.log(\"task ===> \", task);\r\n                // var taskList = task.results;\r\n                // var tempList = [];\r\n                // for (var i = 0; i < taskList.length; i++) {\r\n                //     var task = taskList[i];\r\n                //     tempList = [...tempList, {\r\n                //         task_detail: { ...task.details },\r\n                //         task_name: task.name,\r\n                //         task_dueDate: task.end_date,\r\n                //         type_id: task.type_id\r\n                //     }];\r\n\r\n                // }\r\n                // console.log(\"tempList = \", tempList);\r\n                // setTempTaskList([...tempList]);\r\n                console.log(\"task === \", task);\r\n                setTempTaskList([{\r\n                    task_detail: task.details,\r\n                    task_name: task.name,\r\n                    task_dueDate: task.end_date,\r\n                    type_id: task.type_id\r\n                }]);\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"selectedGroup ===> \", selectedGroup);\r\n        setSelTaskType(TASKTYPE.none);\r\n        setSelTaskTemplate(\"\");\r\n        if (selectedGroup) {\r\n            console.log(\"Is old : \", selectedGroup)\r\n            onSetTempTaskListFromServer([...selectedGroup.results])\r\n            setGroupName(selectedGroup.group_name);\r\n            setIsTemplate(parseInt(selectedGroup.is_template) === 1);\r\n        } else {\r\n            // console.log(\"Is new\")\r\n            setGroupName(\"\");\r\n            setIsTemplate(false);\r\n            setTempTaskList([]);\r\n            setSelTempTask(null);\r\n            setSelTempTaskIndex(-1);\r\n        }\r\n    }, [selectedGroup]);\r\n\r\n    // console.log(taskTemplateList);\r\n\r\n    const onSetTempTaskListFromServer = (taskList) => {\r\n        var tempList = [];\r\n        for (var i = 0; i < taskList.length; i++) {\r\n            var task = taskList[i];\r\n            tempList = [...tempList, {\r\n                ...task,\r\n                task_detail: { ...task.details },\r\n                task_name: task.name,\r\n                task_dueDate: task.end_date\r\n            }];\r\n\r\n        }\r\n        setTempTaskList([...tempList]);\r\n    }\r\n\r\n    const onSubmitTask = (taskInfo, taskNo) => {\r\n        console.log(\"taskInfo --- \", taskInfo);\r\n        console.log(\"taskNo --- \", taskNo);\r\n        if (taskNo === -1) {\r\n            setTempTaskList([...tempTaskList, { ...taskInfo }]);\r\n        } else {\r\n            updateTempTaskList(taskInfo, taskNo);\r\n        }\r\n        setSelTempTask(null);\r\n        setSelTempTaskIndex(-1);\r\n    }\r\n\r\n    const updateTempTaskList = (taskInfo, taskNo) => {\r\n        var tempList = tempTaskList;\r\n        tempList[taskNo] = { ...taskInfo };\r\n        console.log(\" updated tempList === \", tempList)\r\n        setTempTaskList([...tempList]);\r\n    }\r\n    console.log(\" tempTaskList === \", tempTaskList)\r\n\r\n    const onClickTempTask = (index) => {\r\n        console.log(\" onClickTempTask index ==> \", tempTaskList)\r\n        console.log(\" onClickTempTask index ==> \", tempTaskList[index])\r\n        setSelTempTask(tempTaskList[index]);\r\n        setSelTempTaskIndex(index);\r\n        setSelTaskType(tempTaskList[index].type_id);\r\n    }\r\n    const onClickTaskDropdownList = (taskType) => {\r\n        setSelTaskType(taskType);\r\n        setSelTempTask(null);\r\n        setSelTempTaskIndex(-1);\r\n    }\r\n    const onClickCancel = () => {\r\n        dispatch({ type: \"SELECT_PATIENT_TASK_GROUP\", payload: null });\r\n        setVisibleBody(false);\r\n    }\r\n    const userTempTaskUIList = tempTaskList.map((taskInfo, index) => {\r\n        return (\r\n            <div key={index} className=\"patient-page-existing-task-style\">\r\n                <span onClick={() => onClickTempTask(index)}>\r\n                    {taskInfo.task_name}\r\n                </span>\r\n                <span className=\"patient-page-delete-group-button\"\r\n                    onClick={() => onDeleteTask(index, taskInfo)}>\r\n                    &times;\r\n                </span>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const sameTaskUIList = tempTaskList.map((taskInfo, index) => {\r\n        if (parseInt(taskInfo.type_id) !== parseInt(selTaskType)) {\r\n            return <div key={index} style={{ display: \"none\" }}></div>\r\n        }\r\n        return (\r\n            <div key={index} className=\"patient-page-existing-task-style\">\r\n                <span onClick={() => onClickTempTask(index)}>\r\n                    {taskInfo.task_name}\r\n                </span>\r\n                <span className=\"patient-page-delete-group-button\" onClick={() => onDeleteTask(index, taskInfo)}>\r\n                    &times;\r\n                </span>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    console.log(\"typeof selTaskType === \", typeof selTaskType)\r\n    console.log(\"selTaskType === \", selTaskType)\r\n    console.log(\"selTempTask === \", selTempTask)\r\n    console.log(\"selTempTaskIndex === \", selTempTaskIndex)\r\n    \r\n    return (\r\n        <div className=\"add-section\" style={{ background: isFromNote ? \"white\" : \"transparent\", padding: isFromNote ? 20 : 0, paddingTop: 50, borderRadius: isFromNote ? 20 : 0 }}>\r\n            <div className=\"add-section-title-row\">\r\n                <h1 className=\"add-section-title-title-text\">{isNew ? \"Add New Task\" : \"Update the Task\"}</h1>\r\n                <p className=\"add-section-cancel-text\" onClick={onClickCancel}>Cancel</p>\r\n            </div>\r\n            <p className=\"add-section-description\">Create a new task by filling out the information below. You can chose to create an individual task or a series of tasks for the patient to complete in sequence.</p>\r\n            {\r\n                isFromChat\r\n                    ? <div div style={{ width: \"100%\" }}>\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <TaskTypeDropdownWidget\r\n                                selTaskType={selTaskType}\r\n                                setSelTaskType={onClickTaskDropdownList}\r\n                                sameTaskUIList={sameTaskUIList}\r\n                                selTaskTemplate={selTaskTemplate}\r\n                                isFromChat={isFromChat}\r\n                            />\r\n                        </div>\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <TaskTemplateDropdownWidget\r\n                                selTaskTemplate={selTaskTemplate}\r\n                                setSelTaskTemplate={setSelTaskTemplate}\r\n                                taskTemplateList={taskTemplateList}\r\n                                tempTaskList={tempTaskList}\r\n                                sameTaskUIList={sameTaskUIList}\r\n                                isFromChat={isFromChat}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    : <div className=\"addTask_card_row\">\r\n                        <TaskTypeDropdownWidget\r\n                            selTaskType={selTaskType}\r\n                            setSelTaskType={onClickTaskDropdownList}\r\n                            sameTaskUIList={sameTaskUIList}\r\n                            selTaskTemplate={selTaskTemplate}\r\n                        />\r\n                        <span className=\"span_or\">Or</span>\r\n                        <TaskTemplateDropdownWidget\r\n                            selTaskTemplate={selTaskTemplate}\r\n                            setSelTaskTemplate={setSelTaskTemplate}\r\n                            taskTemplateList={taskTemplateList}\r\n                            tempTaskList={tempTaskList}\r\n                            sameTaskUIList={sameTaskUIList}\r\n                        />\r\n                    </div>\r\n            }\r\n\r\n            <div className=\"add_task_detail_container\">\r\n                {parseInt(selTaskType) === TASKTYPE.list &&\r\n                    <ListTaskWidget\r\n                        isNew={!selTempTask || selTempTaskIndex === -1}\r\n                        initDetails={selTempTask}\r\n                        taskNo={selTempTaskIndex}\r\n                        onSubmitTask={onSubmitTask}\r\n                        tempTaskList={tempTaskList}\r\n                        sameTaskUIList={sameTaskUIList}\r\n                        isFromChat={isFromChat}\r\n                    />}\r\n                {parseInt(selTaskType) === TASKTYPE.prescribe_medication &&\r\n                    <MedicationTaskWidget\r\n                        isNew={!selTempTask || selTempTaskIndex === -1}\r\n                        initDetails={selTempTask}\r\n                        taskNo={selTempTaskIndex}\r\n                        onSubmitTask={onSubmitTask}\r\n                        tempTaskList={tempTaskList}\r\n                        sameTaskUIList={sameTaskUIList}\r\n                        onDeleteTask={onDeleteTask}\r\n                        isFromChat={isFromChat}\r\n                        pharmacyList={pharmacyList}\r\n                    />}\r\n                {parseInt(selTaskType) === TASKTYPE.treatment_plan &&\r\n                    <TreatmentTaskWidget\r\n                        isNew={!selTempTask || selTempTaskIndex === -1}\r\n                        initDetails={selTempTask}\r\n                        taskNo={selTempTaskIndex}\r\n                        onSubmitTask={onSubmitTask}\r\n                        tempTaskList={tempTaskList}\r\n                        sameTaskUIList={sameTaskUIList}\r\n                        onDeleteTask={onDeleteTask}\r\n                        isFromChat={isFromChat}\r\n                    />}\r\n                {parseInt(selTaskType) === TASKTYPE.appintment_scheduling &&\r\n                    <AppointmentTaskWidget\r\n                        isNew={!selTempTask || selTempTaskIndex === -1}\r\n                        initDetails={selTempTask}\r\n                        taskNo={selTempTaskIndex}\r\n                        onSubmitTask={onSubmitTask}\r\n                        tempTaskList={tempTaskList}\r\n                        sameTaskUIList={sameTaskUIList}\r\n                        onDeleteTask={onDeleteTask}\r\n                        isFromChat={isFromChat}\r\n                    />}\r\n                {parseInt(selTaskType) === TASKTYPE.refer_to_doctor &&\r\n                    <ReferTaskWidget\r\n                        isNew={!selTempTask || selTempTaskIndex === -1}\r\n                        initDetails={selTempTask}\r\n                        taskNo={selTempTaskIndex}\r\n                        onSubmitTask={onSubmitTask}\r\n                        tempTaskList={tempTaskList}\r\n                        sameTaskUIList={sameTaskUIList}\r\n                        onDeleteTask={onDeleteTask}\r\n                        isFromChat={isFromChat}\r\n                    />}\r\n                {parseInt(selTaskType) === TASKTYPE.questionnaire &&\r\n                    <Questionnaire\r\n                        isNew={!selTempTask || selTempTaskIndex === -1}\r\n                        initDetails={selTempTask}\r\n                        taskNo={selTempTaskIndex}\r\n                        onSubmitTask={onSubmitTask}\r\n                        tempTaskList={tempTaskList}\r\n                        sameTaskUIList={sameTaskUIList}\r\n                        onDeleteTask={onDeleteTask}\r\n                        isFromChat={isFromChat}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n            <div className=\"add-input-section\" style={{ marginTop: isFromChat ? 5 : 30 }}>\r\n                <div className=\"input-row row\">\r\n                    <div className=\"col-12\">\r\n                        <input className=\"add-inputs task-group-name-input\" placeholder=\"Name of Task Set\"\r\n                            value={groupName}\r\n                            onChange={(e) => setGroupName(e.target.value)}\r\n                            disabled={isNew ? \"\" : \"disabled\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-12 patient-page-existing-task-container-style\" style={{ marginTop: isFromChat ? 5 : 20 }}>\r\n                        {userTempTaskUIList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div style={{ marginTop: isFromChat ? 5 : 20 }}>\r\n                    <div className=\"input-row row\">\r\n                        <div className={isFromChat ? \"col-12\" : \"col-6\"}>\r\n                            <MyCheckBox\r\n                                isChecked={isTemplate}\r\n                                setIsChecked={setIsTemplate}\r\n                                isFromChat={isFromChat}\r\n                            />\r\n                        </div>\r\n                        <div className={isFromChat ? \"col-12\" : \"col-6\"}>\r\n                            <button className={tempTaskList.length === 0 ? \"primary-button patient-disabled-button\" : \"primary-button\"}\r\n                                onClick={() => onSubmitTaskGroup(groupName, tempTaskList, isTemplate)}>\r\n                                <p className=\"doctor-notes-button-text\">\r\n                                    {isNew ? \"Confirm and Send Tasks\" : \"Confirm and Update Tasks\"}\r\n                                </p>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskSectionBody\r\n","import React from 'react'\r\nimport '../style.css'\r\nfunction TaskSectionTail(props) {\r\n    // const { confirmAndSendTask } = props;\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskSectionTail\r\n","import axios from './axios';\r\nimport { server } from '../config/server';\r\n\r\n// ==================> APIs <===================//\r\n\r\nconst qs = require('querystring')\r\n// const URL = server.serverURL;\r\n\r\nexport const config = {\r\n   headers: {\r\n      'Authorization': 'Bearer ' + localStorage.token\r\n   }\r\n}\r\n\r\n// Get patients list API\r\nexport function result(endPointURL) {\r\n   return axios.post(endPointURL)\r\n}\r\n\r\nexport function resultPost(endPointURL) {\r\n   return axios.post(endPointURL)\r\n}\r\n\r\nexport function resultGet(endPointURL) {\r\n   return axios.get(endPointURL, {\r\n      headers: {\r\n         'Authorization': 'Bearer ' + localStorage.token\r\n      }\r\n   })\r\n}\r\n\r\n// Get patients informations API\r\nexport function getPatientPersonalInfoAPI(patientID) {\r\n   return axios.get('v1/patients/' + patientID, {\r\n      headers: {\r\n         'Authorization': 'Bearer ' + localStorage.token\r\n      }\r\n   });\r\n}\r\n\r\nexport function getPatientPersonalAllergyAPI(patientID) {\r\n   return axios.get('v1/allergy/' + patientID, {\r\n      headers: {\r\n         'Authorization': 'Bearer ' + localStorage.token\r\n      }\r\n   });\r\n}\r\n\r\nexport function getPatientMedicationDataAPI(patientID) {\r\n   return axios.get('v1/patient-medication/' + patientID, {\r\n      headers: {\r\n         'Authorization': 'Bearer ' + localStorage.token\r\n      }\r\n   });\r\n}\r\n\r\nexport function getPatientHealthDataAPI(patientID) {\r\n   return axios.get('v1/patient-health-data/' + patientID, {\r\n      headers: {\r\n         'Authorization': 'Bearer ' + localStorage.token\r\n      }\r\n   });\r\n}\r\n\r\n\r\nexport function getAssignedDataAPI(patientID) {\r\n   return axios.get('v1/tasks?patient_id=' + patientID, {\r\n      headers: {\r\n         'Authorization': 'Bearer ' + localStorage.token\r\n      }\r\n   });\r\n}\r\nexport function getPatientTaskDataAPI(patientID) {\r\n\r\n   return axios.get('v1/task-group?patient_id=' + patientID, {\r\n      headers: {\r\n         'Authorization': 'Bearer ' + localStorage.token\r\n      }\r\n   });\r\n}\r\n\r\nconst config_urlEncoded = {\r\n   headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Authorization': 'Bearer ' + localStorage.token\r\n   }\r\n}\r\nexport function getHealthGlucoseData_FromCorePhp(patientID, startDate, endDate, callback) {\r\n   const url = server.domainURL + \"/nexpil/health_bloodglucose.php\";\r\n   const param = {\r\n      choice: 3,\r\n      userid: patientID,\r\n      startdate: startDate,\r\n      enddate: endDate\r\n   }\r\n   // console.log(\"start to fetch health data\")\r\n   axios.post(url, qs.stringify(param), { ...config_urlEncoded })\r\n      .then((result) => {\r\n         // console.log(\"health data fetched\", result);\r\n         if (callback !== undefined) {\r\n            callback(result.data);\r\n         }\r\n      })\r\n      .catch((err) => {\r\n         console.log(\"Error\", err);\r\n         if (callback !== undefined)\r\n            callback(\"Error\")\r\n      });\r\n}\r\nexport function getOtherHealthData_FromCorePhp(patientID, startDate, endDate, callback) {\r\n   const url = server.domainURL + \"/nexpil/health_data.php\";\r\n   const param = {\r\n      user_id: patientID,\r\n      startdate: startDate,\r\n      enddate: endDate\r\n   }\r\n   // console.log(\"start to fetch health data\")\r\n   axios.post(url, qs.stringify(param), { ...config_urlEncoded })\r\n      .then((result) => {\r\n         // console.log(\"health data fetched\", result);\r\n         if (callback !== undefined) {\r\n            callback(result.data);\r\n         }\r\n      })\r\n      .catch((err) => {\r\n         console.log(\"Error\", err);\r\n         if (callback !== undefined)\r\n            callback(\"Error\")\r\n      })\r\n}\r\n\r\nexport function getPharmacyList_FromCorePhp(patientID, callback) {\r\n   const url = server.domainURL + \"/nexpil/patient_pharmacy.php\";\r\n   const param = {\r\n      user_id: patientID\r\n   }\r\n   // console.log(\"start to fetch health data\")\r\n   axios.post(url, qs.stringify(param), { ...config_urlEncoded })\r\n      .then((result) => {\r\n         // console.log(\"health data fetched\", result);\r\n         if (callback !== undefined) {\r\n            callback(result.data);\r\n         }\r\n      })\r\n      .catch((err) => {\r\n         console.log(\"Error\", err);\r\n         if (callback !== undefined)\r\n            callback(\"Error\")\r\n      })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport '../style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showConfirm } from \"../../my_confirm_dlg/showConfirmDlg\";\r\nimport { showAlert } from \"../../my_alert_dlg/showAlertDlg\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n// import { TASKADDINGSTATUS, TASKTYPE } from './enum_task';\r\nimport TaskSectionHeader from './taskSectionHeader';\r\nimport TaskSectionBody from './taskSectionBody';\r\nimport TaskSectionTail from './taskSectionTail';\r\nimport { getPharmacyList_FromCorePhp } from '../../../api/axiosAPIs';\r\nimport { GET_PATIENT_TASK_DATA } from '../../../store/actionNames';\r\nimport axios from '../../../api/axios';\r\n\r\nfunction AssignedTask(props) {\r\n    const { isFromNote, isAboveItem, isFromChat, homeUserName } = props;\r\n    const userInfo = useSelector(state => state.patientSelect)\r\n    const { setCreatedGroupId } = props;\r\n    const dispatch = useDispatch();\r\n    const userTaskGroupList = useSelector(state => state.userTaskGroupList);\r\n    const setUserTaskGroupList = (payload) => dispatch({ type: \"SET_PATIENT_TASK_DATA\", payload });\r\n    const [taskTemplateList, setTaskTemplateList] = useState([]);\r\n    const [pharmacyList, setPharmacyList] = useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const selectedGroup = useSelector(state => state.selectedTaskGroup);\r\n    const updateSelectedGroup = payload => dispatch({ type: \"SELECT_PATIENT_TASK_GROUP\", payload: payload })\r\n    const [visibleBody, setVisibleBody] = useState(false);\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        // console.log(userInfo);\r\n        if (userInfo && userInfo.id) {\r\n            getTaskTemplateList();\r\n            getPharmacyList();\r\n            getPatientTaskGroupList();\r\n        }\r\n    }, [userInfo]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const getPharmacyList = () => {\r\n        // getPharmacyList_FromCorePhp\r\n        getPharmacyList_FromCorePhp(userInfo.id, res => {\r\n            console.log(\"get pharmacy list api res : \", res);\r\n            setPharmacyList([...res]);\r\n        })\r\n    }\r\n    const getTaskTemplateList = () => {\r\n        axios.get(`v1/tasks?is_template=1`)\r\n            .then((res) => {\r\n                var templateList = res.data.data.results.map((info) => {\r\n                    return {\r\n                        title: info.template_name,\r\n                        id: info.id\r\n                    }\r\n                });\r\n                // console.log(templateList);\r\n                setTaskTemplateList([...templateList]);\r\n            })\r\n            .catch((err) => {\r\n                setTaskTemplateList([]);\r\n            })\r\n    }\r\n    const getPatientTaskGroupList = () => {\r\n        // console.log(\"userInfo.id\", userInfo.id);\r\n        axios.get('v1/task-group?patient_id=' + userInfo.id)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setUserTaskGroupList([...res.data.data.results]);\r\n            })\r\n            .catch((error) => {\r\n                setUserTaskGroupList([]);\r\n            });\r\n    }\r\n    // const getPatientTaskList = () => {\r\n    //     // console.log(\"userInfo.id\", userInfo.id);\r\n    //     axios.get('v1/tasks?patient_id=' + userInfo.id)\r\n    //         .then((res) => {\r\n    //             console.log(res.data);\r\n    //             setUserTaskList([...res.data.data.results]);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             setUserTaskList([]);\r\n    //         });\r\n    // }\r\n\r\n    const onSubmitTaskGroup = async (groupName, taskList, isTemplate) => {\r\n        console.log(\"group name :\", groupName)\r\n        console.log(\"taskList :\", taskList);\r\n        console.log(\"isTemplate :\", isTemplate);\r\n        // console.log('isTemplate', isTemplate);\r\n        if (taskList.length === 0) {\r\n            await showAlert({ content: \"You need to add at least one task.\" });\r\n            return;\r\n        }\r\n        if (!groupName) {\r\n            await showAlert({ content: \"Please type the name of task set\" });\r\n            return;\r\n        }\r\n\r\n        if (!selectedGroup) {\r\n            console.log(\"adding new group\")\r\n            addNewGroup(groupName, taskList, isTemplate);\r\n        } else {\r\n            console.log(\"updating old group\")\r\n            updateGroup(groupName, taskList, isTemplate);\r\n        }\r\n        console.log(groupName + \"----------\");\r\n\r\n    }\r\n    const addNewGroup = async (groupName, taskList, isTemplate) => {\r\n        console.log(userInfo);\r\n        setIsLoading(true);\r\n        const patient_id = userInfo.id;\r\n\r\n        const groupParam = {\r\n            group_name: groupName,\r\n            patient_id: patient_id,\r\n            is_template: isTemplate ? 1 : 0,\r\n            template_name: groupName\r\n        }\r\n        axios.post('v1/task-group', groupParam)\r\n            .then(async (res) => {\r\n\r\n                // console.log(res);\r\n                var response = res.data.data;\r\n                if (response.status !== true) {\r\n                    showAlert({ content: \"Something went wrong\" });\r\n                }\r\n                const group_id = response.task_group_id;\r\n\r\n                for (var i = 0; i < taskList.length; i++) {\r\n                    const taskParam = {\r\n                        ...taskList[i],\r\n                        patient_id: patient_id,\r\n                        task_group_id: group_id\r\n                    }\r\n                    try {\r\n                        axios.post('v1/tasks', taskParam);\r\n                    } catch (e) {\r\n\r\n                        console.log(\"error\", e);\r\n                        console.log(taskParam);\r\n                    }\r\n                }\r\n                showAlert({ content: \"Successfully added.\" });\r\n                setIsLoading(false);\r\n\r\n                setCreatedGroupId(group_id);\r\n\r\n                var notifyParam = {\r\n                    patient_id: patient_id,\r\n                    title: \"New TASK !\",\r\n                    body: `Dr.${homeUserName === undefined ? \"The current Doctor\" : homeUserName} has just sent the new task - ${groupName}`,\r\n                    notification_id: 3,\r\n                    group_id: group_id\r\n                }\r\n                // console.log(homeUserName);\r\n                // console.log(\"notifyParam\", notifyParam);\r\n                axios.post('v1/push-notify', notifyParam).then((v) => {\r\n                    console.log(v)\r\n                }).catch((err) => {\r\n                    console.log(\"err\", err.message);\r\n                });\r\n                //  getPatientTaskGroupList();\r\n                dispatch({ type: GET_PATIENT_TASK_DATA, payload: userInfo.id });\r\n\r\n                updateSelectedGroup(null);\r\n                setVisibleBody(false);\r\n                getTaskTemplateList();\r\n            })\r\n            .catch((err) => {\r\n                showAlert({ content: \"Something went wrong\" });\r\n                setIsLoading(false);\r\n                updateSelectedGroup(null);\r\n            });\r\n        // updateSelectedGroup(\"\");\r\n    }\r\n    const updateGroup = async (groupName, taskList, isTemplate) => {\r\n        const group_id = selectedGroup.id;\r\n        const patient_id = userInfo.id;\r\n        const taskGroupParam = {\r\n            group_name: groupName,\r\n            patient_id: patient_id,\r\n            is_template: isTemplate ? 1 : 0,\r\n            template_name: groupName\r\n        };\r\n        axios.put('v1/task-group/' + group_id, taskGroupParam).then(async ({ data }) => {\r\n            console.log(\" Update task group response : \", data);\r\n            for (var i = 0; i < taskList.length; i++) {\r\n                var task = taskList[i];\r\n                console.log(\" tttttttttttttttttask :: \", task)\r\n                const taskParam = {\r\n                    ...task,\r\n                    patient_id: patient_id,\r\n                    task_group_id: group_id,\r\n                    is_template: isTemplate ? 1 : 0,\r\n                }\r\n                console.log(taskParam)\r\n                if (task.id) {  // if already exist, update\r\n                    axios.put('v1/tasks/' + task.id, taskParam).then((res) => {\r\n                        console.log('Task updated !!!', res)\r\n                    });\r\n                } else {   // if new, create\r\n                    axios.post('v1/tasks', taskParam).then(res => {\r\n                        console.log('New Task added !!!', res)\r\n                    });\r\n                }\r\n            }\r\n            await showAlert({ content: \"Successfully update the set of group !\" });\r\n            updateSelectedGroup(null);\r\n            setVisibleBody(false);\r\n        }).catch(err => {\r\n            console.log(\" Update task group error\", err)\r\n        });\r\n    }\r\n    const onDeleteGroup = async (groupId) => {\r\n        if (await showConfirm({\r\n            content: 'Are you sure to delete this group?'\r\n        })) {\r\n            // console.log(`${groupId} has been deleted`);\r\n            // var _userTaskGroupList = userTaskGroupList.filter(x => x.id !== groupId);\r\n            // setUserTaskGroupList([..._userTaskGroupList]);\r\n            setIsLoading(true);\r\n            axios.delete('v1/task-group/' + groupId)\r\n                .then((res) => {\r\n                    // console.log(res);\r\n                    dispatch({ type: GET_PATIENT_TASK_DATA, payload: userInfo.id });\r\n                    setIsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    setIsLoading(false);\r\n                });\r\n        } else {\r\n\r\n        }\r\n    }\r\n    const onSelectGroup = async (groupId) => {\r\n        if (groupId === \"\") {\r\n            updateSelectedGroup(null);\r\n            return \"\";\r\n        }\r\n        console.log(\"groupId ===> \", groupId)\r\n        setIsLoading(true);\r\n        axios.get('v1/task-group/' + groupId)\r\n            .then((res) => {\r\n                console.log('taskgroup data response ==>', res);\r\n                setIsLoading(false);\r\n                var groupInfo = res.data.data;\r\n                updateSelectedGroup({ ...groupInfo });\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false);\r\n            })\r\n    }\r\n    return (\r\n        <LoadingOverlay active={isLoading} spinner>\r\n            <div className={isFromChat === true || isFromNote === true ? \"\" : \"card-section\"}>\r\n                {(isFromNote !== true && isFromChat !== true) &&\r\n                    <div className=\"add-section-title-row\">\r\n                        <h1 className=\"card-title\">Assigned Tasks</h1>\r\n                    </div>\r\n                }\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <TaskSectionHeader\r\n                            selectedGroup={selectedGroup}\r\n                            onSelectGroup={onSelectGroup}\r\n                            setVisibleBody={setVisibleBody}\r\n                            onDeleteGroup={onDeleteGroup}\r\n                            isFromChat={isFromChat}\r\n                            userInfo={userInfo}\r\n                            isFromNote={isFromNote}\r\n                            isAboveItem={isAboveItem}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {visibleBody && <TaskSectionBody\r\n                            setVisibleBody={setVisibleBody}\r\n                            taskTemplateList={taskTemplateList}\r\n                            onSubmitTaskGroup={onSubmitTaskGroup}\r\n                            setIsLoading={setIsLoading}\r\n                            isFromChat={isFromChat}\r\n                            pharmacyList={pharmacyList}\r\n                            userInfo={userInfo}\r\n                            isFromNote={isFromNote}\r\n                            isAboveItem={isAboveItem}\r\n                        />}\r\n                        <TaskSectionTail userInfo={userInfo} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </LoadingOverlay>\r\n    )\r\n}\r\n\r\nexport default AssignedTask\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport './note_style.css'\r\nfunction NoteMedication(props) {\r\n    const { userInfo } = props;\r\n    const medication = useSelector(state => state.medication);\r\n    const [chatMedication, setChatMedication] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getMedicationData = (data) => {\r\n            let array = [];\r\n            if (data.length !== 0) {\r\n                for (let index = 0; index < 4; index++) {\r\n                    const element = data[index];\r\n                    element ? array.push(element[\"title\"]) : array.push(\"\");\r\n                }\r\n                setChatMedication(array);\r\n            } else {\r\n                setChatMedication([]);\r\n            }\r\n        }\r\n        getMedicationData(medication);\r\n    }, [medication, userInfo]);     // eslint-disable-line react-hooks/exhaustive-deps\r\n    return (\r\n        <div>\r\n            <div className=\"note-medication-container\">\r\n                {chatMedication.map((item, i) =>\r\n                    <div key={i} className=\"note-medication-every-data-card\">\r\n                        <p className=\"note-medication-subscription-title\">{item.title}</p>\r\n                        <p className=\"note-medication-subscription-description\">{item.description}</p>\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteMedication\r\n","import React, { useState } from 'react';\r\nimport '../style.css';\r\nimport moment from 'moment'\r\nimport LabResultBody from '../labResult/labResultBody';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { server } from '../../../config/server';\r\n// eslint-disable-next-line\r\nimport DoctorAssignedTask from './doctorAssignedTask/doctorAssignedTask';\r\nimport { showAlert } from '../../my_alert_dlg/showAlertDlg';\r\nimport AssignedTask from '../assignedTask/assignedTask';\r\nimport NoteMedication from './doctorNotes_medication';\r\nimport axios from '../../../api/axios';\r\nconst dateFormat = \"YYYY-MM-DDThh:mm:ss\"\r\nexport const DoctorNotesDetails = (props) => {\r\n    const { homeUserName, setCreatedGroupId } = props;\r\n    const { assignedTaskGroupId } = props;\r\n    const { onSignNote, noteInfo, onCreateNewNote, onDiscardNote, onUpdateNote } = props;\r\n    const userInfo = useSelector(state => state.patientSelect);\r\n    const [data, setData] = useState(null);\r\n\r\n\r\n    const [dataType, setDataType] = useState(null);\r\n    const [healthData, setHealthData] = useState(null);\r\n    const [detailsSection, setDetailsSection] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [selectedTest, setSelectedTest] = useState(\"\");\r\n    const [allData, setAllData] = useState(null);\r\n    const [newNoteInfo, setNewNoteInfo] = useState({\r\n        chief_complaint: \"\", HPI: \"\", Objective: \"\", physicalExam_Notes_general: \"\", physicalExam_General: \"\", physicalExam_Heent: \"\", physicalExam_Lungs: \"\", group_id: 0\r\n    });\r\n    // Toggle the details area\r\n    const toggleDetailsSection = () => {\r\n        setDetailsSection(detailsSection === false ? true : false);\r\n    }\r\n\r\n    const [assignedTaskGroup, setAssignedTaskGroup] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        console.log(\" ------------------------- user updated ------------------------------\");\r\n        const fetchHealthData = () => {\r\n            axios.get(server.serverURL + \"v1/patient-lab-data/\" + userInfo.id).then(({ data }) => {\r\n                console.log(\"=== patient lab data response data ===\", data)\r\n                setData(data);\r\n                const labData = data;\r\n                axios.get(server.serverURL + \"v1/healthkit-history?patient_id=\" + userInfo.id).then(({ data }) => {\r\n                    setHealthData(data);\r\n                    setSelectedTest(Object.keys(data.data)[0]);\r\n                    setDataType(0)\r\n                    addObject(data, labData)\r\n                }).catch(error => {\r\n                    console.log(\"Error during fetch health history data === \", error);\r\n                    setHealthData(null);\r\n                    setSelectedTest(\"\");\r\n                    setDataType(0)\r\n                    addObject(null, labData)\r\n                });\r\n            }).catch(error => {\r\n\r\n            });\r\n\r\n        };\r\n        if (userInfo && userInfo.id) fetchHealthData();\r\n    }, [userInfo]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        if (noteInfo !== null) {\r\n            // console.log(noteInfo.group_id);\r\n            if (noteInfo.group_id !== 0) getGroupInfo(noteInfo.group_id);\r\n        }\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        if (noteInfo === null) {\r\n            if (assignedTaskGroupId === undefined) {\r\n                // console.log(\"no task\");\r\n                setAssignedTaskGroup(undefined);\r\n            } else {\r\n                console.log(\"task availble\", \"Group ID: \", assignedTaskGroupId);\r\n                setTimeout(() => {\r\n                    getGroupInfo(assignedTaskGroupId)\r\n                }, 3000);\r\n            }\r\n        }\r\n    }, [assignedTaskGroupId]);  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const getGroupInfo = (groupId) => {\r\n        // console.log(groupId);\r\n        axios.get(server.serverURL + 'v1/task-group/' + groupId)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                var groupInfo = res.data.data;\r\n                setAssignedTaskGroup({ ...groupInfo });\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    }\r\n\r\n    const addObject = (healthdata, labData) => {\r\n        console.log(\" healthdata ===> \", healthdata)\r\n        console.log(\" labData ===> \", labData)\r\n        if (labData) {\r\n            const allData = {\r\n                healthData: healthdata,\r\n                data: labData\r\n            };\r\n            console.log(\"allData ===> \", allData);\r\n            setAllData(allData);\r\n        }\r\n    }\r\n\r\n    // console.log(\"assignedTaskGroup ===>\", assignedTaskGroup);\r\n    // const onSubmitTaskGroup = async (groupName, taskList, isTemplate) => {\r\n    //     console.log(\"group name\", groupName)\r\n    //     console.log(\"taskList\", taskList);\r\n    //     // console.log('isTemplate', isTemplate);\r\n    //     if (taskList.length === 0) {\r\n    //         await showAlert({ content: \"You need to add at least one task.\" });\r\n    //         return;\r\n    //     }\r\n    //     if (groupName === \"\" || groupName === undefined) {\r\n    //         await showAlert({ content: \"Please type the name of task set\" });\r\n    //         return;\r\n    //     }\r\n    //     updateGroup(groupName, taskList, isTemplate);\r\n    // }\r\n\r\n    // const updateGroup = async (groupName, taskList, isTemplate) => {\r\n    //     console.log(\"assignedTaskGroup\", assignedTaskGroup);\r\n    //     console.log(\"userinfo\", userInfo)\r\n    //     const group_id = assignedTaskGroup.id;\r\n    //     const patient_id = userInfo.id;\r\n    //     for (var i = 0; i < taskList.length; i++) {\r\n    //         var task = taskList[i];\r\n    //         const taskParam = {\r\n    //             ...task,\r\n    //             patient_id: patient_id,\r\n    //             task_group_id: group_id\r\n    //         }\r\n    //         console.log(taskParam)\r\n    //         if (task.id !== \"\" && task.id !== undefined) {  // if already exist, update\r\n    //             axios.put(server.serverURL + 'v1/tasks/' + task.id, taskParam, {\r\n    //                 headers: {\r\n    //                     'Authorization': 'Bearer ' + localStorage.token,\r\n    //                     'Content-Type': 'application/json',\r\n    //                 }\r\n    //             }).then((res) => {\r\n    //                 // console.log('updated')\r\n    //             });\r\n    //         } else {   // if new, create\r\n    //             axios.post(server.serverURL + 'v1/tasks', taskParam, {\r\n    //                 headers: {\r\n    //                     'Authorization': 'Bearer ' + localStorage.token,\r\n    //                     'Content-Type': 'application/json',\r\n    //                 }\r\n    //             }).then(res => {\r\n    //                 console.log('added')\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     await showAlert({ content: \"Successfully update the set of group !\" });\r\n    // }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                detailsSection === true ?\r\n                    <div className=\"doctors-notes-details-section\">\r\n                        {noteInfo === null || (noteInfo !== null && isEditing === true) ?\r\n                            <div>\r\n                                <div className=\"doctors-notes-details-section-header-row\">\r\n                                    <div>\r\n                                        <p className=\"header-row-title\">Add <span className=\"header-row-title\">New Note</span></p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Chief Complaint:</p>\r\n                                    <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Type the complaint\"\r\n                                        value={newNoteInfo.chief_complaint} onChange={(e) => setNewNoteInfo({ ...newNoteInfo, chief_complaint: e.target.value })} />\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">HPI:</p>\r\n                                    <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Type the complaint\"\r\n                                        value={newNoteInfo.HPI} onChange={(e) => setNewNoteInfo({ ...newNoteInfo, HPI: e.target.value })} />\r\n\r\n                                    <div className=\"details-part-section\" style={{ width: \"100%\" }}>\r\n                                        <p className=\"parts-titles\">Current Medications:</p>\r\n                                        <p className=\"parts-decription-text\" style={{ fontSize: 14, width: \"100%\" }}></p>\r\n                                        <NoteMedication userInfo />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Objective:</p>\r\n                                    <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Enter Objective\"\r\n                                        value={newNoteInfo.Objective} onChange={(e) => setNewNoteInfo({ ...newNoteInfo, Objective: e.target.value })} />\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Physical Exam:</p>\r\n                                    <div className=\"description-row\">\r\n                                        {/* <span className=\"description-row-description\">General, HEENT, Lungs:</span> */}\r\n                                        <textarea className=\"details-part-description\" placeholder=\"General, HEENT, Lungs:\" value={newNoteInfo.physicalExam_Notes_general} onChange={(e) => setNewNoteInfo({ ...newNoteInfo, physicalExam_Notes_general: e.target.value })} ></textarea>\r\n                                    </div>\r\n                                    {/* <div className=\"description-row\">\r\n                                <p className=\"description-row-title\" style={{ marginLeft: 50 }}>{\"General:\"}</p>\r\n                                <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Type to enter General Text\"\r\n                                    value={newNoteInfo.physicalExam_General} onChange={(e) => setNewNoteInfo({ ...newNoteInfo, physicalExam_General: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"description-row\">\r\n                                <p className=\"description-row-title\" style={{ marginLeft: 50 }}>{\"HEENT:\"}</p>\r\n                                <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Type to enter HEENT Text\"\r\n                                    value={newNoteInfo.physicalExam_Heent} onChange={(e) => setNewNoteInfo({ ...newNoteInfo, physicalExam_Heent: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"description-row\">\r\n                                <p className=\"description-row-title\" style={{ marginLeft: 50 }}>{\"Lungs:\"}</p>\r\n                                <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Type to enter Lungs Text\"\r\n                                    value={newNoteInfo.physicalExam_Lungs} onChange={(e) => setNewNoteInfo({ ...newNoteInfo, physicalExam_Lungs: e.target.value })} />\r\n                            </div> */}\r\n                                </div>\r\n\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Labs & Imaging:</p>\r\n                                    <div className=\"doctors-note-details-available-lab-result-container\">\r\n                                        {/* <LabResultBody data={data}/> */}\r\n                                        {\r\n                                            allData &&\r\n                                            <div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-12 col-sm-6\">\r\n                                                        <div className=\"lab-result-category-container\">\r\n                                                            {\r\n                                                                Object.values(allData).map((category, id) => {\r\n                                                                    console.log('allData ==>', allData);\r\n                                                                    console.log('category ==>', category);\r\n                                                                    return (\r\n                                                                        <div key={id}>\r\n                                                                            {\r\n                                                                                Object.keys(category.data).map((cat, index) => {\r\n                                                                                    console.log('cat =>', cat)\r\n                                                                                    console.log(\" category.data[cat].title :\", category.data[cat].title)\r\n                                                                                    return (<div\r\n                                                                                        key={`lab_result_${index}`}\r\n                                                                                        className=\"lab-result-category-button\"\r\n                                                                                        onClick={() => {\r\n                                                                                            setDataType(id);\r\n                                                                                            setSelectedTest(cat)\r\n                                                                                        }}\r\n                                                                                        style={{ background: selectedTest === cat ? \"#f1effd\" : \"#F7F7FA\" }}\r\n                                                                                    >\r\n                                                                                        <h4 className=\"round_head task_template_btn\">\r\n                                                                                            {category.data[cat].title} <span className=\"round_arrow-add-task\">&gt;</span>\r\n                                                                                        </h4>\r\n                                                                                    </div>)\r\n                                                                                })\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {\r\n                                                        dataType === 0 &&\r\n                                                        <div className=\"col-12 col-sm-6\">\r\n                                                            <div className=\"lab-result-description-section\">\r\n                                                                <div className=\"lab-result-description-card\">\r\n                                                                    <div className=\"title-section\">\r\n                                                                        <p className=\"title-text\">{allData.healthData.data[selectedTest].title}</p>\r\n                                                                        <p className=\"title-date-text\">{allData.healthData.data[selectedTest].last_updated}</p>\r\n                                                                    </div>\r\n                                                                    {\r\n                                                                        allData.healthData.data[selectedTest].details.map((detail, index) => {\r\n                                                                            if (index === 0) {\r\n                                                                                return (\r\n                                                                                    <div key={`${allData.healthData.data[selectedTest].title}_${index}`}\r\n                                                                                        className=\"description-row\"\r\n                                                                                    >\r\n                                                                                        {\r\n                                                                                            Object.entries(detail).map((visible, visIndex) => {\r\n                                                                                                return (\r\n                                                                                                    <div style={{ width: \"33%\" }}>\r\n                                                                                                        <p className=\"description-row-title\">{visible[0]}</p>\r\n                                                                                                        <p className=\"description-row-info\">\r\n                                                                                                            <span>{visible[1]}</span>\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                )\r\n                                                                                            })\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                );\r\n                                                                            } else {\r\n                                                                                return (\r\n                                                                                    <div key={`${allData.healthData.data[selectedTest].title}_${index}`}\r\n                                                                                        className=\"description-row\"\r\n                                                                                    >\r\n                                                                                        {\r\n                                                                                            Object.entries(detail).map((visible, visIndex) => {\r\n                                                                                                return (\r\n                                                                                                    <div style={{ width: \"33%\" }}>\r\n                                                                                                        <p className=\"description-row-info\">\r\n                                                                                                            <span>{visible[1]}</span>\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                )\r\n                                                                                            })\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                );\r\n                                                                            }\r\n                                                                        })\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    }\r\n                                                    {\r\n                                                        dataType === 1 &&\r\n                                                        <div className=\"col-12 col-sm-6\">\r\n                                                            <div className=\"lab-result-description-section\">\r\n                                                                <div className=\"lab-result-description-card\">\r\n                                                                    <div className=\"title-section\">\r\n                                                                        <p className=\"title-text\">{allData.data.data[selectedTest].title}</p>\r\n                                                                        <p className=\"title-date-text\">{allData.data.data[selectedTest].date}</p>\r\n                                                                    </div>\r\n                                                                    {\r\n                                                                        allData.data.data[selectedTest].details.map((detail, index) => {\r\n                                                                            return (<div key={`${allData.data.data[selectedTest].title}_${index}`}\r\n                                                                                className=\"description-row\"\r\n                                                                            >\r\n                                                                                <p className=\"description-row-title\">{detail.title}</p>\r\n                                                                                <p className=\"description-row-info\">\r\n                                                                                    <span>{detail.amount}</span>\r\n                                                                        &nbsp;{detail.unit}\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                            );\r\n                                                                        })\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        !allData && <div className=\"doctors-note-details-part-description-card\">\r\n                                            <div className=\"title-section\">\r\n                                                <p className=\"title-text\">No Lab Data available</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Current Tasks:</p>\r\n\r\n                                    <div className=\"doctors-note-details-part-task-detail-card-will-remove\">\r\n                                        <AssignedTask\r\n                                            homeUserName={homeUserName} setCreatedGroupId={setCreatedGroupId}\r\n                                            isFromNote={true} isAboveItem={true}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Assessment & Plan:</p>\r\n                                    <AssignedTask\r\n                                        homeUserName={homeUserName} setCreatedGroupId={setCreatedGroupId}\r\n                                        isFromNote={true} isAboveItem={false}\r\n                                    />\r\n                                    {/* <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Click here to start writing\" /> */}\r\n                                </div>\r\n\r\n                                <div className=\"doctors-note-details-part-buttons-container\">\r\n                                    <div className=\"discard-button\" onClick={() => {\r\n                                        setNewNoteInfo({ chief_complaint: \"\", HPI: \"\", Objective: \"\", physicalExam_Notes_general: \"\", physicalExam_General: \"\", physicalExam_Heent: \"\", physicalExam_Lungs: \"\" });\r\n                                        setDetailsSection(false);\r\n                                    }}>\r\n                                        <p className=\"doctor-notes-button-text\">Discard</p>\r\n                                    </div>\r\n                                    <div className=\"primary-button\"\r\n                                        onClick={async () => {\r\n                                            console.log(\"created\")\r\n                                            if (newNoteInfo.chief_complaint === \"\") {\r\n                                                showAlert({ content: \"Chief Complaint can not be empty.\" }); return\r\n                                            }\r\n                                            if (newNoteInfo.HPI === \"\") {\r\n                                                showAlert({ content: \"HPI can not be empty.\" }); return\r\n                                            }\r\n                                            if (newNoteInfo.physicalExam_Notes_general === \"\") {\r\n                                                showAlert({ content: \"Physical Exam can not be empty.\" }); return\r\n                                            }\r\n                                            // if (newNoteInfo.physicalExam_General === \"\") {\r\n                                            //     showAlert({ content: \"Physical Exam General can not be empty.\" }); return\r\n                                            // }\r\n                                            // if (newNoteInfo.physicalExam_Heent === \"\") {\r\n                                            //     showAlert({ content: \"Physical Exam HEENT can not be empty.\" }); return\r\n                                            // }\r\n                                            // if (newNoteInfo.physicalExam_Lungs === \"\") {\r\n                                            //     showAlert({ content: \"Physical Exam Lungs can not be empty.\" }); return\r\n                                            // }\r\n                                            if (newNoteInfo.Objective === \"\") {\r\n                                                showAlert({ content: \"Objective can not be empty.\" }); return\r\n                                            }\r\n\r\n                                            if (noteInfo === null) {\r\n                                                await onCreateNewNote(newNoteInfo);\r\n                                                setNewNoteInfo({ chief_complaint: \"\", HPI: \"\", Objective: \"\", physicalExam_Notes_general: \"\", physicalExam_General: \"\", physicalExam_Heent: \"\", physicalExam_Lungs: \"\" });\r\n                                            } else {\r\n                                                await onUpdateNote(newNoteInfo);\r\n                                            }\r\n                                            setDetailsSection(false);\r\n                                        }}>\r\n                                        <p className=\"doctor-notes-button-text\">Save</p>\r\n                                    </div>\r\n                                    {/* <div className=\"primary-button\">\r\n                                <p className=\"doctor-notes-button-text\">Sign</p>\r\n                            </div> */}\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <div className=\"doctors-notes-details-section-header-row\">\r\n                                    <div>\r\n                                        <p className=\"header-row-title\">Written by <span>{noteInfo.doctor_name}</span></p>\r\n                                        <p className=\"header-row-date\">{noteInfo.create_date}</p>\r\n                                    </div>\r\n                                    {noteInfo.is_sign !== 0 &&\r\n                                        <div>\r\n                                            <p className=\"header-row-title\">Signed by <span>{noteInfo.doctor_name}</span></p>\r\n                                            <p className=\"header-row-date\">{moment(noteInfo.updated_at, dateFormat).format(\"YYYY-MM-DD hh:mm:ss\")}</p>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Chief Complaint:</p>\r\n                                    <p className=\"parts-decription-text\">{noteInfo.chief_complaint}</p>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">HPI:</p>\r\n                                    <p className=\"parts-decription-text\">{noteInfo.HPI}</p>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Objective:</p>\r\n                                    <p className=\"parts-decription-text\">{noteInfo.Objective}</p>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Physical Exam:</p>\r\n                                    <div className=\"doctors-note-details-part-description-card\">\r\n                                        <div className=\"description-row\">\r\n                                            <p className=\"description-row-title\">{\"General : \"}</p>\r\n                                            <p className=\"description-row-info\"><span>{noteInfo.physicalExam_General}</span></p>\r\n                                        </div>\r\n                                        <div className=\"description-row\">\r\n                                            <p className=\"description-row-title\">{\"HEENT : \"}</p>\r\n                                            <p className=\"description-row-info\"><span>{noteInfo.physicalExam_Heent}</span></p>\r\n                                        </div>\r\n                                        <div className=\"description-row\">\r\n                                            <p className=\"description-row-title\">{\"Lungs : \"}</p>\r\n                                            <p className=\"description-row-info\"><span>{noteInfo.physicalExam_Lungs}</span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Labs & Imaging:</p>\r\n                                    <div className=\"doctors-note-details-available-lab-result-container\">\r\n                                        <LabResultBody data={data} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Current Tasks:</p>\r\n                                    <div className=\"doctors-note-details-part-task-detail-card-will-remove\">\r\n                                        <AssignedTask\r\n                                            homeUserName={homeUserName}\r\n                                            setCreatedGroupId={setCreatedGroupId}\r\n                                            isFromNote={true}\r\n                                            isAboveItem={true}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"details-part-section\">\r\n                                    <p className=\"parts-titles\">Assessment & Plan:</p>\r\n                                    <AssignedTask\r\n                                        homeUserName={homeUserName}\r\n                                        setCreatedGroupId={setCreatedGroupId}\r\n                                        isFromNote={true}\r\n                                        isAboveItem={false}\r\n                                    />\r\n                                    {/* <input className=\"part-input-text-container part-input-text-style\" placeholder=\"Click here to start writing\" /> */}\r\n                                </div>\r\n                                <div className=\"doctors-note-details-part-buttons-container\">\r\n                                    <div className=\"discard-button\"\r\n                                        onClick={() => setDetailsSection(false)}\r\n                                    >\r\n                                        <p className=\"doctor-notes-button-text\">Discard</p>\r\n                                    </div>\r\n                                    <div className=\"primary-button\"\r\n                                        onClick={() => {\r\n                                            setIsEditing(false);\r\n                                            setDetailsSection(false);\r\n                                        }}\r\n                                    >\r\n                                        <p className=\"doctor-notes-button-text\">Save</p>\r\n                                    </div>\r\n                                    <div className=\"primary-button\" onClick={noteInfo.is_sign === 0 ? () => onSignNote(noteInfo.doctor_note_id) : null}>\r\n                                        {\r\n                                            noteInfo.is_sign === 0\r\n                                                ? <p className=\"doctor-notes-button-text\" >Sign</p>\r\n                                                : <p className=\"doctor-notes-button-text\"><i className=\"fas fa-check\"></i>Signed</p>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div className=\"note-row row doctor-note-card\">\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div className={noteInfo !== null ? \"col-12 col-md-12 col-lg-6\" : \"col-12\"} onClick={() => toggleDetailsSection()}>\r\n                                <p className=\"assigned-task-text\">{noteInfo === null ? \"New Note\" : noteInfo.doctor_name}</p>\r\n                                <p className=\"subscribe-text\">{noteInfo === null ? \"\" : noteInfo.create_date}</p>\r\n                            </div>\r\n                            {noteInfo !== null &&\r\n                                <div className=\"col-12 col-md-12 col-lg-6\" style={{ width: \"100%\" }}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 col-sm-4\">\r\n                                            <div className=\"discard-button\" onClick={() => onDiscardNote(noteInfo)} >\r\n                                                <p className=\"doctor-notes-button-text\">Discard</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-sm-4\">\r\n                                            <div className=\"primary-button\" onClick={() => {\r\n                                                setNewNoteInfo({ ...noteInfo });\r\n                                                setIsEditing(true);\r\n                                                setDetailsSection(true);\r\n                                            }}>\r\n                                                <p className=\"doctor-notes-button-text\">Edit</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12 col-sm-4\">\r\n                                            <div className=\"primary-button\" onClick={noteInfo.is_sign === 0 ? () => onSignNote(noteInfo.doctor_note_id) : null}>\r\n                                                <p className=\"doctor-notes-button-text\">{noteInfo.is_sign === 0 ? \"Sign\" : \"Signed\"}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../style.css';\r\nimport { DoctorNotesDetails } from './doctorNotesComponents';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { server } from '../../../config/server';\r\n\r\nimport { showConfirm } from \"../../my_confirm_dlg/showConfirmDlg\";\r\nimport { showAlert } from \"../../my_alert_dlg/showAlertDlg\";\r\n// import LoadingOverlay from 'react-loading-overlay';\r\n\r\n\r\nexport const DoctorNotes = (props) => {\r\n    const { homeUserName, setCreatedGroupId } = props;\r\n    const { createdGroupId } = props;\r\n    const selectedPatient = useSelector(state => state.patientSelect);\r\n    const [doctorNoteList, setDoctorNoteList] = useState([]);\r\n    const [setIsLoading] = useState(false);\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.token,\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }\r\n    // console.log(\"doctor note\", createdGroupId);\r\n    useEffect(() => {\r\n        if (selectedPatient && selectedPatient.id) {\r\n            getNoteList(selectedPatient.id);\r\n        }\r\n    }, [selectedPatient]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const getNoteList = (userId) => {\r\n        axios.get(server.serverURL + \"v1/doctor-note\", { ...config })\r\n            .then((res) => {\r\n                // console.log(res.data.data);\r\n                var tmpNoteList = res.data.data.results;\r\n                if (tmpNoteList.length > 0) {\r\n                    tmpNoteList = tmpNoteList.filter(x => x.patient_id === userId);\r\n                    // console.log(tmpNoteList);\r\n                    tmpNoteList.sort((a, b) => (a.created_at > b.created_at) ? -1 : ((b.created_at > a.created_at) ? 1 : 0));\r\n\r\n                    setDoctorNoteList([...tmpNoteList]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onCreateNewNote = async (noteInfo) => {\r\n        var _noteInfo = { ...noteInfo, patient_id: selectedPatient.id, group_id: 0 };\r\n\r\n        console.log(\"create note param : \", _noteInfo);\r\n        if (await showConfirm({\r\n            content: 'Are you sure to add new Note?'\r\n        })) {\r\n            // console.log(requestData)\r\n            console.log(\"loadign start\");\r\n            setIsLoading(true);\r\n            axios.post(server.serverURL + \"v1/doctor-note\", _noteInfo, { ...config })\r\n                .then((res) => {\r\n                    // console.log(res);\r\n                    showAlert({ content: \"The new note has been added.\" });\r\n                    getNoteList(selectedPatient.id);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    setIsLoading(false);\r\n                })\r\n        } else {\r\n            console.log('no');\r\n        }\r\n\r\n    }\r\n\r\n    const onDiscardNote = async (noteInfo) => {\r\n        var _noteInfo = { ...noteInfo, patient_id: selectedPatient.id };\r\n        if (await showConfirm({\r\n            content: 'Are you sure to Discard this note?'\r\n        })) {\r\n            setIsLoading(true);\r\n            axios.delete(server.serverURL + \"v1/doctor-note/\" + _noteInfo.doctor_note_id, { ...config })\r\n                .then((res) => {\r\n                    getNoteList(selectedPatient.id);\r\n                    setIsLoading(false);\r\n                    showAlert({ content: \"The note has been discarded.\" });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    setIsLoading(false);\r\n                })\r\n        }\r\n    }\r\n\r\n    const onSignNote = async (noteId) => {\r\n        // console.log(noteId);\r\n        var _noteId = noteId;\r\n        if (await showConfirm({\r\n            content: 'Are you sure to sign this note?'\r\n        })) {\r\n            setIsLoading(true);\r\n            axios.put(server.serverURL + \"v1/doctor-note/\" + _noteId, { \"is_sign\": 1 }, { ...config })\r\n                .then((res) => {\r\n                    getNoteList(selectedPatient.id);\r\n                    setIsLoading(false);\r\n                    showAlert({ content: \"The note has been signed.\" });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    setIsLoading(false);\r\n                })\r\n        }\r\n    }\r\n\r\n    const onUpdateNote = async (noteInfo) => {\r\n        var _noteInfo = { ...noteInfo, patient_id: selectedPatient.id };\r\n        // console.log(\"updated\", noteInfo);\r\n        if (await showConfirm({\r\n            content: 'Are you sure to update this note?'\r\n        })) {\r\n            setIsLoading(true);\r\n            axios.put(server.serverURL + \"v1/doctor-note/\" + _noteInfo.doctor_note_id, _noteInfo, { ...config })\r\n                .then((res) => {\r\n                    showAlert({ content: \"The note has been updated.\" });\r\n                    getNoteList(selectedPatient.id);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    setIsLoading(false);\r\n                })\r\n        }\r\n    }\r\n\r\n    // console.log(\"note list\", doctorNoteList);\r\n    return (\r\n        <div className=\"card-section\">\r\n            <h1 className=\"card-title\">Doctor’s Notes</h1>\r\n            <DoctorNotesDetails\r\n                noteInfo={null} key={`note_info_key_create_new`}\r\n                onCreateNewNote={onCreateNewNote}\r\n                assignedTaskGroupId={createdGroupId}\r\n                homeUserName={homeUserName}\r\n                setCreatedGroupId={setCreatedGroupId}\r\n            />\r\n            {doctorNoteList.map((item, i) =>\r\n                <DoctorNotesDetails\r\n                    noteInfo={item}\r\n                    key={`note_info_key_${i}`}\r\n                    onSignNote={onSignNote}\r\n                    onDiscardNote={onDiscardNote}\r\n                    onUpdateNote={onUpdateNote}\r\n                    homeUserName={homeUserName}\r\n                    setCreatedGroupId={setCreatedGroupId}\r\n                />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport './style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport axios from 'axios';\r\nimport { server } from \"../../config/server\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showAlert } from '../my_alert_dlg/showAlertDlg';\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport const AddNewPatient = () => {\r\n    const dispatch = useDispatch();\r\n    const userRole = useSelector(state => state.userRole);\r\n    // eslint-disable-next-line\r\n    const [patientCode, setPatientCode] = useState(\"\");\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.token,\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }\r\n\r\n    const onPatientRegisterSubmit = e => {\r\n        e.preventDefault();\r\n        let user = {\r\n            \"first_name\": e.target[\"firstName\"].value,\r\n            \"last_name\": e.target[\"lastName\"].value,\r\n            \"phone_number\": e.target[\"phone\"].value,\r\n            \"email\": e.target[\"email\"].value,\r\n        };\r\n        if (userRole === \"admin\") {\r\n            user.password = e.target[\"password\"].value;\r\n            user.password_confirmation = e.target[\"re-password\"].value;\r\n            user.date_of_birth = e.target[\"birthday\"].value;\r\n            // config.body = user;\r\n            axios.post(server.serverURL + 'v1/physician-register', config)\r\n                .then(res => {\r\n                    var data = res.data.data;\r\n                    sendWelcomeMessage((\"+1\" + user[\"phone_number\"]));\r\n                    console.log(data);\r\n                    document.getElementById(\"patientCreateForm\").reset();\r\n                }).catch((e) => {\r\n                    showAlert({ content: e.response.data.error });\r\n                })\r\n        } else {\r\n            // config.body = user;\r\n            user.date_of_birth = e.target[\"birthday\"].value;\r\n            console.log(\" Payload 0 === \", user);\r\n            axios.post(server.serverURL + 'v1/patients', user, config)\r\n                .then(res => {\r\n                    var data = res.data.data;\r\n                    console.log(\" Responase 0 === \", res.data);\r\n                    var patient_info = data.patient_info;\r\n                    const {\r\n                        id,\r\n                        user_id,\r\n                        usertype,\r\n                        DOB,\r\n                        email,\r\n                        first_name,\r\n                        last_name,\r\n                        phone_number,\r\n                        created_at,\r\n                        updated_at,\r\n                    } = data.patient_data;\r\n\r\n                    const payload = {\r\n                        id,\r\n                        user_id,\r\n                        DOB,\r\n                        address: null,\r\n                        age: \"\",\r\n                        chat_date: \"\",\r\n                        chat_date_time: 0,\r\n                        city: \"\",\r\n                        diagnosis: \"\",\r\n                        first_name,\r\n                        last_name,\r\n                        patient_name: first_name + \" \" + last_name,\r\n                        phone_number,\r\n                        recent_chat: \"\",\r\n                        selected: false,\r\n                        state: \"\",\r\n                        street_address: \"\",\r\n                        zip: \"\",\r\n                        zipcode: \"\",\r\n                        userimage: \"https://twilio.nexp.xyz/storage/upload/profile/no-image.jpeg\",\r\n                    }\r\n                    dispatch({ type: \"ADD_TO_PATIENTS_LIST\", payload });\r\n                    sendWelcomeMessage((patient_info));\r\n                    document.getElementById(\"patientCreateForm\").reset();\r\n                }).catch((e) => {\r\n                    showAlert({ content: e.response.data.error });\r\n                })\r\n        }\r\n    }\r\n    // eslint-disable-next-line\r\n    const dataValidation = (data) => {\r\n        for (var index in data) {\r\n            if (data[index] === \"\") {\r\n                return false\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const sendWelcomeMessage = (patient_info) => {\r\n        axios.post(server.serverURL + 'v1/sms-send', {\r\n            \"patient_id\": patient_info.patient_id,\r\n            \"message\": \"Welcome to Nexpil. Download our app to get started.\\n Click the link to complete your setup.\\n \" + patient_info.code_link,\r\n        }, config)\r\n            .then(res => {\r\n                var data = res.data;\r\n                if (data.data.status === \"success\") {\r\n                    showAlert({ content: \"the code was sent successfully to the patient\" });\r\n                }\r\n            }).catch((e) => {\r\n\r\n                showAlert({ content: e.response.data.error });\r\n            })\r\n    }\r\n    // eslint-disable-next-line\r\n    const sendCodeMessage = (phone) => {\r\n        axios.post(server.serverURL + 'v1/sms-send', {\r\n            \"to\": phone,\r\n            \"body\": \"<a href='nexpil://\" + (nanoid()).slice(0, 8) + \"'>Complete setup</a>\"\r\n        }, config)\r\n            .then(res => {\r\n                var data = res.data;\r\n                console.log(data);\r\n                if (data.data === \"success\") {\r\n                    showAlert({ content: \"the code was sent successfully to the patient\" });\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <form className=\"card-section onPatientRegisterSubmit\" onSubmit={onPatientRegisterSubmit} id=\"patientCreateForm\">\r\n            <div>\r\n                <h1>Add Patients</h1>\r\n                <div className=\"add-input-description\">Enter your patient's full name, email address and phone number below</div>\r\n                <div className=\"add-input-description\">and we'll send them a unique code they can use to sign in.</div>\r\n            </div>\r\n            <div className=\"add-input-section\">\r\n                <div className=\"input-row row\">\r\n                    <div className=\"col-6\">\r\n                        <input name=\"firstName\" className=\"add-inputs\" placeholder=\"First Name\" />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <input name=\"lastName\" className=\"add-inputs\" placeholder=\"Last Name\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-row row\">\r\n                    <div className=\"col-4\">\r\n                        <input name=\"birthday\" type=\"date\" className=\"add-inputs\" placeholder=\"Date of Birth\" />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input name=\"email\" type=\"email\" className=\"add-inputs\" placeholder=\"Email Address\" />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input name=\"phone\" type=\"number\" className=\"add-inputs\" placeholder=\"Cell Phone\" />\r\n                    </div>\r\n                </div>\r\n                {userRole === \"admin\" &&\r\n                    <div className=\"input-row row\">\r\n                        <div className=\"col-6\">\r\n                            <input name=\"password\" type=\"password\" className=\"add-inputs\" placeholder=\"Enter Password\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input name=\"re-password\" type=\"password\" className=\"add-inputs\" placeholder=\"Confirm Password\" />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className=\"input-row\">\r\n                    {userRole !== \"admin\" &&\r\n                        <div className=\"col-12\">\r\n                            <button type=\"submit\" className=\"add-button\" >Add Patient</button>\r\n                        </div>\r\n                    }\r\n                    {userRole === \"admin\" &&\r\n                        <button type=\"submit\" className=\"add-button\" >Add Physician</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport { useSelector } from 'react-redux';\r\n// import LabResultBody from './labResult/labResultBody';\r\nimport { server } from '../../config/server';\r\nimport { getHealthGlucoseData_FromCorePhp, getOtherHealthData_FromCorePhp } from '../../api/axiosAPIs';\r\nimport axios from '../../api/axios';\r\n// const enumMood = {\r\n//     \"1\": \"very sad\",\r\n//     \"2\": \"sad\",\r\n//     \"3\": \"neutral\",\r\n//     \"4\": \"happy\",\r\n//     \"5\": \"very happy\",\r\n// }\r\n\r\nexport const HealthDataComponent = (props) => {\r\n    const { userInfo } = props;\r\n    const [data, setData] = useState(null);\r\n    const [gluecoseData, setGluecoseData] = useState({});\r\n    const [otherHealthData, setOtherHealthData] = useState({});\r\n    const [selectedTest, setSelectedTest] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        // console.log(userInfo);\r\n        if (userInfo !== undefined || userInfo !== null) {\r\n            let now = new Date();\r\n            let to = `${now.getFullYear()}-${now.getMonth() + 1 < 10 ? \"0\" + (now.getMonth() + 1) : now.getMonth() + 1}-${now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate()}`;\r\n            let days = 365;\r\n            let before = new Date(now.getTime() - (days * 24 * 60 * 60 * 1000))\r\n            let from = `${before.getFullYear()}-${before.getMonth() + 1 < 10 ? \"0\" + (before.getMonth() + 1) : before.getMonth() + 1}-${before.getDate() < 10 ? \"0\" + before.getDate() : before.getDate()}`;\r\n            // console.log(from, to);\r\n            const fetchHealthData = () => {\r\n                axios.get(server.serverURL + \"v1/healthkit-history?patient_id=\" + userInfo.id).then(({ data }) => {\r\n                    console.log(\"=== healthData === \", data.data)\r\n                    setData(data);\r\n                    setSelectedTest(Object.keys(data.data)[0]);\r\n                }).catch(error => {\r\n                    setData(null);\r\n                    setSelectedTest(\"\");\r\n                })\r\n            };\r\n            fetchHealthData();\r\n            getHealthGlucoseData_FromCorePhp(userInfo.id, from, to, res => {\r\n                // setGluecoseData([...res.history]);\r\n                makeHealthData(res.history);\r\n            });\r\n\r\n            to = `${now.getFullYear()}-${now.getMonth() + 1 < 10 ? \"0\" + (now.getMonth() + 1) : now.getMonth() + 1}-${now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate()}`;\r\n            days = 14;\r\n            before = new Date(now.getTime() - (days * 24 * 60 * 60 * 1000))\r\n            from = `${before.getFullYear()}-${before.getMonth() + 1 < 10 ? \"0\" + (before.getMonth() + 1) : before.getMonth() + 1}-${before.getDate() < 10 ? \"0\" + before.getDate() : before.getDate()}`;\r\n            getOtherHealthData_FromCorePhp(userInfo.id, from, to, res => {\r\n                setOtherHealthData(res);\r\n                // makeHealthData(res.history);\r\n            });\r\n        }\r\n    }, [userInfo]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const makeHealthData = (historyList) => {\r\n        let data = {};\r\n        if (Array.isArray(historyList)) {\r\n            for (let i = 0; i < historyList.length; i++) {\r\n                let history = historyList[i];\r\n                // eslint-disable-next-line\r\n                origin = data[history.date];\r\n                if (origin === undefined) {\r\n                    // eslint-disable-next-line\r\n                    origin = {}\r\n                }\r\n                // eslint-disable-next-line\r\n                origin = {\r\n                    ...origin,\r\n                    date: history.date,\r\n                }\r\n                if (history.timing < 3) {\r\n                    // eslint-disable-next-line\r\n                    origin = { ...origin, beforeDeal: history.measurement }\r\n                } else {\r\n                    // eslint-disable-next-line\r\n                    origin = { ...origin, afterDeal: history.measurement }\r\n                }\r\n                data[history.date] = { ...origin };\r\n\r\n            }\r\n        }\r\n        setGluecoseData(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-section\">\r\n            <h1 className=\"card-title\">Health Data</h1>\r\n            {\r\n                data && selectedTest ?\r\n                    <React.Fragment>\r\n                        {/* <LabResultBody data={data}  title={\"health\"}/> */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <div className=\"lab-result-category-container\">\r\n                                    {\r\n                                        Object.keys(data.data).map((cat, index) => {\r\n                                            return (\r\n                                                <div key={index}\r\n                                                    className=\"lab-result-category-button\"\r\n                                                    onClick={() => setSelectedTest(cat)}\r\n                                                    style={{ background: selectedTest === cat ? \"#f1effd\" : \"#F7F7FA\" }}>\r\n                                                    <h4 className=\"round_head task_template_btn\">\r\n                                                        {data.data[cat].title} <span className=\"round_arrow-add-task\">&gt;</span>\r\n                                                    </h4>\r\n                                                </div>)\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <div className=\"lab-result-description-section\">\r\n                                    <div className=\"lab-result-description-card\">\r\n                                        <div className=\"title-section\">\r\n                                            <p className=\"title-text\">{data.data[selectedTest].title}</p>\r\n                                            <p className=\"title-date-text\">{data.data[selectedTest].last_updated}</p>\r\n                                        </div>\r\n                                        {\r\n                                            data.data[selectedTest].details.map((detail, index) => {\r\n                                                if (index === 0) return (\r\n                                                    <div key={index} className=\"description-row\">\r\n                                                        {\r\n                                                            Object.entries(detail).map((visible, visIndex) => {\r\n                                                                return (\r\n                                                                    <div key={visIndex} style={{ width: \"33%\" }}>\r\n                                                                        <p className=\"description-row-title\">{visible[0]}</p>\r\n                                                                        <p className=\"description-row-info\">\r\n                                                                            <span>{visible[1]}</span>\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                );\r\n                                                else return (\r\n                                                    <div key={index} className=\"description-row\">\r\n                                                        {\r\n                                                            Object.entries(detail).map((visible, visIndex) => {\r\n                                                                return (\r\n                                                                    <div style={{ width: \"33%\" }} key={visIndex}>\r\n                                                                        <p className=\"description-row-info\">\r\n                                                                            <span>{visible[1]}</span>\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                    :\r\n                    <div className=\"lab-result-description-section\">\r\n                        <div className=\"lab-result-description-card\">\r\n                            <div className=\"title-section\">\r\n                                <p className=\"title-text\">\r\n                                    No Health Data\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div >\r\n    );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.css';\r\nimport { BsChatSquareDots } from \"react-icons/bs\";\r\n// import { sharedColors } from '../../theme/sharedColor';\r\nimport { MedicalRecord } from './medicalRecord';\r\nimport { LabResult } from './labResult/labResult';\r\nimport AssignedTask from './assignedTask/assignedTask';\r\nimport { DoctorNotes } from './doctorNotes/doctorNotes';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AddNewPatient } from './addNewPatient';\r\nimport { routers } from '../../config/router';\r\nimport { BsChevronCompactDown, BsChevronCompactUp } from \"react-icons/bs\";\r\nimport { HealthDataComponent } from './healthData';\r\n// import TestTask from './assignedTask/testTask';\r\n\r\nexport const UserDataComponent = (props) => {\r\n    const { homeUserName } = props;\r\n    // const currectSelectedUser = useSelector(state => state.patientSelect);\r\n    const currentSelectedUserData = useSelector(state => state.patientSelect);\r\n    const patientDetailData = useSelector(state => state.patientPersonalInfo);\r\n    const addNewPatientStatus = useSelector(state => state.addNewPatientStatus);\r\n    const [infoData, setInfoData] = useState();\r\n    const [userDetailsSection, setUserDetailsSection] = useState(true);\r\n    const [detailsSectionClass, setDetailsSectionClass] = useState(\"card-user-info-section\");\r\n    // const userInfo = useSelector(state => state.patientSelect);\r\n\r\n    //For assigned task\r\n    const [createdGroupId, setCreatedGroupId] = useState(undefined);\r\n\r\n    const detailsSectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const userInfo = [\r\n            {\r\n                title: \"Date of Birth\",\r\n                info: patientDetailData.DOB,\r\n            }, {\r\n                title: \"Age\",\r\n                info: patientDetailData.age,\r\n            }, {\r\n                title: \"Phone Number\",\r\n                info: patientDetailData.phone_number,\r\n            }, {\r\n                title: \"Street Address\",\r\n                info: patientDetailData.street_address,\r\n            }, {\r\n                title: \"City, State\",\r\n                info: `${patientDetailData.city}, ${patientDetailData.state}`,\r\n            }, {\r\n                title: \"Zip Code\",\r\n                info: patientDetailData.zipcode,\r\n            },\r\n        ];\r\n        setInfoData(userInfo);\r\n        setCreatedGroupId(undefined);\r\n    }, [patientDetailData]);\r\n\r\n\r\n\r\n    const toggleUserInfoDetailsSection = () => {\r\n        setUserDetailsSection(!userDetailsSection);\r\n        setDetailsSectionClass(detailsSectionClass === \"card-user-info-section\" ? \"card-user-info-section-for-mobile\" : \"card-user-info-section\");\r\n    }\r\n\r\n    // Style for primary color button\r\n    // const style = {\r\n    //     background: `linear-gradient(to right, ${sharedColors.primaryButtonGradientStart}, ${sharedColors.primaryButtonGradientEnd})`,\r\n    // }\r\n    console.log(\" currentSelectedUserData === \", currentSelectedUserData);\r\n    console.log(\" addNewPatientStatus ===  \", addNewPatientStatus);\r\n    \r\n\r\n    return (\r\n        <div className=\"data-container\">\r\n            {addNewPatientStatus === true ?\r\n                <AddNewPatient />\r\n                : <div>\r\n                    {/* <TestTask /> */}\r\n                    <div className=\"card-section\">\r\n                        <div className=\"card-avatar-section\">\r\n                            {/* eslint-disable-next-line */}\r\n                            <img src={currentSelectedUserData.userimage} className=\"card-user-avatar-image\" />\r\n                            <div className=\"user-name-container\">\r\n                                <h1 className=\"user-name\">{currentSelectedUserData.patient_name}</h1>\r\n                                <p className=\"user-type\">{currentSelectedUserData.type}</p>\r\n                            </div>\r\n                            <Link to={routers.CHATPAGE}>\r\n                                <div className=\"show-chat-icon-container\">\r\n                                    <BsChatSquareDots className=\"chat-button\" size=\"24px\" color=\"white\" />\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"toggle-info-data-section\" onClick={() => toggleUserInfoDetailsSection()}>\r\n                            {userDetailsSection === true ? <BsChevronCompactDown size=\"20px\" color=\"#4939E3\" /> : <BsChevronCompactUp size=\"20px\" color=\"#4939E3\" />}\r\n                        </div>\r\n                        <div className={detailsSectionClass} ref={detailsSectionRef}>\r\n                            {infoData && infoData.map((item, i) =>\r\n                                <div key={i} className=\"info-section\">\r\n                                    <p className=\"user-info-title\">{item.title}</p>\r\n                                    <p className=\"user-info-description\">{item.info}</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <MedicalRecord userInfo={currentSelectedUserData} />\r\n                    <HealthDataComponent userInfo={currentSelectedUserData} />\r\n                    <LabResult />\r\n                    <AssignedTask homeUserName={homeUserName} setCreatedGroupId={setCreatedGroupId} />\r\n                    <DoctorNotes createdGroupId={createdGroupId} homeUserName={homeUserName} setCreatedGroupId={setCreatedGroupId} />\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './style.scss';\r\nimport { BsFillCameraVideoFill, BsPlus } from \"react-icons/bs\";\r\nimport { Icon } from '@iconify/react';\r\nimport bxsMessage from '@iconify/icons-bx/bxs-message';\r\nimport { server } from \"../../config/server\";\r\nimport axios from 'axios';\r\nimport TwilioChat from 'twilio-chat'\r\nimport jwt from 'jwt-simple';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Loading from 'react-loading';\r\nimport { showAlert } from '../my_alert_dlg/showAlertDlg';\r\n\r\nvar sentImage = \"\";\r\nvar receivedImage = \"\";\r\n\r\nexport const ChatWindow = ({ page, setVideoCall, chatInfo, roomName }) => {    \r\n\r\n    const currentUrl = window.location.href;\r\n    const dispatch = useDispatch();\r\n    const [chatTexts, setChatTexts] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [channelName, setChannelName] = useState(\"\");\r\n    const [chatToken, setChatToken] = useState(\"\")\r\n    const [videoToken, setVideoToken] = useState(\"\");\r\n    const [smsTo, setSmsTo] = useState(\"\");\r\n    const [smsBody, setSmsBody] = useState(\"\");\r\n    // const [ setFriendly ] = useState(\"\")\r\n    /* const [ receiver, setReceiver ] = useState('') */\r\n    const [chatUserInfo, setChatUserInfo] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const messagesEndRef = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.token\r\n        }\r\n    }\r\n    /*   console.log(\"chat text\", chatTexts) */\r\n    useEffect(() => {\r\n        if (page) {\r\n            setChatTexts([]);\r\n            configureChannelEvents();\r\n            /*  chatInfoValidation(); */\r\n        } else {\r\n            if (chatInfo) {\r\n                setChatTexts([]);\r\n                chatInfoValidation();\r\n            }\r\n        }\r\n        if(currentUrl.slice(-8) == \"redirect\") {\r\n            // goVideoCall();\r\n        }\r\n    }, [chatInfo]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const setChatImage = (data) => {\r\n        sentImage = data[\"receiveImage\"];\r\n        receivedImage = data[\"sendImage\"];\r\n        userRoleValidation(data);\r\n    }\r\n\r\n    const userRoleValidation = (data) => {\r\n        // if ((data[\"send\"] === localStorage.userName) || (data[\"receive\"] === localStorage.userName)) {\r\n        setChannelName(data[\"channelName\"]);\r\n        getToken(data[\"channelName\"])\r\n            .then(createChatClient)\r\n            .then(joinGeneralChannel)\r\n            .then(configureChannelEvents)\r\n            .catch((error) => {\r\n                showAlert({ content: \"Error: \" + error.message });\r\n            })\r\n        // } else {\r\n        //     showAlert({ content: \"Please select the user\" });\r\n        // }\r\n    }\r\n\r\n    const chatInfoValidation = () => {\r\n        let data = jwt.decode(chatInfo, \"xxx\");\r\n        let obj = {};\r\n        if (data.send === localStorage.userId) {\r\n            obj = {\r\n                send: data[\"send\"],\r\n                sendImage: data[\"sendImage\"],\r\n                receive: data[\"receive\"],\r\n                receiveImage: data[\"receiveImage\"],\r\n                channelName: data[\"channelName\"],\r\n                receiver: data[\"receiver\"],\r\n                phone_number: data[\"r_phone_number\"],\r\n                date: data[\"date\"],\r\n                userInfo: data[\"userInfo\"],\r\n\r\n\r\n            }\r\n\r\n            /*  setFriendly(data[\"friendlyName\"])\r\n             console.log(\"friendly\", friendly) */\r\n\r\n            dispatch({ type: 'GET_USER_CHAT', payload: data[\"userInfo\"] });\r\n            dispatch({ type: 'GET_PATIENT_MEDICATION_DATA', payload: data[\"userInfo\"].id });\r\n            dispatch({ type: 'GET_ASSIGNED_DATA', payload: data[\"userInfo\"].id });\r\n        } else {\r\n            obj = {\r\n                send: data[\"send\"],\r\n                sendImage: data[\"sendImage\"],\r\n                receive: data[\"receive\"],\r\n                receiveImage: data[\"receiveImage\"],\r\n                channelName: data[\"channelName\"],\r\n                receiver: data[\"sender\"],\r\n                phone_number: data[\"s_phone_number\"],\r\n                date: data[\"date\"],\r\n                userInfo: {}\r\n            }\r\n        }\r\n        setChatUserInfo(obj);\r\n        setChatImage(obj);\r\n    }\r\n\r\n    const getToken = (channelName) => {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            resolve(getChatToken(channelName))\r\n        }\r\n\r\n        )\r\n    }\r\n\r\n    const getChatToken = (channelName) => {\r\n        config.body = {};\r\n        /*  console.log(\"channel name\", channelName) */\r\n        return new Promise((resolve, reject) => {\r\n            axios.post(server.serverURL + 'v1/twilio-token', {\r\n                \"identity\": `Dr_${localStorage.userId}`\r\n            }, config)\r\n                .then(res => {\r\n                    let chatToken = res.data.token\r\n                    setChatToken(res.data.token)\r\n                    resolve({ chatToken, channelName });\r\n                    /*  resolve(getVideoToken(channelName, data.token));\r\n                     console.log(\"data token\", data.token, videoToken ) */\r\n                });\r\n        })\r\n    }\r\n\r\n\r\n    const getVideoToken = (channelName) => {\r\n        axios.post(server.serverURL + 'v1/video-token', {\r\n            \"room\": channelName,\r\n            \"name\": `Dr_${localStorage.userId}`\r\n        }, config)\r\n            .then(res => {\r\n                var data = res.data;\r\n                /*   console.log(\"res\", data.token) */\r\n                setVideoToken(data.token);\r\n                // resolve({chatToken, channelName});\r\n                // sendVideoNotification(data.token)\r\n            });\r\n\r\n    }\r\n\r\n    const sendVideoNotification = (twilioVideoToken) => {\r\n\r\n        let obj = {\r\n            patient_id: chatUserInfo[\"receive\"],\r\n            title: `Time to Call ${localStorage.userName}`,\r\n            body: `Your Telemedicine call with ${localStorage.userName} starts soon. Click here to began the Call`,\r\n            notification_id: \"2\",\r\n            room_name: channelName\r\n        }\r\n        /*  console.log(\"obj\", obj, config) */\r\n        axios.post(server.serverURL + 'v1/push-notify', obj, config)\r\n            .then(res => {\r\n                // var data = res.data;\r\n                /*   console.log(\"video HERE\", twilioVideoToken) */\r\n                setVideoCall(twilioVideoToken, channelName);\r\n\r\n            });\r\n    }\r\n\r\n    const goVideoCall = () => {\r\n        if (loading === true && chatUserInfo) {\r\n            showAlert({ content: \"loading...\" });\r\n        } else if (!window.channel) {\r\n            showAlert({ content: \"Please select the user\" });\r\n        } else {\r\n            /*  console.log(videoToken, \"videoToken\") */\r\n            if (videoToken) {\r\n                sendVideoNotification(videoToken);\r\n            } else {\r\n                getVideoToken(channelName)\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const createChatClient = (data) => {\r\n        /*  console.log(data, \"data\") */\r\n        return new Promise((resolve, reject) => {\r\n            let channelName = data[\"channelName\"];\r\n            let chatClient = new TwilioChat(data[\"chatToken\"]);\r\n            /*     console.log(\"chatclient\", chatClient) */\r\n            resolve({ chatClient, channelName });\r\n\r\n        })\r\n    }\r\n\r\n    const joinGeneralChannel = ({ chatClient, channelName }) => {\r\n        return new Promise((resolve, reject) => {\r\n            chatClient.getSubscribedChannels().then(() => {\r\n                chatClient.getChannelByUniqueName(channelName).then((channel) => {\r\n                    window.channel = channel;\r\n                    channel.join().then(() => {\r\n                        window.addEventListener('beforeunload', () => channel.leave())\r\n                        resolve(channel);\r\n                    }).catch(() => reject(Error('Could not join general channel.')))\r\n                }).catch((e) => createGeneralChannel(chatClient, channelName, e))\r\n            }).catch(() => reject(Error('Could not get channel list.')))\r\n        })\r\n    }\r\n    // console.log(\"receiver\", receiver)\r\n    // console.log(\"string\", [receiver.id].toString())\r\n    // console.log(\"string 1\", String(receiver.id))\r\n\r\n\r\n    const createGeneralChannel = (chatClient, channelName, e, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            chatClient\r\n                .createChannel({ uniqueName: channelName, friendlyName: localStorage.userName })\r\n                .then((channel) => {\r\n                    window.channel = channel;\r\n                    channel.join().then(() => {\r\n                        /*  let strPatientId = String(receiver.id) */\r\n                        let identity = channelName.split(\"/\")[1]\r\n                        /* console.log(\"channel\", channel) */\r\n                        axios.post(server.serverURL + 'v1/create-member-resource', {\r\n\r\n                            \"identity\": identity,\r\n                            \"channel_id\": channel.sid,\r\n\r\n                        }, config)/* .then(res => console.log(\"ressss\", res)) */\r\n                        /* .catch(err => console.log(`${err} in creating member`)) */\r\n                        /*  channel.add(strPatientId).catch((error) =>console.log(\"Errorrrr - \", error)) */\r\n\r\n\r\n                        window.addEventListener('beforeunload', () => channel.leave())\r\n                        resolve(channel);\r\n                    }).catch(() => reject(Error('Could not join general channel.')))\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                })\r\n        })\r\n    }\r\n\r\n    const configureChannelEvents = () => {\r\n        window.channel.getMessages().then(messagesLoaded).then((msg) => {\r\n            window.channel.on('messageAdded', ({ author, body }) => {\r\n                let messageData = messageAdded(author, body, msg);\r\n                /* console.log(\"author, body,data\", messageData) */\r\n                setMessageHistory(messageData);\r\n            })\r\n            let data = jwt.decode(chatInfo, \"xxx\");\r\n            let obj = {\r\n                send: data[\"send\"],\r\n                sendImage: data[\"sendImage\"],\r\n                receive: data[\"receive\"],\r\n                receiveImage: data[\"receiveImage\"],\r\n                channelName: data[\"channelName\"],\r\n                receiver: data[\"receiver\"],\r\n                phone_number: data[\"r_phone_number\"],\r\n                date: data[\"date\"],\r\n                userInfo: data[\"userInfo\"],\r\n\r\n\r\n            }\r\n            setChatUserInfo(obj);\r\n\r\n            // window.channel.on('memberJoined', (member) => {\r\n            //     alert(member.identity + \" has joined the channel\");\r\n            // })\r\n\r\n            // window.channel.on('memberLeft', (member) => {\r\n            //     alert(member.identity + \" has left the channel.\");\r\n            // })\r\n        });\r\n    }\r\n\r\n    const messagesLoaded = messagePage => {\r\n        let messageHistory = [];\r\n        for (let index = 0; index < messagePage.items.length; index++) {\r\n            let element = messagePage.items[index];\r\n            let messageHistoryRecord;\r\n            if (element.author === `Dr_${localStorage.userId}` || element.author === localStorage.userId) {\r\n                messageHistoryRecord = {\r\n                    key: \"sent\",\r\n                    text: element.body\r\n                }\r\n            } else {\r\n                messageHistoryRecord = {\r\n                    key: \"received\",\r\n                    text: element.body\r\n                }\r\n            }\r\n            messageHistory.push(messageHistoryRecord);\r\n        }\r\n        messageHistory = messageHistory.reverse();\r\n        setChatTexts(messageHistory);\r\n        setLoading(false);\r\n        return messageHistory;\r\n    };\r\n\r\n    const messageAdded = (author, message, messageHistory) => {\r\n        let virtualChatTexts = messageHistory;\r\n        let chatRowRecord = {};\r\n        if (author === `Dr_${localStorage.userId}` || author === localStorage.userId) {\r\n            chatRowRecord = {\r\n                key: \"sent\",\r\n                text: message\r\n            }\r\n        } else {\r\n            chatRowRecord = {\r\n                key: \"received\",\r\n                text: message\r\n            }\r\n        }\r\n        virtualChatTexts.unshift(chatRowRecord);\r\n        return virtualChatTexts;\r\n    };\r\n\r\n    const setMessageHistory = (data) => {\r\n        setChatTexts(data);\r\n        setNewMessage(\".\");\r\n        setNewMessage(\"\");\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    const sendMessageToDB = (message) => {\r\n        let obj = {\r\n            sender_id: chatUserInfo[\"send\"],\r\n            recipient_id: chatUserInfo[\"receive\"],\r\n            body: message,\r\n            chat_by: 1\r\n        }\r\n        /*    console.log(\"send msg onj\", obj) */\r\n        axios.post(server.serverURL + 'v1/messages', obj, config)\r\n            .then(res => {\r\n                // var data = res.data;\r\n            });\r\n    }\r\n\r\n    const sendNotification = (message) => {\r\n        let obj = {\r\n            patient_id: chatUserInfo[\"receive\"],\r\n            title: localStorage.userName,\r\n            body: message,\r\n            notification_id: 1,\r\n            channel_name: channelName || roomName\r\n        }\r\n        /* console.log(\"obj\", obj) */\r\n        axios.post(server.serverURL + 'v1/push-notify', obj, config)\r\n            .then(res => {\r\n                // var data = res.data;\r\n                /*  console.log(\"notification\", data) */\r\n            });\r\n    }\r\n\r\n    const onSendMessage = () => {\r\n        if (newMessage === \"\" && chatUserInfo && loading === false) {\r\n            showAlert({ content: \"You can't send blank\" });\r\n        } else if (loading === true && chatUserInfo) {\r\n            showAlert({ content: \"loading...\" });\r\n        } else if (!window.channel) {\r\n            showAlert({ content: \"Please select the user\" });\r\n        } else if (window.channel) {\r\n            window.channel.getUserDescriptors()\r\n                .then(res => {\r\n                    let users = res.state.items.filter(i => {\r\n                        return i.identity !== `Dr_${localStorage.userId}`\r\n                    })\r\n                    console.log(\"res.state.items:::\", res.state.items)\r\n                    console.log(\"users:::\", users)\r\n                    if (Array.isArray(users) && users[0] && users[0].online) {\r\n                        sendNotification(newMessage)\r\n                    }\r\n                    /*   console.log(\"onlineSTatus\", users[0].online) */\r\n                })\r\n\r\n\r\n            window.channel.sendMessage(newMessage);\r\n            scrollToBottom();\r\n            sendMessageToDB(newMessage);\r\n\r\n        }\r\n    }\r\n\r\n    const onMessageChanged = (event) => {\r\n        setNewMessage(event.target.value);\r\n    };\r\n\r\n    const onSendKeyEvent = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            onSendMessage();\r\n        }\r\n    }\r\n    /*   console.log(\"smsto n body\", smsTo, smsBody) */\r\n\r\n    const onSendSMS = () => {\r\n        axios.post(server.serverURL + 'v1/sms-send', {\r\n            \"to\": smsTo,\r\n            \"body\": smsBody\r\n        }, config)\r\n            .then(res => {\r\n                /*  console.log(\"res\", res) */\r\n                // var data = res.data;\r\n                setShow(false);\r\n            })\r\n            .catch(err => console.log(`${err} while sending sms`))\r\n    }\r\n\r\n    const onhandleSMSClose = () => setShow(false);\r\n\r\n    const onhandleSMSShow = () => {\r\n        if (loading === true && chatUserInfo) {\r\n            showAlert({ content: \"loading...\" });\r\n            return false;\r\n        } else if (!window.channel) {\r\n            showAlert({ content: \"Please select the user\" });\r\n            return false;\r\n        } else {\r\n            setSmsTo(chatUserInfo[\"phone_number\"]);\r\n            setShow(true);\r\n        }\r\n    }\r\n\r\n    const onSMSMessageHandleChange = (event) => {\r\n        setSmsBody(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-main-part\">\r\n            <Modal show={show} onHide={onhandleSMSClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>SMS Send to the User</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Message</Form.Label>\r\n                            <Form.Control name=\"smsBody\" onChange={onSMSMessageHandleChange} as=\"textarea\" rows=\"3\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={onhandleSMSClose}>\r\n                        CLOSE\r\n                </Button>\r\n                    <Button variant=\"primary\" onClick={onSendSMS}>\r\n                        SMS SEND\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div className=\"chat-user-name\">\r\n                <div className=\"chat-patient-name-title\">\r\n                    {chatUserInfo && <p className=\"chat-patient-name\">{chatUserInfo.receiver + \" \" + chatUserInfo.date}</p>}\r\n                    {!page && <p className=\"chat-user-net-state\">Online</p>}\r\n                </div>\r\n                <div className=\"row\" style={{ marginRight: \"10px\" }}>\r\n                    {!page &&\r\n                        <>\r\n                            <div onClick={onhandleSMSShow} style={{ marginRight: \"30px\", display: \"none\" }} className=\"video-call-button\">\r\n                                <Icon color=\"white\" icon={bxsMessage} />\r\n                            </div>\r\n                            <div onClick={goVideoCall} className=\"video-call-button\">\r\n                                <BsFillCameraVideoFill color=\"white\" size=\"15px\" />\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            { (loading === true && chatUserInfo) &&\r\n                <div style={{ margin: \"auto\" }}>\r\n                    <Loading type=\"bars\" color=\"#4939e3\" />\r\n                </div>\r\n            }\r\n            { loading === false &&\r\n                <div className=\"chatApp__convTimeline\" ref={messagesEndRef}>\r\n                    {chatTexts.map((item, i) => {\r\n                        return (\r\n                            <div key={i} className={item.key === \"received\" ? \"chatApp__convMessageItem chatApp__convMessageItem--left clearfix\" : \"chatApp__convMessageItem chatApp__convMessageItem--right clearfix\"}>\r\n                                <img src={item.key === \"received\" ? sentImage : receivedImage} alt=\"Shun\" className=\"chatApp__convMessageAvatar\" />\r\n                                <div className=\"chatApp__convMessageValue\">{item.text}</div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    )}\r\n                </div>\r\n            }\r\n            <div className=\"chat-text-input-section\">\r\n                <div className=\"chat-text-input-plus-button\">\r\n                    <BsPlus size=\"20px\" color=\"#4939E3\" />\r\n                </div>\r\n                <div className=\"chat-text-input-div\">\r\n                    <input onKeyDown={onSendKeyEvent} onChange={onMessageChanged} value={newMessage} className=\"chat-text-input\" type=\"text\" placeholder=\"Type a message...\" />\r\n                    <p onClick={onSendMessage} className=\"chat-text-send-button\">Send</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.css';\r\n// import { BsFillPlusCircleFill } from \"react-icons/bs\";\r\nimport AssignedTask from '../userDataComponent/assignedTask/assignedTask';\r\nimport axios from 'axios';\r\nimport { server } from \"../../config/server\";\r\n\r\n// const virtualMedication = [\"Calcitrol\", \"Ciprofloaxacin\", \"Glipizide\", \"Metformin\", \"Simvastatin\"];\r\n\r\n\r\nlet token = localStorage.getItem(\"token\");\r\n\r\nexport const ChatUserInfo = (selPatient) => {\r\n    const userInfo = useSelector(state => state.chatUserSelect);\r\n    const medication = useSelector(state => state.medication);\r\n    // const allergy = useSelector(state => state.patientPersonalAllergy);\r\n    // console.log(allergy);\r\n    const [chatMedication, setChatMedication] = useState([]);\r\n    const [allergy, setAllergy] = useState([]);\r\n    // const userAssigedData = useSelector(state => state.assignedData);\r\n\r\n   /*  console.log(\"userAggi\", userAssigedData); */\r\n\r\n    useEffect(() => {        \r\n        getMedicationData(medication);\r\n    }, [medication]);\r\n\r\n    useEffect(() => {\r\n        getMedicationData(medication);\r\n        getAllergyData(selPatient);\r\n        // console.log(\"userInfo\", userInfo);\r\n    }, [userInfo]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const getMedicationData = (data) => {\r\n        let array = [];\r\n        if (data.length !== 0) {\r\n            for (let index = 0; index < 4; index++) {\r\n                const element = data[index];\r\n                element ? array.push(element[\"title\"]) : array.push(\"\");\r\n            }\r\n            setChatMedication(array);\r\n        } else {\r\n            setChatMedication([]);\r\n        }\r\n    }\r\n    const getAllergyData = async (ID) => {\r\n        console.log(ID);\r\n        let patient = {\r\n            patientID: ID\r\n        } \r\n        console.log(patient);\r\n        var temp = await axios.post(server.serverURL + \"v1/allergy\", patient, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(function (response) {\r\n            setAllergy(response.data.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-user-info-main-section\" style={{ overflow: \"hidden\" }}>\r\n            <div className=\"chat-user-info-row\">\r\n                <p className=\"chat-user-info-row-title\">Age:</p>\r\n                <p className=\"chat-user-info-row-description\">{(userInfo ? userInfo.age : \"\")}</p>\r\n            </div>\r\n            <div className=\"chat-user-info-row\">\r\n                <p className=\"chat-user-info-row-title\">D.O.B:</p>\r\n                <p className=\"chat-user-info-row-description\">{userInfo ? userInfo.DOB : \"\"}</p>\r\n            </div>\r\n            <div className=\"chat-user-info-row\">\r\n                <p className=\"chat-user-info-row-title\">Allergies:</p>\r\n                <div className=\"chat-user-info-row-description\">\r\n                    <div className=\"medication-row\">\r\n                        {allergy && allergy.map((item, i) =>\r\n                            <p key={i} className=\"medication-row-text\">{item['allergy_name']}</p>\r\n                        )}\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            <div className=\"chat-user-info-row\">\r\n                <p className=\"chat-user-info-row-title\">Medication:</p>\r\n                <div className=\"chat-user-info-row-description\">\r\n                    <div className=\"medication-row\">\r\n                        {chatMedication && chatMedication.map((item, i) =>\r\n                            <p key={i} className=\"medication-row-text\">{item}</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-user-info-asigned-row\">\r\n                <p className=\"chat-user-info-row-title\">Assigned Tasks:</p>\r\n                {/* <BsFillPlusCircleFill size=\"20px\" color=\"#4939E3\" /> */}\r\n                <div>\r\n                    <AssignedTask\r\n                        setCreatedGroupId={() => { }}\r\n                        isFromChat={true}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* {userAssigedData.map((item, i) =>\r\n                <div key={i} className=\"chat-patient-page-existing-task-style\">\r\n                    <p className=\"chat-patient-page-existing-task-title-style\">{item.name}</p>\r\n                </div>\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GET_PATIENT_MEDICATION_DATA, GET_ASSIGNED_DATA, GET_USER_CHAT, GET_PATIENT_PERSONAL_ALLERGY } from '../../store/actionNames';\r\nimport './style.css';\r\nimport { BsSearch } from \"react-icons/bs\";\r\nimport { sharedColors } from '../../theme/sharedColor';\r\nimport jwt from 'jwt-simple';\r\nimport axios from 'axios';\r\nimport { server } from '../../config/server';\r\nimport date from 'date-and-time';\r\nimport moment from 'moment';\r\n\r\nexport const  ChatAvatarsContainer = ({ getChannelName }) => {\r\n    const currentUrl = window.location.href;\r\n    console.log(getChannelName);\r\n    const dispatch = useDispatch();\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.token\r\n        }\r\n    }\r\n    // State variables\r\n    // const [ setArrowDirection] = useState(true);\r\n    const [chatPatientList, setChatPatientList] = useState([]);\r\n    const [usersData, setUsersData] = useState([]);\r\n    let check_user_name = \"\";\r\n\r\n    // Style for the highlighted text.\r\n    const specialColorFont = {\r\n        color: sharedColors.primaryFontColor,\r\n    }\r\n    const showAvatar = useRef();\r\n\r\n    // Set usersData to data from server\r\n    useEffect(() => {\r\n        axios.get(server.serverURL + 'v1/chat-patients', config)\r\n            .then(res => {\r\n                var data = res.data;\r\n                console.log(data);\r\n                setChatPatientList(data.data.results);\r\n                setUsersData(data.data.results);\r\n            });\r\n            // setTimeout(autoToken, 2000);\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n    const setChatToken = (data) => {\r\n        let channelName = localStorage.userId + \"/\" + data[\"id\"];\r\n        channelName = channelName.replace(/ /g, \"\");\r\n        let chatUserInfo = {\r\n            send: localStorage.userId,\r\n            sender: localStorage.userName,\r\n            s_phone_number: localStorage.phone_number,\r\n            sendImage: localStorage.userImage,\r\n            receive: data[\"id\"],\r\n            receiver: data[\"patient_name\"],\r\n            r_phone_number: data[\"phone_number\"],\r\n            receiveImage: data[\"userimage\"],\r\n            channelName: channelName,\r\n            date: data[\"DOB\"],\r\n            userInfo: data\r\n        }\r\n        getChannelName(jwt.encode(chatUserInfo, \"xxx\"), data[\"id\"]);\r\n    }\r\n\r\n    const setHighlightedUser = (userItem) => {\r\n        console.log(usersData[userItem]);\r\n        setChatToken(usersData[userItem])\r\n        let virtualArray = [];\r\n        for (let i = 0; i < usersData.length; i++) {\r\n            if (i !== userItem) virtualArray.push({ ...usersData[i], selected: false });\r\n            if (i === userItem) virtualArray.push({ ...usersData[i], selected: true })\r\n        }\r\n        setUsersData(virtualArray);\r\n        dispatch({ type: GET_USER_CHAT, payload: usersData[userItem] });\r\n        dispatch({ type: GET_PATIENT_MEDICATION_DATA, payload: usersData[userItem].id });\r\n        dispatch({ type: GET_ASSIGNED_DATA, payload: usersData[userItem].id });\r\n        // dispatch({ type: GET_PATIENT_PERSONAL_ALLERGY, payload: usersData[userItem].id })\r\n    }\r\n\r\n\r\n    const handleSearch = (str) => {\r\n        if (str) {\r\n            const filteredUsers = chatPatientList.filter(user => user.patient_name.toLowerCase().includes(str.toLowerCase()));\r\n            setUsersData(filteredUsers);\r\n        } else setUsersData(chatPatientList);\r\n    }\r\n    return (\r\n        <div className=\"avatars\">\r\n            <div className=\"avatar-main-section\" ref={showAvatar}>\r\n                <div className=\"avatars-title-container\">\r\n                    <h1 className=\"avatars-title-text\">Chat<span style={specialColorFont}>.</span></h1>\r\n                </div>\r\n                <div className=\"search-bar\">\r\n                    <BsSearch size=\"18px\" color={sharedColors.primaryFontColor} className=\"search-icon\" />\r\n                    <input type=\"text\" onChange={ev => handleSearch(ev.target.value)} placeholder=\"Search\" className=\"search-input\" />\r\n                </div>\r\n                <div className=\"users-avatar\" id=\"avatar-scrollbar\">\r\n                    {usersData && usersData.map((user, index) => {\r\n                        if (check_user_name !== user.patient_name.slice(0, 1).toUpperCase()) {\r\n                            check_user_name = user.patient_name.slice(0, 1).toUpperCase();\r\n                        }\r\n                        const chatDate = user.chat_date ? moment(user.chat_date).format(\"MMM DD\") : \"\";\r\n                        return (\r\n                            <div key={index}>\r\n                                {/* { userNameSpan } */}\r\n                                <div onClick={() => setHighlightedUser(index)} className={user.selected === false ? \"user-avatar\" : \"user-avatar-selected\"}>\r\n                                    <img className=\"avatar-image\" src={user.userimage} alt={user.userimage} />\r\n                                    <div className=\"user-info\">\r\n                                        <p className=\"user-name-text\">{user.patient_name}</p>\r\n                                        <p className=\"user-chats-text\">{user.recent_chat}</p>\r\n                                    </div>\r\n                                    <div className=\"chat-info-part\">\r\n                                        <p className={user.selected === false ? \"chat-date\" : \"chat-date-selected\"}>{chatDate}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link} from \"react-router-dom\";\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport './style.css'\r\nimport jwt from 'jwt-simple';\r\nimport { sharedColors } from '../../theme/sharedColor';\r\nimport Calendar1 from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { BsChevronCompactDown, BsChevronCompactUp, BsChevronRight, BsChevronLeft } from \"react-icons/bs\";\r\nimport { BsSearch, BsFillPlusCircleFill, BsArrowBarLeft, BsArrowBarRight } from \"react-icons/bs\";\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport { server } from \"../../config/server\";\r\n\r\n// I insert.\r\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\r\nimport { grey } from '@material-ui/core/colors'\r\nimport { CommandContext } from 'twilio/lib/rest/preview/wireless/command';\r\nimport Moment from 'moment';\r\n\r\nconst d = new Date();\r\n\r\nconst weekday = new Array(7);\r\nweekday[0] = \"Sunday\";\r\nweekday[1] = \"Monday\";\r\nweekday[2] = \"Tuesday\";\r\nweekday[3] = \"Wednesday\";\r\nweekday[4] = \"Thursday\";\r\nweekday[5] = \"Friday\";\r\nweekday[6] = \"Saturday\";\r\n\r\nlet day = weekday[d.getDay()];\r\n\r\nlet nowData = [];\r\nlet i_bottom = [];\r\nlet i_color = [];\r\nlet i_StartTime = [];\r\nlet chatUserInfo = [];\r\nlet token = localStorage.getItem(\"token\");\r\nlet config = {\r\n  headers: {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n}\r\n\r\nfunction join(t, a, s) {\r\n  function format(m) {\r\n    let f = new Intl.DateTimeFormat('en', m);\r\n    return f.format(t);\r\n  }\r\n  return a.map(format).join(s);\r\n}\r\n\r\nlet a = [{ year: 'numeric' }, { month: 'numeric' }, { day: 'numeric' }];\r\nlet nowDate = Moment(Date.now()).format(\"YYYY-MM-DD\");\r\nconsole.log(nowDate);\r\nlet globalChannelName = '';\r\nexport class Calendar extends React.Component {\r\n  calendarComponentRef = React.createRef();\r\n  timeSloteId_ref = React.createRef();\r\n  appointDescription_ref = React.createRef();\r\n  patient_id_ref = React.createRef();\r\n  title_ref = React.createRef();\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      virtualTime: false,\r\n      modalState: 0,\r\n      patientlist: [],\r\n      description: \"\",\r\n      appDate: null,\r\n      patient_id: null,\r\n      appointment_id: null,\r\n      timeValue: null,\r\n      time: null,\r\n      appName: \"\",\r\n      setModalShow: true,\r\n      modalShow: false,\r\n      modalHide: true,\r\n      timeslot: [],\r\n      heightSpec: \"Fixed\",\r\n      height: 800,\r\n      arrowDirection: true,\r\n      viewType: \"Week\",\r\n      durationBarVisible: false,\r\n      timeRangeSelectedHandling: \"Enabled\",\r\n      startDate: null,\r\n      date: '',\r\n      date1: '',\r\n      date2: '',\r\n      date3: '',\r\n      date4: '',\r\n      date5: '',\r\n      hasError: '',\r\n      viewCustom: 'dayGridMonth',\r\n      currentEvents: [],\r\n      calendarEvents: [],\r\n      nowdate: nowDate,\r\n      selDay: day,\r\n      chartUserInfo: [],\r\n      videoToken: '',\r\n      patientData: [],\r\n      changeStatus: 0,\r\n      // today: date.now()\r\n    };\r\n    this.fetchData = this.fetchData.bind(this);\r\n    this.fetchPatient = this.fetchPatient.bind(this);\r\n    this.handlePChange = this.handlePChange.bind(this);\r\n    this.fetchSelectData = this.fetchSelectData.bind(this);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n\r\n    this.handleDesChange = this.handleDesChange.bind(this);\r\n    this.fetchTimeSlot = this.fetchTimeSlot.bind(this);\r\n    this.newSchedule = this.newSchedule.bind(this);\r\n    this.newAppointment = this.newAppointment.bind(this);\r\n    this.updateAppointment = this.updateAppointment.bind(this);\r\n    this.deleteAppointment = this.deleteAppointment.bind(this);\r\n    this.handleModalHide = this.handleModalHide.bind(this);\r\n    this.handleTimeChange = this.handleTimeChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.hideModal = this.hideModal.bind(this);\r\n    // this.viewChangeHandle = this.viewChangeHandle.bind(this);\r\n  }\r\n  // console.log(Time.now())\r\n  hideModal() {\r\n    this.setState({ modalShow: false })\r\n  }\r\n  viewChangeHandle = (viewType) => {\r\n    if (viewType == 'week') {\r\n      // this.state.viewCustom = 'timeGridWeek';\r\n      this.calendarComponentRef.current.getApi().changeView('timeGridWeek');\r\n      // var temp = document.getElementsByClassName('fc-weekButton-button')\r\n      // console.log(temp);\r\n      // temp.classList.add('active');\r\n      // this.setState({viewCustom:'timeGridWeek'});\r\n    }\r\n    else {\r\n      // this.state.viewCustom = 'dayGridMonth';\r\n      this.calendarComponentRef.current.getApi().changeView('dayGridMonth');\r\n      // document.getElementsByClassName('fc-monthButton-button').classList.add('active');\r\n    }\r\n    console.log(this.state);\r\n  }\r\n  async fetchPatient() {\r\n    let a = [];\r\n    // eslint-disable-next-line\r\n    var temp = await axios.get(server.serverURL + \"v1/patients\", {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    }).then(function (response) {\r\n      a = response.data.data.results\r\n    });\r\n    this.setState({ patientlist: a });\r\n  }\r\n\r\n  async fetchData() {\r\n    let a = [];\r\n    // eslint-disable-next-line\r\n    var bb = await axios.get(server.serverURL + \"v1/appointments\", {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    }).then(function (response) {\r\n      a = response.data.data.results\r\n\r\n    }).catch(error => {\r\n      // alert(JSON.stringify(error.response.data.errors));\r\n      console.log(error.response, \"error\")\r\n    })\r\n    a.forEach(obj => this.renameKey(obj, 'appointment_id', 'id'));\r\n    a.forEach(obj => this.renameKey(obj, 'time_slot', 'start'));\r\n    a.forEach(obj => this.renameKey(obj, 'patient_name', 'title'));\r\n    a.forEach(obj => this.renameValue(obj, 'start', obj['appointment_date'], obj['start']));\r\n    this.setState({ calendarEvents: a });\r\n    var now = new Date();\r\n    let tempDate = Moment(now).format(\"YYYY-MM-DD\");\r\n\r\n    this.setData(tempDate);\r\n  }\r\n\r\n  renameKey(obj, oldKey, newKey) {\r\n    obj[newKey] = obj[oldKey];\r\n    delete obj[oldKey];\r\n  }\r\n  renameValue(obj, field, oldValue, newValue) {\r\n    obj[field] = oldValue + 'T' + newValue;\r\n  }\r\n  start_vCall = (index) => {\r\n  \r\n    let patientdata = this.state.patientData.data.results;\r\n    console.log(patientdata);\r\n    let selectData = patientdata.filter(item => item.id == index);\r\n    console.log(localStorage);\r\n    console.log(selectData[0]);\r\n    globalChannelName =  localStorage.userId + '/' + selectData[0].id;\r\n  \r\n    this.setChatToken(selectData[0]);   \r\n    \r\n    // this.setChatToken(this.state.patientData.data.data.results[item]);\r\n  }\r\n  setChatToken = (data) => {\r\n    console.log(data);\r\n    let channelName = localStorage.userId + \"/\" + data[\"id\"];\r\n    channelName = channelName.replace(/ /g, \"\");\r\n    chatUserInfo = {\r\n        send: localStorage.userId,\r\n        sender: localStorage.userName,\r\n        s_phone_number: localStorage.phone_number,\r\n        sendImage: localStorage.userImage,\r\n        receive: data[\"id\"],\r\n        receiver: data[\"patient_name\"],\r\n        r_phone_number: data[\"phone_number\"],\r\n        receiveImage: data[\"userimage\"],\r\n        channelName: channelName,\r\n        date: data[\"DOB\"],\r\n        userInfo: data\r\n    }\r\n    token = jwt.encode(chatUserInfo, \"xxx\");\r\n    this.goVideoCall();\r\n  }\r\n  getVideoToken = () => {\r\n    axios.post(server.serverURL + 'v1/video-token', {\r\n        \"room\": globalChannelName,\r\n        \"name\": `Dr_${localStorage.userId}`\r\n    }, config)\r\n        .then(res => {\r\n            var data = res.data;\r\n            /*   console.log(\"res\", data.token) */\r\n            this.setState({videoToken:data.token});\r\n            // resolve({chatToken, channelName});\r\n            this.sendVideoNotification(data.token)\r\n        });\r\n\r\n  }\r\n\r\n  sendVideoNotification = (twilioVideoToken) => {\r\n\r\n      let obj = {\r\n          patient_id: chatUserInfo[\"receive\"],\r\n          title: `Time to Call ${localStorage.userName}`,\r\n          body: `Your Telemedicine call with ${localStorage.userName} starts soon. Click here to began the Call`,\r\n          notification_id: \"2\",\r\n          room_name: globalChannelName\r\n      }\r\n      /*  console.log(\"obj\", obj, config) */\r\n      axios.post(server.serverURL + 'v1/push-notify', obj, config)\r\n          .then(res => {\r\n            window.location.href = \"/chat/\" + token + \"?info=videocall&&videoToken=\"+twilioVideoToken+\"&&channelName=\"+globalChannelName;\r\n          });\r\n  }\r\n\r\n  goVideoCall = () => {\r\n      /*  console.log(videoToken, \"videoToken\") */\r\n      if (this.state.videoToken) {\r\n          this.sendVideoNotification(this.state.videoToken);          \r\n          \r\n      } else {\r\n          this.getVideoToken()\r\n      }\r\n  }\r\n\r\n  async fetchTimeSlot() {\r\n    let a = [];\r\n    let appointmentDetail = {\r\n      appointment_date: this.state.appDate.toISOString().substring(0, 10),\r\n    }\r\n    console.log(appointmentDetail)\r\n    // eslint-disable-next-line\r\n    var temptime = await axios.post(server.serverURL + \"v1/available-time-slots\", appointmentDetail, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    }).then(function (response) {\r\n      a = response.data.data.results\r\n    });\r\n    this.setState({ timeslot: a });\r\n  }\r\n\r\n\r\n  async fetchSelectData() {\r\n\r\n    let b = [];\r\n    const event_id = this.state.appointment_id;\r\n    // eslint-disable-next-line\r\n    var temp = await axios.get(server.serverURL + \"v1/appointments/\" + event_id, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + token\r\n      }\r\n    }).then(function (response) {\r\n      b = response.data.data\r\n    });\r\n    this.setState({ time: b.time_slot })\r\n    this.setState({ timeValue: b.time_slot_id });\r\n    this.setState({ patient_id: b.patient_id });\r\n    this.setState({ description: b.description });\r\n    this.setState({ appName: b.title }, function () { });\r\n    let a = await this.fetchTimeSlot()\r\n\r\n    this.setState({ timeslot: [{ time_slot: b.time_slot, time_slot_id: b.time_slot_id }, ...this.state.timeslot] }, function () {\r\n      console.log(this.state.timeslot, \"time slot\", a)\r\n      this.setState({ modalShow: true });\r\n      // {time_slot: b.time_slot, time_slot_id: b.time_slot_id}, \r\n    });\r\n\r\n  }\r\n  componentDidMount() {    \r\n    axios.get(server.serverURL + 'v1/chat-patients', config)\r\n    .then(res => {\r\n        this.setState({patientData:res.data});\r\n    });\r\n  }\r\n  componentWillMount() {\r\n    var e = new Date();\r\n    this.setState({\r\n      appDate: e\r\n    });\r\n    const first = new Date();\r\n    const secondDate = new Date();\r\n    const thirdDate = new Date();\r\n    const firthDate = new Date();\r\n    const fifthDate = new Date();\r\n    const sixthDate = new Date();\r\n    const second = new Date(secondDate.setMonth(secondDate.getMonth() + 1));\r\n    const third = new Date(thirdDate.setMonth(thirdDate.getMonth() + 2));\r\n    const firth = new Date(firthDate.setMonth(firthDate.getMonth() + 3));\r\n    const fifth = new Date(fifthDate.setMonth(fifthDate.getMonth() + 4));\r\n    const sixth = new Date(sixthDate.setMonth(sixthDate.getMonth() + 5));\r\n\r\n    this.setState({ date: first });\r\n    this.setState({ date1: second });\r\n    this.setState({ date2: third });\r\n    this.setState({ date3: firth });\r\n    this.setState({ date4: fifth });\r\n    this.setState({ date5: sixth });\r\n    this.fetchData();\r\n    this.fetchPatient();\r\n    if (this.state.viewType == \"Week\") {\r\n      // alert('ready');\r\n      // let element = document.getElementsByClassName('fc-weekButton-button');\r\n      // element.addClass('active');\r\n    }\r\n  }\r\n\r\n  handleTimeChange(e) {\r\n    this.setState({ timeValue: e.target.value })\r\n  }\r\n  handleDesChange(e) {\r\n    this.setState({ description: e.target.value })\r\n  }\r\n  handleNameChange(e) {\r\n    this.setState({ appName: e.target.value })\r\n  }\r\n  handlePChange(e) {\r\n    this.setState({ patient_id: e.target.value })\r\n  }\r\n  handleDateChange(e) {\r\n    this.setState({ appDate: e })\r\n  }\r\n  handleModalHide() {\r\n    this.setState({ modalShow: false })\r\n  }\r\n\r\n  handleWeekendsToggle = () => {\r\n    this.setState({\r\n      weekendsVisible: !this.state.weekendsVisible\r\n    })\r\n  }\r\n\r\n  newSchedule(e) {\r\n    console.log(\"new-minicalandar\")\r\n    this.setState({ appName: \"\" });\r\n    this.setState({ description: \"\" });\r\n    this.setState({ patient_id: \"\" });\r\n    this.setState({ timeValue: \"\" });\r\n    this.setState({ modalState: 1 });\r\n    this.setState({ modalShow: true });\r\n    this.fetchTimeSlot();\r\n  }\r\n\r\n  handleDateSelect = (selectInfo) => {\r\n    console.log(\"new-calandar\")\r\n    this.setDay(selectInfo)\r\n    this.setState({ appName: \"\" });\r\n    this.setState({ description: \"\" });\r\n    this.setState({ patient_id: \"\" });\r\n    this.setState({ timeValue: \"\" });\r\n    this.setState({ appDate: selectInfo.start });\r\n    this.fetchTimeSlot();\r\n    // this.setState({ modalState: 1 });\r\n    // this.setState({ modalShow: true });\r\n    console.log(selectInfo);\r\n  }\r\n\r\n  async newAppointment() {\r\n    console.warn('newAppointment 250');\r\n    var tzoffset = this.state.appDate.getTimezoneOffset() * 60000; //offset in milliseconds\r\n    var localISOTime = (new Date(this.state.appDate - tzoffset)).toISOString().substring(0, 10);\r\n    let appointmentDetail = {\r\n      title: this.title_ref.current.value,\r\n      patient_id: this.patient_id_ref.current.value,\r\n      appointment_date: localISOTime,\r\n      time_slot_id: this.timeSloteId_ref.current.value,\r\n      description: this.appointDescription_ref.current.value,\r\n      virtualTime: this.state.virtualTime\r\n    }\r\n    await axios.post(server.serverURL + 'v1/appointments', appointmentDetail, config)\r\n      .then(res => {\r\n        this.setState({ modalShow: false })\r\n        alert(res.data.data.message)\r\n        this.setState({changeStatus:Math.random()})\r\n      })\r\n      .catch(error => {\r\n        // alert(JSON.stringify(error.response.data.errors));\r\n        // alert(JSON.stringify(error.response.data.errors));\r\n        this.setState({ hasError: error.response.data.error });\r\n        // console.log(error.response.status, \"error\")\r\n      })\r\n\r\n    // this.setState({ modalShow: false })\r\n    this.fetchData();\r\n\r\n  }\r\n\r\n  handleEventClick = (clickInfo) => {\r\n    console.log(clickInfo)\r\n    var e = new Date(clickInfo.event._def.extendedProps[\"appointment_date\"]);\r\n    var utc = e.getTime() + (e.getTimezoneOffset() * 60000);\r\n    const eventId = clickInfo.event.id;\r\n    this.setState({ appDate: new Date(utc) })\r\n    this.setState({ appointment_id: eventId });\r\n    this.setState({ modalState: 0 });\r\n\r\n    this.fetchSelectData();\r\n\r\n    // this.fetchTimeSlot();\r\n    // this.setState({ modalShow: true });\r\n    // console.log(this.state.timeslot);\r\n  }\r\n\r\n  updateAppointment() {\r\n    console.warn('newAppointment 251');\r\n    const event_id = this.state.appointment_id;\r\n    var tzoffset = this.state.appDate.getTimezoneOffset() * 60000; //offset in milliseconds\r\n    var localISOTime = (new Date(this.state.appDate - tzoffset)).toISOString().substring(0, 10);\r\n    let appointmentDetail = {\r\n      title: this.title_ref.current.value,\r\n      patient_id: this.patient_id_ref.current.value,\r\n      appointment_date: localISOTime,\r\n      time_slot_id: this.timeSloteId_ref.current.value,\r\n      description: this.appointDescription_ref.current.value\r\n    }\r\n    console.log(appointmentDetail, \"app detail\")\r\n    axios.put(server.serverURL + 'v1/appointments/' + event_id, appointmentDetail, config)\r\n      .then(res => {\r\n        this.setState({ modalShow: false })\r\n        alert(res.data.data.message)\r\n      })\r\n      .catch(error => {\r\n        this.setState({ hasError: error.response.data.error });\r\n        console.log(error.response)\r\n      })\r\n    this.fetchData()\r\n\r\n  }\r\n\r\n  deleteAppointment() {\r\n    const event_id = this.state.appointment_id\r\n    console.warn('newAppointment 252');\r\n    axios.delete(server.serverURL + 'v1/appointments/' + event_id, config)\r\n      .then(res => {\r\n        alert(res.data.data.message)\r\n      })\r\n      .catch(error => {\r\n        alert(JSON.stringify(error.response.data.errors));\r\n        console.log(error.response, \"error\")\r\n      })\r\n    this.fetchData()\r\n    this.setState({ modalShow: false });\r\n  }\r\n\r\n  nextDate = () => {\r\n    var tomorrow = new Date(this.state.nowdate);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    let tempDate = Moment(tomorrow).format(\"YYYY-MM-DD\");\r\n    this.setState({ nowdate: tempDate, selDay: weekday[tomorrow.getDay()] });\r\n    this.setData(tempDate);\r\n  }\r\n  prevDate = () => {\r\n    var yesterday = new Date(this.state.nowdate);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    let tempDate = Moment(yesterday).format(\"YYYY-MM-DD\");\r\n    this.setState({ nowdate: tempDate, selDay: weekday[yesterday.getDay()] });\r\n    this.setData(tempDate);\r\n  }\r\n  setToday = () => {\r\n    var now = new Date();\r\n    let tempDate = Moment(now).format(\"YYYY-MM-DD\");\r\n    console.log(tempDate);\r\n    this.setState({ nowdate: tempDate, selDay: weekday[now.getDay()] });\r\n    this.setData(tempDate);\r\n  }\r\n  setDay = (date) => {\r\n    this.setState({ nowdate: date.startStr, selDay: weekday[date.start.getDay()] });\r\n    console.log(date.start);\r\n    this.setData(date.startStr);\r\n  }\r\n  handleEvents = (events) => {\r\n    // this.setState({\r\n    //   currentEvents: events\r\n    // })\r\n  }\r\n  onChange(e) {\r\n    let calendarApi = this.calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(e.toISOString().substring(0, 10)); // call a method on the Calendar object\r\n    this.setState({ appDate: e });\r\n  }\r\n  setData = (seldate) => {\r\n\r\n    if (this.state.calendarEvents.length > 0) {\r\n      nowData = this.state.calendarEvents.filter(item => item.appointment_date == seldate);\r\n      nowData.map((item, index) => {\r\n        let i_date = item.start;\r\n        let i_time = i_date.slice(11, 16);\r\n        let i_mh = i_time.split(':');\r\n        // let i_bottom = Number(i_mh[1]) * 2;  \r\n        i_StartTime[index] = i_time;\r\n        i_bottom[index] = (Number(i_mh[0]) * 136.25 + 20 + Number(i_mh[1]) * 136.25 / 60.0);\r\n\r\n        var r = () => Math.random() * 256 >> 0;\r\n        i_color[index] = `rgba(${r()}, ${r()}, ${r()}, 0.1)`;\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    // console.log(this.state.modalState,\"modal state\", this.state.timeslot);\r\n    return (\r\n      <div className='demo-app'>\r\n        {this.renderSidebar()}\r\n        <div className='demo-app-main'>\r\n          <FullCalendar\r\n            schedulerLicenseKey=\"GPL-My-Project-Is-Open-Source\"\r\n            ref={this.calendarComponentRef}\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            initialView={this.state.viewCustom}\r\n            editable={true}\r\n            eventDurationEditable={false}\r\n            timeZone='local'\r\n            selectable={true}\r\n            selectMirror={true}\r\n            // dayMaxEvents={true}\r\n            weekends={this.state.weekendsVisible}\r\n            select={this.handleDateSelect}\r\n            eventContent={renderEventContent} // custom render function\r\n            eventClick={this.handleEventClick}\r\n            eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\r\n            contentHeight=\"calc(100vh - 170px)\"\r\n            width={100}\r\n            events={this.state.calendarEvents}\r\n            eventLimit={5}\r\n            customButtons={{\r\n              weekButton: {\r\n                text: 'Week',\r\n                id: 'weekCustomButton',\r\n                click: () => {\r\n                  this.viewChangeHandle('week');\r\n                },\r\n              },\r\n              monthButton: {\r\n                text: 'Month',\r\n                click: () => {\r\n                  this.viewChangeHandle('month');\r\n                },\r\n              }\r\n            }}\r\n            headerToolbar={{\r\n              start: 'title',\r\n              center: 'prev,next',\r\n              // end:'weekButton monthButton'\r\n              end: \"dayGridMonth,timeGridWeek\"\r\n            }}\r\n          />\r\n        </div>\r\n        <Modal\r\n          show={this.state.modalShow}\r\n          onHide={this.hideModal}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton onClick={() => this.handleModalHide()}>{this.state.modalState === 0 ? 'Edit Event' : 'Add Event'}</Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.hasError &&\r\n              <div className=\"alert alert-danger alert-dismissible\">\r\n                {/* eslint-disable-next-line */}\r\n                <a href=\"#\" className=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>\r\n                <strong>Danger!</strong> {this.state.hasError}\r\n              </div>\r\n            }\r\n            <div className=\"form-group\">\r\n              <input name=\"appointmentName\" ref={this.title_ref} id=\"appointmentName\" value={this.state.appName} className=\"form-control\" placeholder=\"Add title\" onChange={this.handleNameChange} />\r\n            </div>\r\n            <div className=\"custom-control form-group\">\r\n              <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultUnchecked\" name=\"defaultUnchecked\" />\r\n              <label className=\"custom-control-label\" htmlFor=\"defaultUnchecked\">Add as Virtual Appointment Time</label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <DatePicker\r\n                ref={this.appointmentDate}\r\n                selected={this.state.appDate}\r\n                onChange={this.handleDateChange}\r\n                name=\"startDate\"\r\n                dateFormat=\"MM/dd/yyyy\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {/* <label>Time</label> */}\r\n              <select ref={this.timeSloteId_ref} className=\"form-control\" id=\"time_select\" name=\"start_time\" defaultValue={this.state.timeValue} onChange={this.handleTimeChange}>\r\n                {/* {this.state.modalState === 0 ? <option value={this.state.timeValue} key={this.state.timeValue}> {this.state.time} </option> : null} */}\r\n                {this.state.timeslot.map((item, i) => {\r\n                  return <option value={item.time_slot_id} key={item.time_slot_id}>{item.time_slot}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {/* <label>Patient</label> */}\r\n              <select ref={this.patient_id_ref} className=\"form-control\" value={this.state.patient_id} name=\"patient\" onChange={this.handlePChange}>\r\n                {this.state.patientlist.map((item, i) => {\r\n                  return <option value={item.id} key={i}>{item.first_name + \" \" + item.last_name}</option>;\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {/* <label>Description</label> */}\r\n              <textarea ref={this.appointDescription_ref} name=\"description\" id=\"description\" className=\"form-control\" value={this.state.description} onChange={this.handleDesChange}></textarea>\r\n            </div>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            {this.state.modalState === 0 ?\r\n              <Button variant=\"primary\" style={{ background: \"#eb7f73\", borderColor: \"transparent\", borderRadius: \"20px\" }} onClick={this.deleteAppointment}>\r\n                Delete\r\n              </Button> :\r\n              <Button variant=\"secondary\" style={{ background: \"#eb7f73\", borderColor: \"transparent\", borderRadius: \"20px\" }} onClick={this.handleModalHide}>\r\n                Cancel\r\n              </Button>\r\n            }\r\n            {this.state.modalState === 0 ?\r\n              <Button variant=\"primary\" style={{ background: \"#877cec\", borderColor: \"transparent\", borderRadius: \"20px\" }} onClick={this.updateAppointment}>\r\n                Save\r\n              </Button> :\r\n              <Button variant=\"primary\" style={{ background: \"#877cec\", borderColor: \"transparent\", borderRadius: \"20px\" }} onClick={this.newAppointment}>\r\n                Save\r\n              </Button>\r\n            }\r\n          </Modal.Footer>\r\n\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderSidebar() {\r\n    // var { ...config } = this.state;\r\n    const specialColorFont = {\r\n      color: sharedColors.primaryFontColor,\r\n    }\r\n    const toggleAvatar = () => {\r\n      this.setState({ arrowDirection: !this.state.arrowDirection });\r\n    }\r\n    let timeIndicates = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      timeIndicates = [...timeIndicates, i]\r\n    }\r\n\r\n    const d = new Date();\r\n\r\n    const weekday = new Array(7);\r\n    weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\";\r\n    weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n    weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n\r\n    let day = weekday[d.getDay()];\r\n    let hour = d.getHours();\r\n    let min = d.getMinutes();\r\n    let bottom = - (hour * 136.25 + 20 + min / 60 * 136.25);\r\n    console.log(this.state.calendarEvents);\r\n\r\n    return (\r\n      <div className='demo-app-sidebar'>\r\n        <div className='demo-app-sidebar-section'>\r\n          <div className=\"show-calendar-picker\" onClick={() => toggleAvatar()}>\r\n            {this.state.arrowDirection ? <BsChevronCompactDown color=\"white\" /> : <BsChevronCompactUp color=\"white\" />}\r\n          </div>\r\n          <div className={this.state.arrowDirection === false ? \"show-picker-calendar\" : \"non-show-picker-calendar\"}>\r\n            <div className=\"avatars-title-container\">\r\n              <h1 className=\"avatars-title-text\" style={{fontSize:32}}>Schedule<span style={specialColorFont}>.</span></h1>\r\n              <BsFillPlusCircleFill onClick={(e) => this.newSchedule(e)} color={sharedColors.primaryButtonsColor} style={{ height: \"26px\", marginRight: 18 }} className=\"avatars-title-add-button\" />\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: 0 }}>\r\n            <div style={{ backgroundColor: 'white', borderRadius: 10, padding: 10 }}>\r\n              <div style={{ color: '#6a12dd', fontWeight: 'bold', cursor:\"pointer\" }} onClick={this.setToday}>\r\n                Today\r\n              </div>\r\n\r\n              <div className=\"date-header\">\r\n                <div className=\"text-center\">\r\n                  <span onClick={this.prevDate} style={{cursor:\"pointer\"}}><BsChevronLeft color={sharedColors.primaryButtonsColor} style={{ height: \"20px\", fontWeight: 600 }} /></span>\r\n                  <span style={{ fontWeight: 'bold', padding: 15 }}>{this.state.selDay}</span>\r\n                  <span>{this.state.nowdate.slice(8, 10)}</span>\r\n                  <span style={{ fontSize: 12, paddingLeft: 10 }}>\r\n                  </span>\r\n                  <span onClick={this.nextDate} style={{cursor:\"pointer\"}}><BsChevronRight color={sharedColors.primaryButtonsColor} style={{ height: \"20px\", fontWeight: 600 }} /></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"container timeline-section\">\r\n                <div className=\"timeline\" style={{ bottom: bottom }}>\r\n                  <div className='timeline-line'></div>\r\n                  <div className='timeline-circle'></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-2\">\r\n                    {timeIndicates.map((item, index) => (\r\n                      <div key={index} style={{ color: 'gray', padding: '10px 0px' }}>\r\n                        {`${item}.00`}\r\n                        <div className=\"text-center\">\r\n                          <div style={{ paddingTop: 10 }}>-</div>\r\n                          <div style={{ paddingTop: 12 }}>-</div>\r\n                          <div style={{ paddingTop: 12 }}>-</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"col-md-10\">\r\n                    {nowData.map((item, index) => (\r\n                      <div class=\"d-flex flex-column justify-content-center\" style={{ position: \"absolute\", top: i_bottom[index], height: 70, padding: 15, marginTop: 2, borderLeft: 'solid 3px rgb(209 189 147)', backgroundColor: i_color[index], borderRadius: 4 }}>\r\n                        <div style={{ fontSize: 12, color: '#3535b9', fontWeight: 'bold' }}>{i_StartTime[index]}</div>\r\n                        <div style={{ fontSize: 16, fontWeight: '600' }}>{item.title}</div>\r\n                        <div style={{ fontSize: 12, color: \"grey\" }}>{item.description} <Link onClick={() => this.start_vCall(item.patient_id)}>start-call</Link></div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction renderEventContent(eventInfo) {\r\n  return (\r\n    <div style={{ lineHeight: 1.5, fontWeight: 'bold'}}>\r\n      <p style={{ color: 'black', margin: 0 }}>{eventInfo.timeText}</p>\r\n      <p style={{ color: 'rgb(122, 50, 216)', margin: 0 }}>{eventInfo.event.title}</p>\r\n      <p style={{ color: 'rgb(122, 50, 216)', margin: 0 }}>{eventInfo.event.extendedProps.doctor_name}</p>\r\n      <p style={{ color: 'black', margin: 0 }}>{eventInfo.event.extendedProps.appointment_date}</p>\r\n    </div>\r\n  )\r\n}\r\n// eslint-disable-next-line\r\nfunction renderSidebarEvent(event) {\r\n  return (\r\n    <li key={event.id}>\r\n      <b>{formatDate(event.start, { year: 'numeric', month: 'short', day: 'numeric' })}</b>\r\n      <i>{event.title}</i>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\nimport { AvatarsContainer } from '../../components';\r\nimport { sharedColors } from '../../theme/sharedColor';\r\nimport { UserDataComponent } from '../../components';\r\nimport { GET_PATIENTS_LIST, USER_ROLE_SET } from '../../store/actionNames/homePageActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { server } from '../../config/server';\r\nimport { AddNewPatient } from '../../components/userDataComponent/addNewPatient';\r\n\r\nexport const HomePage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const mainPart = useSelector(state => state.mainPart);\r\n    const setMainPart = part => dispatch({ type: \"SET_MAIN_SECTION\", payload: part });\r\n    const [homeMessage, setHomeMessage] = useState(\"Good Morning\");\r\n    const [homeUserName, sethomeUserName] = useState(\"Test Admin\");\r\n    const [sectionTitle, setSectionTitleFunc] = useState(\"Test Admin\");\r\n    const addNewPatientStatus = useSelector(state => state.addNewPatientStatus);\r\n    const userRole = useSelector(state => state.userRole);\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.token\r\n        }\r\n    }\r\n    // const patientList = useSelector(state => state.patientsList);\r\n    // Dispatch the action for get patient list after components mounted\r\n    useEffect(() => {\r\n        dispatch({ type: GET_PATIENTS_LIST });\r\n        checkUserToken();\r\n        setHomeUserData();\r\n        if (userRole === \"admin\") {\r\n            setSectionTitleFunc(\"Admin\");\r\n        } else if (userRole === \"user\") {\r\n            setSectionTitleFunc(\"Patients\");\r\n        }\r\n    }, [userRole]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const setHomeUserData = () => {\r\n        Axios.get(server.serverURL + \"v1/home-page\", config)\r\n            .then((res) => {\r\n                var data = res.data.data;\r\n                if (data.status === true) {\r\n                    setHomeMessage(data.message);\r\n                    sethomeUserName(data.user_name);\r\n                    if (data.role_id === 1) {\r\n                        dispatch({ type: USER_ROLE_SET, payload: \"admin\" });\r\n                    } else {\r\n                        dispatch({ type: USER_ROLE_SET, payload: \"user\" });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    const checkUserToken = () => {\r\n        var token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            history.push(\"/login\");\r\n        }\r\n        history.push('/calendar');\r\n    }\r\n\r\n    // Style for the highlighted text color.\r\n    const specialColorFont = {\r\n        color: sharedColors.primaryFontColor,\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\" hompage props ==> \", props)\r\n        const { state } = props.location;\r\n\r\n        if (state && state.mode) {\r\n            setMainPart(\"intro\");\r\n            dispatch({ type: GET_PATIENTS_LIST });\r\n        }\r\n\r\n    }, [props.location])// eslint-disable-line react-hooks/exhaustive-deps\r\n    return (\r\n        <div className=\"intro-page-container\">\r\n            <SideBar select={\"patient\"} />\r\n            <div className=\"main-section\">\r\n                <AvatarsContainer setSectionTitle={sectionTitle} setMainSection={setMainPart} urlStatus=\"home\" />\r\n                {(mainPart === \"intro\" && addNewPatientStatus === false) &&\r\n                    <div className=\"intro-section-part\">\r\n                        <div className=\"intro-page-intro-section\" style={{ marginLeft: 20, marginTop: 10 }}>\r\n                            <div>\r\n                                <h1 className=\"intro-title\">{homeMessage}<span style={specialColorFont}>,</span><br />Dr<span style={specialColorFont}>.</span> {homeUserName}</h1>\r\n                                <p className=\"intro-description\">Click on a patient on the left to view<br />their medical record</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {(mainPart !== \"intro\" && addNewPatientStatus === false) &&\r\n                    <div className=\"home-page-user-data-container\">\r\n                        <UserDataComponent homeUserName={homeUserName} />\r\n                    </div>\r\n                }\r\n                {addNewPatientStatus === true &&\r\n                    <div className=\"home-page-user-data-container\">\r\n                        <div className=\"data-container\">\r\n                            <AddNewPatient />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\nimport { AvatarsContainer } from '../../components';\r\nimport { sharedColors } from '../../theme/sharedColor';\r\nimport { UserDataComponent } from '../../components';\r\nimport { GET_PATIENTS_LIST } from '../../store/actionNames/homePageActions';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const PatientPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [mainPart, setMainPart] = useState(\"intro\");\r\n\r\n\r\n    useEffect(() => {\r\n        const checkUserToken = () => {\r\n            var token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n                history.push(\"/login\");\r\n            }\r\n        }        \r\n        dispatch({ type: GET_PATIENTS_LIST });\r\n        checkUserToken();\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n    // Style for the highlighted text color.\r\n    const specialColorFont = {\r\n        color: sharedColors.primaryFontColor,\r\n    }\r\n\r\n    // Set main section\r\n    const setMainSection = (part) => setMainPart(part);\r\n\r\n    return (\r\n        <div className=\"intro-page-container\">\r\n            <SideBar select={\"patient\"} />\r\n            <div className=\"main-section\">\r\n                <AvatarsContainer setMainSection={setMainSection} />\r\n                <div className=\"intro-section-part\">\r\n                    {mainPart === \"intro\" ?\r\n                        <div className=\"intro-page-intro-section\">\r\n                            <div>\r\n                                <h1 className=\"intro-title\">Good Morning<span style={specialColorFont}>,</span><br />Dr<span style={specialColorFont}>.</span> Smith</h1>\r\n                                <p className=\"intro-description\">Click on a patient on the left to view<br />their medical record</p>\r\n                            </div>\r\n                        </div>\r\n                        : <UserDataComponent />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nconst Participant = ({ participant, isRecipient }) => {\r\n  const [videoTracks, setVideoTracks] = useState([]);\r\n  const [audioTracks, setAudioTracks] = useState([]);\r\n\r\n  const videoRef = useRef();\r\n  const audioRef = useRef();\r\n\r\n  const trackpubsToTracks = (trackMap) =>\r\n    Array.from(trackMap.values())\r\n      .map((publication) => publication.track)\r\n      .filter((track) => track !== null);\r\n\r\n  useEffect(() => {\r\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\r\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\r\n\r\n    const trackSubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\r\n      }\r\n    };\r\n\r\n    const trackUnsubscribed = (track) => {\r\n      if (track.kind === \"video\") {\r\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\r\n      } else if (track.kind === \"audio\") {\r\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\r\n      }\r\n    };\r\n\r\n    participant.on(\"trackSubscribed\", trackSubscribed);\r\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\r\n\r\n    return () => {\r\n      setVideoTracks([]);\r\n      setAudioTracks([]);\r\n      participant.removeAllListeners();\r\n    };\r\n  }, [participant]);\r\n\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0];\r\n    eventWindowResize();\r\n    if (videoTrack) {\r\n      videoTrack.attach(videoRef.current);\r\n      return () => {\r\n        videoTrack.detach();\r\n      };\r\n    }\r\n  }, [videoTracks]);\r\n\r\n  const eventWindowResize = () => {\r\n    $(window).resize(function () {\r\n      let videoWinHeight = $(\".participant\").height();\r\n      $(\".video-window\").height(videoWinHeight + 10);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const audioTrack = audioTracks[0];\r\n    if (audioTrack) {\r\n      audioTrack.attach(audioRef.current);\r\n      return () => {\r\n        audioTrack.detach();\r\n      };\r\n    }\r\n  }, [audioTracks]);\r\n\r\n  return (\r\n    <div className=\"participant\" style={{ width: \"100%\", height: \"100%\" }}>\r\n      {\r\n        isRecipient ?\r\n          <video ref={videoRef}\r\n            autoPlay={true}\r\n            style={{ width: \"100%\" }} />\r\n          : <video ref={videoRef}\r\n            autoPlay={true} />\r\n      }\r\n      <audio ref={audioRef} autoPlay={true} muted={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Participant;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Video from 'twilio-video';\r\nimport Participant from './Participant';\r\nimport { Icon } from '@iconify/react';\r\nimport phoneHangUp from '@iconify/icons-icomoon-free/phone-hang-up';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst Room = ({ roomName, token, handleLogout }) => {\r\n\r\n  const [room, setRoom] = useState(null);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [switchs, setswitchs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const participantConnected = participant => {\r\n        setParticipants(prevParticipants => [...prevParticipants, participant]);\r\n      };\r\n\r\n      const participantDisconnected = participant => {\r\n        setParticipants(prevParticipants =>\r\n          prevParticipants.filter(p => p !== participant)\r\n        );\r\n      };\r\n\r\n      Video.connect(token, {\r\n        name: roomName\r\n      }).then(room => {\r\n        setRoom(room);\r\n        room.on('participantConnected', participantConnected);\r\n        room.on('participantDisconnected', participantDisconnected);\r\n        room.participants.forEach(participantConnected);\r\n      });\r\n\r\n      return () => {\r\n        setRoom(currentRoom => {\r\n          if (currentRoom && currentRoom.localParticipant.state === 'connected') {\r\n            currentRoom.localParticipant.tracks.forEach(function (trackPublication) {\r\n              trackPublication.track.stop();\r\n            });\r\n            currentRoom.disconnect();\r\n            return null;\r\n          } else {\r\n            return currentRoom;\r\n          }\r\n        });\r\n      };\r\n    }\r\n  }, [roomName, token]);\r\n\r\n  const remoteParticipants = participants.map(participant => (\r\n    <Participant key={participant.sid} participant={participant} isRecipient={true} />\r\n  ));\r\n\r\n  const close_call = () => {\r\n    setswitchs(true);\r\n  }\r\n\r\n  /* console.log(room, \"room\")\r\n  console.log(participants, \"particpants\") */\r\n\r\n  return (\r\n    <div className=\"room\" style={{\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      overflow: \"hidden\",\r\n      borderRadius: \"40px\"\r\n    }}>\r\n      {remoteParticipants}\r\n      <div className=\"remote-participants\" style={{\r\n        position: \"absolute\",\r\n        width: \"150px\",\r\n        height: \"150px\",\r\n        bottom: \"10%\",\r\n        right: \"10%\",\r\n        overflow: \"hidden\",\r\n        borderRadius: \"50%\"\r\n      }}>\r\n        \r\n        {room ? (\r\n          <Participant\r\n            key={room.localParticipant.sid}\r\n            participant={room.localParticipant}\r\n            isRecipient={switchs}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div style={{ position: \"absolute\", right: \"50%\", bottom: \"2%\", cursor: \"pointer\" }} onClick={close_call} className=\"video-hang-button\">\r\n        <Icon color=\"white\" fontSize=\"30px\" icon={phoneHangUp} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport \"./style.css\";\r\nimport Moment from 'moment';\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Brightness1Icon from \"@mui/icons-material/Brightness1\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonUnstyled from '@mui/core/ButtonUnstyled';\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { purple } from \"@mui/material/colors\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport jwt from \"jwt-simple\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../config/server\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  GET_PATIENT_MEDICATION_DATA,\r\n  GET_ASSIGNED_DATA,\r\n  GET_USER_CHAT,\r\n} from \"../../store/actionNames\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport chroma from \"chroma-js\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\n// import { Allergy } from './mainSection/Allergy';\r\n\r\nlet token = localStorage.getItem(\"token\");\r\n\r\nconst ColorButton = styled(ButtonUnstyled)(({ theme }) => ({\r\n  color: theme.palette.getContrastText(purple[500]),\r\n  backgroundColor: \"#6308F7\",\r\n  borderRadius: 15,\r\n  width: 300,\r\n  borderColor:\"transparent\",\r\n  fontFamily:\"poppins\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"#6308F7\",\r\n  },\r\n}));\r\nlet drugData = [];\r\nlet noAllergy = \"\";\r\ndrugData = [];\r\nlet survey_id = \"\";\r\n\r\nlet button_text = [\"Mark update\", \"Mark as done\", \"Mark new\"];\r\nconst items = [\r\n  {label: \"one\", value: 1},\r\n  {label: \"two\", value: 2},\r\n];\r\n\r\nconst colourStyles = {\r\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    const color = chroma(data.color);\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled ? 'red' : 'blue',\r\n      color: '#FFF',\r\n      cursor: isDisabled ? 'not-allowed' : 'default',\r\n    };\r\n  },\r\n};\r\n\r\nexport const Management = ({ roomName, chatInfo, handleLogout }) => {\r\n  const [age, setAge] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [buttonAction, setButtonAction] = React.useState(true);\r\n\r\n  const [checkAction1, setCheckAction1] = React.useState(\"disable-check\");\r\n  const [checkAction2, setCheckAction2] = React.useState(\"disable-check\");\r\n  const [checkAction3, setCheckAction3] = React.useState(\"disable-check\");\r\n  const [checkAction4, setCheckAction4] = React.useState(\"disable-check\");\r\n  const [checkAction5, setCheckAction5] = React.useState(\"disable-check\");\r\n  const [checkAction6, setCheckAction6] = React.useState(\"disable-check\");\r\n\r\n  const [backButtonAction, setBackButtonAction] = React.useState(\"Back\");\r\n  const [buttonDisableAction, setButtonDisableAction] = React.useState(true);\r\n  const [screenAction, setScreenAction] = React.useState(0);\r\n  const [listAction1, setListAction1] = React.useState(\"\");\r\n  const [listAction2, setListAction2] = React.useState(\"\");\r\n\r\n  const [medicineName, setMedicineName] = React.useState(\"\");\r\n  const [listAction3, setListAction3] = React.useState(\"\");\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const [subExpanded, setSubExpanded] = React.useState('panel11');\r\n  const subhandleChange = (panel) => (event, newExpanded) => {\r\n    setSubExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  const [activeNumber, setActiveNumber] = React.useState(6);\r\n\r\n  const [list1, setList1Action] = React.useState(\"\");\r\n  const [list2, setList2Action] = React.useState(\"\");\r\n  const [list3, setList3Action] = React.useState(\"\");\r\n  const [list4, setList4Action] = React.useState(\"\");\r\n  const [select, setSelectAction] = React.useState(\"\");\r\n  const [medicineSave, setMedicineSave] = React.useState(true);\r\n  const [expandedDescription, setExpandedDescription] = React.useState(true);\r\n  const [patient, setPatient] = React.useState([]);\r\n  const [allergy, setAllergy] = useState([]);\r\n  const [survey, setSurvey] = useState([]);\r\n  const [gapsincare, setGapsInCare] = useState([]);\r\n  const [afterSummary, setafterSummary] = useState([]);\r\n  const [afterVisitSummary, setAfterVisitSummary] = useState([]);\r\n  const medication = useSelector((state) => state.medication);\r\n  const [chatMedication, setChatMedication] = useState([]);\r\n  const [careGaps, setCareGaps] = useState(\"\");\r\n  const [shortText, setShortText] = useState(\"\");\r\n  const [goalsList, setGoalsList] = useState(\"\");\r\n\r\n  const [survey_ids, setSurveyId] = React.useState(\"\");\r\n  const [changeStatusvalue, setChangeStatusValue] = React.useState(0);\r\n  const [recommendation_for_resolution, setrecommendation_for_resolution] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n  const [markStatus, setMarkStatus] = React.useState(0);\r\n  const [selVisitId, setSelVisitId] = React.useState(0);\r\n\r\n  const [reviewButton, setReviewButton] = React.useState('');\r\n  const [markAsReviewedAllergy, setMarkAsReviewedAllergy] = React.useState('');\r\n  const [medicationButton, setMedicationButton] = React.useState('Save');\r\n  const [markAsReviewedMedication, setMarkAsReviewedMedication] = React.useState('');\r\n  const [markAsReviewedMedicationText, setMarkAsReviewedMedicationText] = React.useState('');\r\n  \r\n  const handleSelectChange = (event) => {\r\n    setAge(event.target.value);\r\n    setSelectAction(event.target.value);\r\n    let se = event.target.value;\r\n    if (list1 !== \"\" && list2 !== \"\" && se !== \"\") {\r\n      setBackButtonAction(\"Save\");\r\n    }\r\n  };\r\n  const handleSearchChange = (event, values) => {\r\n    setMedicineName(values.label);\r\n    let se = values.label;\r\n    if (list3 !== \"\" && se !== \"\") {\r\n      setExpandedDescription(false);\r\n    } else {\r\n      setExpandedDescription(true);\r\n    }\r\n  };\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  /* console.log(room, \"room\")\r\n  console.log(participants, \"particpants\") */\r\n  const handleAction1 = () => {\r\n    setButtonAction(false);\r\n    setListAction1(\"active\");\r\n    setListAction2(\"\");\r\n    setButtonDisableAction(false);\r\n    setReviewButton('review-button-active');\r\n    noAllergy = (\r\n      <ListItem\r\n        className={`active`}\r\n        key={1}\r\n        disableGutters\r\n        sx={{ borderRadius: 10, backgroundColor: \"#EFF0F6\", my: 3, py:1.8 }}\r\n      >\r\n        <IconButton onClick={handleAction1}>\r\n          <Brightness1Icon\r\n            className={`${listAction1} line`}\r\n            sx={{ color: \"#DFE6E9\" }}\r\n          />\r\n        </IconButton>\r\n        <ListItemText\r\n          className={`${listAction1} line`}\r\n          primary={\"No Known Drug Allergies\"}\r\n          sx={{ px: 2 }}\r\n        />\r\n      </ListItem>\r\n    );\r\n  };\r\n  const handleAction2 = () => {\r\n      setScreenAction(1)\r\n      setReviewButton('');\r\n      // noAllergy = (\r\n      //   <ListItem\r\n      //     key={1}\r\n      //     disableGutters\r\n      //     sx={{ borderRadius: 10, backgroundColor: \"#EFF0F6\", my: 3, py:1.8  }}\r\n      //   >\r\n      //     <IconButton onClick={handleAction1}>\r\n      //       <Brightness1Icon\r\n      //         className={`line`}\r\n      //         sx={{ color: \"#DFE6E9\" }}\r\n      //       />\r\n      //     </IconButton>\r\n      //     <ListItemText\r\n      //       className={` line`}\r\n      //       primary={\"No Known Drug Allergies\"}\r\n      //       sx={{ px: 2 }}\r\n      //     />\r\n      //   </ListItem>\r\n      // );\r\n      \r\n  };\r\n  const handleAction3 = () => {\r\n    setScreenAction(1);\r\n  };\r\n  const SaveOrBack = (e) => {\r\n    let l1 = list1;\r\n    let l2 = list2;\r\n    if (e.target.id === \"list1\") {\r\n      setList1Action(e.target.value);\r\n      l1 = e.target.value;\r\n    } else if (e.target.id === \"list2\") {\r\n      setList2Action(e.target.value);\r\n      l2 = e.target.value;\r\n    }\r\n\r\n    if (l1 !== \"\" && l2 !== \"\" && select !== \"\") {\r\n      setBackButtonAction(\"Save\");\r\n    } else if (screenAction == 1 && l1 === \"\" || l2 === \"\" || select !== \"\") {\r\n      setBackButtonAction(\"Back\");\r\n    }\r\n    else if (screenAction == 2 && l1 === \"\" || l2 === \"\" || select !== \"\"){\r\n      setBackButtonAction(\"Done\");\r\n    }\r\n  };\r\n  const ShowDescription = (e) => {\r\n    setMedicationButton(\"Save\");\r\n    let l3 = list3;\r\n    if (e.target.id === \"list3\") {\r\n      setList3Action(e.target.value);\r\n      l3 = e.target.value;\r\n    }\r\n    if (l3 !== \"\" && medicineName !== \"\") {\r\n      setExpandedDescription(false);\r\n    } else {\r\n      setExpandedDescription(true);\r\n    }\r\n  };\r\n  const completeAllergy = async (e) => {\r\n    if (backButtonAction === \"Save\") {\r\n      let allergyData = {\r\n        list1: list1,\r\n        list2: list2,\r\n        select: select,\r\n        patient_id: patient.id,\r\n      };\r\n      \r\n      // eslint-disable-next-line\r\n      var temp = await axios\r\n        .post(server.serverURL + \"v1/add-allergy\", allergyData, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        })\r\n        .then(function (response) {});\r\n      let tempID = [];\r\n      tempID = {\r\n        selPatient: patient.id,\r\n      };\r\n      getAllergy(tempID);\r\n      // setCheckAction1(\"check-active\");\r\n      // setExpanded(false);\r\n      // setScreenAction(true);\r\n      setListAction1(\"\");\r\n      setListAction2(\"\");\r\n      setList1Action(\"\");\r\n      setList2Action(\"\");\r\n      setList3Action(\"\");\r\n      setBackButtonAction(\"Done\");\r\n\r\n      setButtonAction(true);\r\n      // setActiveNumber(1);\r\n    } else if (e.target.innerText == \"Back\") {\r\n      setListAction2(\"active\");\r\n      if(checkAction1 != \"check-active\"){\r\n        noAllergy = (\r\n          <ListItem\r\n                  key={1}\r\n                  disableGutters\r\n                  sx={{ borderRadius:6 , backgroundColor: \"#EFF0F6\", my: 3,py:1.8 }}\r\n                >\r\n                  <IconButton onClick={handleAction1}>\r\n                    <Brightness1Icon\r\n                      className={` line`}\r\n                      sx={{ color: \"#DFE6E9\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <ListItemText\r\n                    className={` line`}\r\n                    primary={\"No Known Drug Allergies\"}\r\n                    sx={{ px: 2 }}\r\n                  />\r\n          </ListItem>\r\n        )\r\n      }\r\n      setScreenAction(0);\r\n    }\r\n    else if (e.target.innerText == \"Done\") {\r\n      setScreenAction(0);\r\n      setReviewButton('review-button-active');    \r\n      setMarkAsReviewedAllergy(\"\");  \r\n    }\r\n    else if (screenAction == 0 && e.target.innerText == \"Mark as reviewed\") {\r\n      setCheckAction1(\"check-active\");\r\n      setMarkAsReviewedAllergy(Date.now());\r\n      setExpanded(false);\r\n      setScreenAction(0);\r\n      setListAction1(\"\");\r\n      setListAction2(\"\");\r\n      setList1Action(\"\");\r\n      setList2Action(\"\");\r\n      setList3Action(\"\");\r\n      setBackButtonAction(\"Done\");\r\n\r\n      setButtonAction(true);\r\n    }\r\n  };\r\n\r\n  const completeMedicine = async (e) => {\r\n    if(e.target.innerText == \"Save\") {\r\n      let medicineData = {\r\n        list3: list3,\r\n        list4: list4,\r\n        medicineName: medicineName,\r\n        patient_id: patient.id,\r\n      };\r\n      \r\n      var temp = await axios\r\n        .post(server.serverURL + \"v1/add-medicine\", medicineData, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        })\r\n        .then(function (response) {\r\n          // setCheckAction2(\"check-active\");\r\n          // setExpanded(false);\r\n          // setScreenAction(1);\r\n          setListAction3(\"\");\r\n          setList3Action(\"\");\r\n          setList4Action(\"\");\r\n          // setMedicineName(\"\");\r\n          setMedicationButton(\"Done\");\r\n          dispatch({ type: GET_PATIENT_MEDICATION_DATA, payload: patient.id });\r\n        });\r\n    }\r\n    else if(e.target.innerText == \"Done\") {\r\n      setScreenAction(0);\r\n      setMarkAsReviewedMedication(\"MarkAsReview\");\r\n    }\r\n    else if(screenAction == 0 && e.target.innerText == \"Mark as reviewed\") {\r\n      setCheckAction2('check-active');\r\n      let now = Moment(Date.now()).format('MM/DD/YYYY in hh:mm a');\r\n      setMarkAsReviewedMedicationText(\"Last reviewed on \" +  now);    \r\n    }\r\n  };\r\n  const noAllergyComplete = () => {\r\n    setCheckAction1(\"check-active\");\r\n    // setExpanded(false);\r\n    // setScreenAction(1);\r\n    setListAction1(\"\");\r\n    setListAction2(\"\");\r\n    setButtonAction(true);\r\n    setActiveNumber(1);\r\n    setCheckAction1(\"check-active\");\r\n    let now = Moment(Date.now()).format('MM/DD/YYYY in hh:mm a');\r\n    setMarkAsReviewedAllergy(\"Last reviewed on\" +  now);    \r\n  };\r\n  useEffect(() => {\r\n    let data = jwt.decode(chatInfo, \"xxx\");\r\n    let patient = data.userInfo;\r\n    dispatch({ type: GET_PATIENT_MEDICATION_DATA, payload: patient.id });\r\n    setPatient(patient);\r\n    let tempID = [];\r\n    tempID = {\r\n      selPatient: patient.id,\r\n    };\r\n    getDrugData();\r\n    getAllergy(tempID);\r\n    getMedicationData(medication);\r\n    // get_survey_id(patient.id)\r\n    get_survey_info(patient.id);\r\n    get_gapincare_info(patient.id);\r\n    get_after_summary(patient.id);\r\n    console.log(medication)\r\n  }, [chatInfo, medication.length, changeStatusvalue]);\r\n  const getMedicationData = (data) => {\r\n    let array = [];\r\n    if (data.length !== 0 && data.length > 4) {\r\n      for (let index = 0; index < 4; index++) {\r\n        const element = data[index];\r\n        element ? array.push(element[\"title\"]) : array.push(\"\");\r\n      }\r\n      setChatMedication(array);\r\n    } else if (data.length !== 0 && data.length <= 4) {\r\n      for (let index = 0; index < data.length; index++) {\r\n        const element = data[index];\r\n        element ? array.push(element[\"title\"]) : array.push(\"\");\r\n      }\r\n      setChatMedication(array);\r\n      setActiveNumber(2);\r\n    } else {\r\n      setChatMedication([]);\r\n    }\r\n  };\r\n  const getDrugData = async () => {\r\n    var temp = await axios\r\n      .get(server.serverURL + \"v1/getDrug\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        response.data.data.map((item, index) => {\r\n          drugData[index] = {\r\n            label: response.data.data[index][\"brand_name\"],\r\n          };\r\n        });\r\n      });\r\n    console.log(drugData);\r\n  };\r\n  const getAllergy = async (ID) => {\r\n    let patient = {\r\n      patientID: ID,\r\n    };\r\n    var temp = await axios\r\n      .post(server.serverURL + \"v1/allergy\", patient, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setAllergy(response.data.data);\r\n        if(screenAction === 0 && response.data.data.length != 0) {\r\n          setCheckAction1('check-active');\r\n        }\r\n        if (response.data.data.length == 0) {\r\n          noAllergy = (\r\n            <ListItem\r\n              className={`${listAction1}`}\r\n              key={1}\r\n              disableGutters\r\n              sx={{ borderRadius: 6, backgroundColor: \"#EFF0F6\", my: 3,py:1.8 }}\r\n            >\r\n              <IconButton onClick={handleAction1}>\r\n                <Brightness1Icon\r\n                  className={`${listAction1} line`}\r\n                  sx={{ color: \"#DFE6E9\" }}\r\n                />\r\n              </IconButton>\r\n              <ListItemText\r\n                className={`${listAction1} line`}\r\n                primary={\"No Known Drug Allergies\"}\r\n                sx={{ px: 2 }}\r\n              />\r\n            </ListItem>\r\n          );\r\n        } else {\r\n          // setCheckAction1(\"check-active\");\r\n          noAllergy = \"\";\r\n        }\r\n      });\r\n  };\r\n  const get_survey_info = async (patient_id) => {\r\n    await axios\r\n      .get(\r\n        server.domainURL +\r\n          \"/webapi/v1/survey-questions?patient_id=\" +\r\n          patient_id,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setCheckAction3(\"check-active\");\r\n        setSurvey(response.data.data);\r\n      });\r\n  };\r\n  const textedithandler = (e) => {\r\n    if(e.target.id == \"textedit\")\r\n      setCareGaps(e.target.value);\r\n    else if(e.target.id == \"goalsList\"){\r\n      setGoalsList(e.target.value);\r\n    }\r\n  }\r\n  const get_gapincare_info = async (id) => {\r\n    await axios\r\n    .get(\r\n      server.serverURL + \"v1/gaps-in-care/\" + id,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n      if(response.data && response.data.data.length > 0) {\r\n        setCheckAction4(\"check-active\");\r\n        setGapsInCare(response.data);\r\n      }\r\n    });\r\n  }\r\n  const get_after_summary = async (id) => {\r\n    await axios\r\n    .get(\r\n      server.serverURL + \"v1/visit-summaries?patient_id=\" + id,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n    .then(function (response) {\r\n      console.log(localStorage);\r\n      setafterSummary(response.data.data);\r\n      let tempData = []\r\n      tempData = response.data.data.filter((item, index)=> (\r\n        item['doctor_info']['id'] == localStorage.getItem('userId')\r\n      ))\r\n      let lastElement = [];\r\n      if(response.data.data[0]) {\r\n        setCheckAction5(\"check-active\");\r\n        setCheckAction6(\"check-active\");\r\n      }\r\n      lastElement.push(tempData[0]);\r\n      console.log(lastElement)\r\n      if(lastElement.length > 0 && lastElement[0] != undefined)\r\n        setSelVisitId(lastElement[0]['id']);\r\n      setAfterVisitSummary(lastElement);\r\n    });\r\n  }\r\n  const showSave = (e) => {\r\n    setMedicationButton(\"Save\");\r\n    let l4 = list4;\r\n    if (e.target.id === \"list4\") {\r\n      setList4Action(e.target.value);\r\n      l4 = e.target.value;\r\n    }\r\n    if (l4 !== \"\" && list3 != \"\" && medicineName !== \"\") {\r\n      setMedicineSave(false);\r\n    } else {\r\n      setMedicineSave(true);\r\n    }\r\n  };\r\n\r\n  const formgaps = (e) => {\r\n    if(e.target.name == \"recommendation\") {\r\n      setrecommendation_for_resolution(e.target.value);\r\n    }\r\n    else if(e.target.name == \"notes\") {\r\n      setNotes(e.target.value);\r\n    }\r\n    else if(e.target.name == \"short_text\") {\r\n      setShortText(e.target.value);\r\n    }\r\n  }\r\n  const save_gaps_info = () => {\r\n    var text = careGaps;\r\n    var lines = text.split('\\n');\r\n    console.log(patient);\r\n    console.log(chatMedication);\r\n    // let medicationarray = []\r\n    // medication.map((item) => {\r\n    //   let temp = {\"id\":item.id}\r\n    //   medicationarray.push(temp)\r\n    // })\r\n    let medicationarray = [\r\n      {\r\n        \"medication_id\":643,\r\n      }\r\n    ]\r\n    let gapscare = [\r\n      {\r\n        \"id\":5,\r\n        \"id\":6,\r\n      }\r\n    ]\r\n    let gapdata = {}\r\n    gapdata = {\r\n      patient_id: patient.id,\r\n      medications: medicationarray,\r\n      recommendation_for_resolution: recommendation_for_resolution,\r\n      care_gaps_as_noted_on_survey: gapscare,\r\n      notes: notes,\r\n    };\r\n    console.log(gapdata)\r\n    axios.post(server.serverURL + \"v1/gaps-in-care\", gapdata, {\r\n      headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n    .then(function (response) {\r\n      setrecommendation_for_resolution(\"\");\r\n      setNotes(\"\");\r\n      setChangeStatusValue(Math.random())\r\n      setMarkStatus(0);\r\n    });\r\n  }\r\n  const save_after_visit_summary = () => {\r\n    var text = goalsList;\r\n    var lines = text.split('\\n');\r\n    let medicationarray = [\r\n      {\r\n        \"medication_id\":643,\r\n      }\r\n    ]\r\n    let goals = [];\r\n    lines.map((item) => {\r\n      let goalItem = {\"value\":item}\r\n      goals.push(goalItem);\r\n    })\r\n    console.log(goals);\r\n    let summaryData = {\r\n      patient_id: patient.id,\r\n      medications: medicationarray,\r\n      short_text: shortText,\r\n      goals: goals,\r\n    };\r\n    if(afterVisitSummary[0] === undefined) {\r\n      axios.post(server.serverURL + \"v1/visit-summaries\", summaryData, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token,\r\n        },\r\n      }).then(res => {\r\n        setChangeStatusValue(Math.random())\r\n        setMarkStatus(0);\r\n      })\r\n    }\r\n    axios.put(server.serverURL + \"v1/visit-summaries/\" + selVisitId, summaryData, {\r\n      headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n      },\r\n    }).then(res => {\r\n      setChangeStatusValue(Math.random())\r\n      setMarkStatus(0);\r\n    })\r\n\r\n  }\r\n  const changeStatus = () => {\r\n    if(markStatus == 0)\r\n      setMarkStatus(1)\r\n    else\r\n      setMarkStatus(0)\r\n  }\r\n\r\n\r\n  const save = (data) => {\r\n    console.log(data);\r\n  };\r\n  \r\n  const myTheme = createTheme({\r\n    // Set up your custom MUI theme here\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"room d-flex justify-content-center flex-column py-4 px-3\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div className=\"d-flex justify-content-between p-3\">\r\n          <div className=\"checked-title\">\r\n            Medication Therapy\r\n            <br /> Management Tasks\r\n          </div>\r\n          <div className=\"checked-info\">\r\n            {activeNumber} out of 6<br /> completed\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"accordation\">\r\n        \r\n        <div className=\"d-flex\">\r\n        \r\n          <CheckCircleIcon\r\n            className={`${checkAction1}`}\r\n            style={{ marginRight: 20, marginTop: 28 }}\r\n          />\r\n          <Accordion\r\n            className=\"w-100\"\r\n            expanded={expanded === \"panel1\"}\r\n            onChange={handleChange(\"panel1\")}\r\n            sx={{\r\n              py: 0.4,\r\n              my: 0.8,\r\n              backgroundColor: \"#F7F7FC\",\r\n              borderRadius: 4,\r\n              boxShadow: 0,\r\n            }}\r\n          >\r\n            \r\n            <AccordionSummary\r\n              expandIcon={<AddIcon />}\r\n              aria-controls=\"panel1bh-content\"\r\n              id=\"panel1bh-header\"\r\n            >\r\n              <Typography sx={{ width: \"33%\", flexShrink: 0, fontWeight: 600 }}>\r\n                Allergies\r\n              </Typography>\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails>\r\n              {screenAction === 0 && (\r\n                <div>\r\n                  <List sx={{ width: \"100%\", bgcolor: \"#F7F7FC\" }}>\r\n                    {allergy.map((item, i) => (\r\n                      <ListItem\r\n                        key={i}\r\n                        disableGutters\r\n                        sx={{\r\n                          borderRadius: 4,\r\n                          backgroundColor: \"#6308F7\",\r\n                          my: 2,\r\n                          py: 1.0,\r\n                        }}\r\n                      >\r\n                        <IconButton onClick={handleAction1}>\r\n                          <CheckBoxIcon\r\n                            className=\"active\"\r\n                            sx={{\r\n                              color: \"#cccccc\",\r\n                              backgroundColor: \"#FFFFFF\",\r\n                            }}\r\n                          />\r\n                        </IconButton>\r\n                        <ListItemText\r\n                          className=\"active\"\r\n                          primary={`${item.allergy_name} - ${item.interaction} ${item.allergy_type}`}\r\n                          sx={{ px: 2, color: \"#FFFFFF\" }}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                    {noAllergy}\r\n                    <ListItem\r\n                      className={`${listAction2}`}\r\n                      key={2}\r\n                      disableGutters\r\n                      sx={{\r\n                        borderRadius: 5,\r\n                        backgroundColor: \"#EFF0F6\",\r\n                        mt: 10,\r\n                        py: 1.8,\r\n                      }}\r\n                    >\r\n                      <IconButton onClick={handleAction2}>\r\n                        <Brightness1Icon\r\n                          className={`${listAction2} line`}\r\n                          sx={{ color: \"#DFE6E9\" }}\r\n                        />\r\n                      </IconButton>\r\n                      <ListItemText\r\n                        className={`${listAction2} line`}\r\n                        primary={\"Add an Allergy\"}\r\n                        sx={{ px: 2 }}\r\n                      />\r\n                    </ListItem>\r\n                  </List>\r\n                  {(\r\n                    <div>\r\n                  <div className=\"text-center\" style={{color:\"#6308F7\", marginTop: 45, marginBottom:6, fontWeight:700}}>{markAsReviewedAllergy}</div>\r\n                    <button\r\n                      onClick={noAllergyComplete}\r\n                      className={`w-100 allergy-review-button ${reviewButton}`}\r\n                      variant=\"contained\"\r\n                      disabled={buttonDisableAction}\r\n                      style={{\r\n                        paddingBottom: 16,\r\n                        paddingTop: 16,\r\n                        borderRadius: 32,\r\n                      }}\r\n                    >\r\n                      Mark As Reviewed\r\n                    </button></div>)}\r\n                  \r\n                </div>\r\n              )}\r\n              {screenAction === 1 && (\r\n                <div>\r\n                    {allergy.map((item, i) => (\r\n                      <ListItem\r\n                        key={i}\r\n                        disableGutters\r\n                        sx={{\r\n                          borderRadius: 4,\r\n                          backgroundColor: \"#6308F7\",\r\n                          my: 2,\r\n                          py: 1.0,\r\n                        }}\r\n                      >\r\n                        <IconButton onClick={handleAction1}>\r\n                          <CheckBoxIcon\r\n                            className=\"active\"\r\n                            sx={{\r\n                              color: \"#cccccc\",\r\n                              backgroundColor: \"#FFFFFF\",\r\n                            }}\r\n                          />\r\n                        </IconButton>\r\n                        <ListItemText\r\n                          className=\"active\"\r\n                          primary={`${item.allergy_name} - ${item.interaction} ${item.allergy_type}`}\r\n                          sx={{ px: 2, color: \"#FFFFFF\" }}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                <input\r\n                  id=\"list1\"\r\n                  value={list1}\r\n                  type=\"text\"\r\n                  placeholder=\"Allergy\"\r\n                  className=\"w-100 login-form\"\r\n                  onChange={SaveOrBack}\r\n                  style={{margin:5}}\r\n                />\r\n                <input\r\n                  id=\"list2\"\r\n                  value={list2}\r\n                  type=\"text\"\r\n                  placeholder=\"Reaction\"\r\n                  className=\"w-100 login-form\"\r\n                  onChange={SaveOrBack}\r\n                  style={{margin:5}}\r\n                />\r\n                <Box sx={{ minWidth: 120 }}>\r\n                    <Select\r\n                      id=\"demo-simple-select\"\r\n                      value={age}\r\n                      className=\"login-form w-100\"\r\n                      onChange={handleSelectChange}\r\n                      style={colourStyles}\r\n                    >\r\n                      <MenuItem value=\"Mild\">Mild</MenuItem>\r\n                      <MenuItem value=\"Moderate\">Moderate</MenuItem>\r\n                      <MenuItem value=\"Severe\">Severe</MenuItem>\r\n                    </Select>\r\n                </Box>\r\n                {/* <Select\r\n                  defaultValue={items[0]}\r\n                  label=\"Single select\"\r\n                  options={items}\r\n                  styles={colourStyles}\r\n                /> */}\r\n                <ColorButton\r\n                  className=\"w-25\"\r\n                  variant=\"contained\"\r\n                  onClick={completeAllergy}\r\n                  style={{\r\n                    float: \"right\",\r\n                    marginTop: 12,\r\n                    marginBottom: 12,\r\n                    paddingBottom: 16,\r\n                    paddingTop: 16,\r\n                    borderRadius: 32,\r\n                  }}\r\n                >\r\n                  {backButtonAction}\r\n                </ColorButton>\r\n              </div>\r\n              )}     \r\n              {screenAction === 2 && (\r\n                <div>\r\n                    {allergy.map((item, i) => (\r\n                      <ListItem\r\n                        key={i}\r\n                        disableGutters\r\n                        sx={{\r\n                          borderRadius: 4,\r\n                          backgroundColor: \"#6308F7\",\r\n                          my: 2,\r\n                          py: 1.0,\r\n                        }}\r\n                      >\r\n                        <IconButton onClick={handleAction1}>\r\n                          <CheckBoxIcon\r\n                            className=\"active\"\r\n                            sx={{\r\n                              color: \"#cccccc\",\r\n                              backgroundColor: \"#FFFFFF\",\r\n                            }}\r\n                          />\r\n                        </IconButton>\r\n                        <ListItemText\r\n                          className=\"active\"\r\n                          primary={`${item.allergy_name} - ${item.interaction} ${item.allergy_type}`}\r\n                          sx={{ px: 2, color: \"#FFFFFF\" }}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                    <div className=\"text-center\" style={{color:\"#6308F7\", marginTop: 45, marginBottom:6, fontWeight:700}}>{`Last reviewed on ${Moment(markAsReviewedAllergy).format('MM/DD/YYYY in hh:mm a')}`}</div>                    \r\n                <ColorButton\r\n                  className=\"w-100\"\r\n                  variant=\"contained\"\r\n                  onClick={completeAllergy}\r\n                  style={{\r\n                    float: \"right\",\r\n                    marginBottom: 12,\r\n                    paddingBottom: 16,\r\n                    paddingTop: 16,\r\n                    borderRadius: 32,\r\n                  }}\r\n                >\r\n                  Mark as reviewed\r\n                </ColorButton>\r\n              </div>\r\n              )}          \r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <CheckCircleIcon\r\n            className={checkAction2}\r\n            style={{ marginRight: 20, marginTop: 28 }}\r\n          />\r\n          <Accordion\r\n            className=\"w-100\"\r\n            expanded={expanded === \"panel2\"}\r\n            onChange={handleChange(\"panel2\")}\r\n            sx={{\r\n              py: 0.4,\r\n              my: 0.8,\r\n              backgroundColor: \"#F7F7FC\",\r\n              borderRadius: 5,\r\n              boxShadow: 0,\r\n            }}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<AddIcon />}\r\n              aria-controls=\"panel2bh-content\"\r\n              id=\"panel2bh-header\"\r\n            >\r\n              <Typography sx={{ width: \"33%\", flexShrink: 0, fontWeight: 600 }}>\r\n                Current Medications\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {chatMedication.map((item, i) => (\r\n                <ListItem\r\n                  key={i}\r\n                  disableGutters\r\n                  sx={{\r\n                    borderRadius: 4,\r\n                    backgroundColor: \"#6308F7\",\r\n                    my: 3,\r\n                    py: 0.5,\r\n                  }}\r\n                >\r\n                  <IconButton onClick={handleAction1}>\r\n                    <CheckBoxIcon\r\n                      className=\"active\"\r\n                      sx={{ color: \"#914DFF\", backgroundColor: \"#FFFFFF\" }}\r\n                    />\r\n                  </IconButton>\r\n                  <ListItemText\r\n                    className=\"active\"\r\n                    primary={item}\r\n                    sx={{ px: 2, color: \"#FFFFFF\" }}\r\n                  />\r\n                  {/* <p className=\"active\" key={i}>{item}</p> */}\r\n                </ListItem>\r\n              ))}\r\n              {screenAction === 0 && (\r\n                <div>\r\n                  <ListItem\r\n                    className={`${listAction3}`}\r\n                    key={5}\r\n                    disableGutters\r\n                    sx={{ borderRadius: 10, backgroundColor: \"#EFF0F6\", my: 3 }}\r\n                  >\r\n                    <IconButton onClick={handleAction3}>\r\n                      <Brightness1Icon\r\n                        className={listAction3}\r\n                        sx={{ color: \"#DFE6E9\" }}\r\n                      />\r\n                    </IconButton>\r\n                    <ListItemText\r\n                      className={`${listAction3}`}\r\n                      primary={\"Add an Medication\"}\r\n                      sx={{ px: 2 }}\r\n                    />\r\n                  </ListItem>\r\n                </div>\r\n              )}\r\n              { screenAction === 0 && markAsReviewedMedication == \"MarkAsReview\" && (\r\n                <div>\r\n                  <div className=\"text-center\" style={{color:\"#6308F7\", marginTop: 45, marginBottom:6, fontWeight:700}}>{markAsReviewedMedicationText}</div>                    \r\n                  <ColorButton\r\n                    className=\"w-100\"\r\n                    variant=\"contained\"\r\n                    onClick={completeMedicine}\r\n                    style={{\r\n                      float: \"right\",\r\n                      marginBottom: 12,\r\n                      paddingBottom: 16,\r\n                      paddingTop: 16,\r\n                      borderRadius: 32,\r\n                    }}\r\n                  >\r\n                    Mark as reviewed\r\n                  </ColorButton>\r\n                </div>\r\n              )}\r\n              { screenAction === 1 && (\r\n                <div>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <Autocomplete\r\n                    disablePortal\r\n                    id=\"combo-box-demo\"\r\n                    options={drugData}\r\n                    sx={{ width: 250 }}\r\n                    onChange={handleSearchChange}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} label=\"Medication name\" />\r\n                    )}\r\n                    style={{\r\n                      border: \"2 solid transparent\",\r\n                      boxShadow: 0,\r\n                      borderRadius: 24,\r\n                    }}\r\n                  />\r\n                  <input\r\n                    id=\"list3\"\r\n                    value={list3}\r\n                    style={{ marginTop: 7, marginLeft: 20 }}\r\n                    type=\"text\"\r\n                    placeholder=\"Strength\"\r\n                    className=\"w-50 login-form\"\r\n                    onChange={ShowDescription}\r\n                  />\r\n                </div>\r\n                <div hidden={expandedDescription}>\r\n                  <input\r\n                    id=\"list4\"\r\n                    value={list4}\r\n                    style={{ marginTop: 7 }}\r\n                    type=\"text\"\r\n                    placeholder=\"Directions\"\r\n                    className=\"w-100 login-form\"\r\n                    onChange={showSave}\r\n                  />\r\n                  <ColorButton\r\n                    className=\"w-25\"\r\n                    hidden={medicineSave}\r\n                    variant=\"contained\"\r\n                    onClick={completeMedicine}\r\n                    style={{\r\n                      float: \"right\",\r\n                      marginTop: 12,\r\n                      marginBottom: 12,\r\n                      paddingBottom: 12,\r\n                      paddingTop: 12,\r\n                      borderRadius: 32,\r\n                    }}\r\n                  >\r\n                    {medicationButton}\r\n                  </ColorButton>                \r\n              </div>\r\n              </div>)\r\n              }\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <CheckCircleIcon\r\n            className={checkAction3}\r\n            style={{ marginRight: 20, marginTop: 28 }}\r\n          />\r\n          <Accordion\r\n            className=\"w-100\"\r\n            expanded={expanded === \"panel3\"}\r\n            onChange={handleChange(\"panel3\")}\r\n            sx={{\r\n              py: 0.4,\r\n              my: 0.8,\r\n              backgroundColor: \"#F7F7FC\",\r\n              borderRadius: 5,\r\n              boxShadow: 0,\r\n            }}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<AddIcon />}\r\n              aria-controls=\"panel3bh-content\"\r\n              id=\"panel3bh-header\"\r\n            >\r\n              <Typography sx={{ width: \"33%\", flexShrink: 0, fontWeight: 600 }}>\r\n                Survey Answers\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {survey && survey.map((item, index) => (\r\n                <div className=\"d-flex\">\r\n                  <div className=\"p-1\"><p style={{fontWeight:600}}>Q{index + 1}.</p></div>\r\n                  <div>\r\n                    <p className=\"pl-2\" style={{fontWeight:400, letterSpacing:1.0}}>\r\n                      {item.question_description}\r\n                    <span style={{color:\"#610BEF\", fontWeight:600}}> {item.multiple_options && item.multiple_options\r\n                    .length !== 0 && item.multiple_type_id && item.multiple_type_id === 1 && item.multiple_options[item.multiple_type_id].name}{item.multiple_type_id && item.multiple_type_id === 2 && item.answer}\r\n                    </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}              \r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n        \r\n        <div className=\"d-flex flex-row\">\r\n          <CheckCircleIcon\r\n            className={checkAction4}\r\n            style={{ marginRight: 20, marginTop: 28 }}\r\n          />\r\n          <Accordion\r\n            className=\"w-100\"\r\n            expanded={expanded === \"panel5\"}\r\n            onChange={handleChange(\"panel5\")}\r\n            sx={{\r\n              py: 0.4,\r\n              my: 0.8,\r\n              backgroundColor: \"#F7F7FC\",\r\n              borderRadius: 5,\r\n              boxShadow: 0,\r\n            }}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<AddIcon />}\r\n              aria-controls=\"panel5bh-content\"\r\n              id=\"panel5bh-header\"\r\n            >\r\n              <Typography sx={{ width: \"33%\", flexShrink: 0, fontWeight: 600 }}>\r\n                Gaps In Care\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <div>\r\n                <div>\r\n                    <p className=\"fw-600\">The Following Medication Interactions were Noted</p>\r\n                </div>\r\n                <div>\r\n                  {chatMedication.map((item, i) => (\r\n                    <ListItem\r\n                      key={i}\r\n                      disableGutters\r\n                      sx={{\r\n                        borderRadius: 4,\r\n                        backgroundColor: \"#6308F7\",\r\n                        my: 3,\r\n                        py: 0.5,\r\n                      }}\r\n                      className=\"w-85 mx-auto\"\r\n                    >\r\n                      <IconButton onClick={handleAction1}>\r\n                        <CheckBoxIcon\r\n                          className=\"active\"\r\n                          sx={{ color: \"#914DFF\", backgroundColor: \"#FFFFFF\" }}\r\n                        />\r\n                      </IconButton>\r\n                      <ListItemText\r\n                        className=\"active\"\r\n                        primary={item}\r\n                        sx={{ px: 2, color: \"#FFFFFF\" }}\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"p-2\">\r\n                <div>\r\n                  <p className=\"fw-600\">Input Recommendation for Resolution</p>\r\n                </div>\r\n                <div className=\"w-85 mx-auto p-3\" style={{borderRadius:12}}>\r\n                  {markStatus == 1 && <input type=\"text\" name=\"recommendation\" placeholder=\"Recommendation for resolution\" className=\"login-form\" onChange={formgaps} value={recommendation_for_resolution} />}\r\n                  \r\n\r\n                  {/* <p style={{fontWeight:400, lineHeight:1.4}}>We suggest you contact your primary doctor to resolve this.</p> */}\r\n                  {markStatus == 0 && <p style={{fontWeight:400, lineHeight:1.4}}>{gapsincare.data && gapsincare.data.length !== 0 && gapsincare.data[0]['recommendation_for_resolution']}</p>}\r\n                </div>\r\n              </div>\r\n              <div className=\"p-2\">\r\n                <div>\r\n                  <p className=\"fw-600\">Care Gaps As Noted on Survey</p>\r\n                </div>\r\n                <div className=\"w-85 mx-auto p-3\">\r\n                  {markStatus == 0 && <ul>\r\n                    <li style={{fontWeight:400, lineHeight:1.4}}>We suggest you contact your primary doctor to resolve this.</li>\r\n                    <li style={{fontWeight:400, lineHeight:1.4}}>This patient is at risk for care coordination issues and has barrires to obtaining care.</li>\r\n                    <li style={{fontWeight:400, lineHeight:1.4}}>This access may be affecting compliance.</li>\r\n                  </ul>}\r\n                  {markStatus == 1  && <textarea  rows=\"5\" cols=\"40\" id=\"textedit\" style={{padding:14}} placeholder=\"Notes Addressing Patient’s Needs\" className=\"edit-form\" onChange={textedithandler}>{careGaps}</textarea>}\r\n                </div>\r\n              </div>\r\n              <div className=\"p-2\">\r\n                <div>\r\n                  <p>Notes Addressing Patient’s Needs</p>\r\n                </div>\r\n                <div className=\"w-85 mx-auto p-3\" style={{borderRadius:12}}>\r\n                {markStatus == 1 && <input type=\"text\" name=\"notes\" placeholder=\"Notes Addressing Patient’s Needs\" className=\"login-form\" onChange={formgaps} value={notes} />}\r\n                {markStatus == 0 && <p style={{fontWeight:400, lineHeight:1.6}} dangerouslySetInnerHTML={{__html: gapsincare.data && gapsincare.data.length !== 0 && gapsincare.data[0]['notes']}} />   }            \r\n                </div> \r\n              </div>\r\n              <div style={{padding:8}}>\r\n                <ColorButton\r\n                    className=\"w-100\"\r\n                    variant=\"contained\"\r\n                    style={{\r\n                      paddingBottom: 12,\r\n                      paddingTop: 12,\r\n                      borderRadius: 32,\r\n                    }}\r\n                    onClick={markStatus === 1 ? save_gaps_info : changeStatus}\r\n                  >\r\n                    {button_text[markStatus]}\r\n                </ColorButton>\r\n              </div>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <CheckCircleIcon\r\n            className={checkAction5}\r\n            style={{ marginRight: 20, marginTop: 28 }}\r\n          />\r\n          <Accordion\r\n            className=\"w-100\"\r\n            expanded={expanded === \"panel6\"}\r\n            onChange={handleChange(\"panel6\")}\r\n            sx={{\r\n              py: 0.4,\r\n              my: 0.8,\r\n              backgroundColor: \"#F7F7FC\",\r\n              borderRadius: 5,\r\n              boxShadow: 0,\r\n            }}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<AddIcon />}\r\n              aria-controls=\"panel6bh-content\"\r\n              id=\"panel6bh-header\"\r\n            >\r\n              <Typography sx={{ width: \"33%\", flexShrink: 0, fontWeight: 600 }}>\r\n                After Visit Summary\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                {afterVisitSummary && afterVisitSummary.length > 0 && afterVisitSummary[0] !== undefined && afterVisitSummary.map((item) => (\r\n                  <div>\r\n                  <div>\r\n                  <p className=\"fw-400\">Dear {patient.patient_name}.</p>\r\n                  <p className=\"fw-400 pt-1\">\r\n                    {markStatus &&  <input type=\"text\" name=\"short_text\" placeholder=\"Recommendation for resolution\" className=\"login-form\" onChange={formgaps} value={shortText}/> }\r\n                    {!markStatus && Moment(item['reviewed_date']).format('MM/DD/YYYY')}{!markStatus &&  item['short_text']}\r\n                  </p>\r\n                </div>\r\n                <div className=\"py-2\">\r\n                  <div>\r\n                    <p className=\"fw-600\">During the course of our review, it was our goal to:</p>\r\n                  </div>\r\n                  <div className=\"w-85 mx-auto\">\r\n                    {markStatus === 0 &&\r\n                      <ul>\r\n                      {item['goals'].map((subitem) => (\r\n                        <li style={{fontWeight:400, lineHeight:1.4}}>{subitem['value']}</li>\r\n                      ))}                        \r\n                      </ul>\r\n                    }\r\n                    {markStatus === 1 &&  <textarea  rows=\"5\" cols=\"40\" id=\"goalsList\" style={{padding:14}} placeholder=\"Notes Addressing Patient’s Needs\" className=\"edit-form\" onChange={textedithandler}>{goalsList}</textarea>} \r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                      <p className=\"fw-400\">Your Current Medications Are</p>\r\n                  </div>\r\n                  <div>\r\n                    {chatMedication.map((item, i) => (\r\n                      <ListItem\r\n                        key={i}\r\n                        disableGutters\r\n                        sx={{\r\n                          borderRadius: 4,\r\n                          backgroundColor: \"#6308F7\",\r\n                          my: 3,\r\n                          py: 0.5,\r\n                        }}\r\n                        className=\"w-85 mx-auto\"\r\n                      >\r\n                        <IconButton onClick={handleAction1}>\r\n                          <CheckBoxIcon\r\n                            className=\"active\"\r\n                            sx={{ color: \"#914DFF\", backgroundColor: \"#FFFFFF\" }}\r\n                          />\r\n                        </IconButton>\r\n                        <ListItemText\r\n                          className=\"active\"\r\n                          primary={item}\r\n                          sx={{ px: 2, color: \"#FFFFFF\" }}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"py-2\">\r\n                  <div>\r\n                    <p className=\"fw-400\">During the course of our review, it was our goal to:</p>\r\n                  </div>\r\n                  <div className=\"w-85 mx-auto\">\r\n                    <ul>\r\n                      <li style={{fontWeight:400, lineHeight:1.4}}>{gapsincare.data && gapsincare.data.length !== 0 && gapsincare.data[0]['recommendation_for_resolution']}</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div style={{padding:8}}>\r\n                    <p style={{fontWeight:400, lineHeight:1.6}}  dangerouslySetInnerHTML={{__html: gapsincare.data && gapsincare.data.length !== 0 && gapsincare.data[0]['notes']}} />\r\n                </div>\r\n                </div>\r\n                ))}\r\n                {afterVisitSummary[0] === undefined && (<div><div>\r\n                  <p className=\"fw-400\">Dear {patient.patient_name}.</p>\r\n                  <p className=\"fw-400 pt-1\">\r\n                    <input type=\"text\" name=\"short_text\" placeholder=\"Recommendation for resolution\" className=\"login-form\" onChange={formgaps} value={shortText}/> \r\n\r\n                  </p>\r\n                </div>\r\n                <div className=\"py-2\">\r\n                  <div>\r\n                    <p className=\"fw-600\">During the course of our review, it was our goal to:</p>\r\n                  </div>\r\n                  <div className=\"w-85 mx-auto\">\r\n                    <textarea  rows=\"5\" cols=\"40\" id=\"goalsList\" style={{padding:14}} placeholder=\"Notes Addressing Patient’s Needs\" className=\"edit-form\" onChange={textedithandler}>{goalsList}</textarea>\r\n                  </div>\r\n                </div></div>)}\r\n                <div style={{padding:8}}>\r\n                <ColorButton\r\n                    className=\"w-100\"\r\n                    variant=\"contained\"\r\n                    style={{\r\n                      paddingBottom: 12,\r\n                      paddingTop: 12,\r\n                      borderRadius: 32,\r\n                    }}\r\n                    onClick={markStatus === 1 ? save_after_visit_summary : changeStatus}\r\n                  >\r\n                    {button_text[markStatus]}\r\n                </ColorButton>\r\n                </div>\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <CheckCircleIcon\r\n            className={checkAction6}\r\n            style={{ marginRight: 20, marginTop: 28 }}\r\n          />\r\n          <Accordion\r\n            className=\"w-100\"\r\n            expanded={expanded === \"panel4\"}\r\n            onChange={handleChange(\"panel4\")}\r\n            sx={{\r\n              py: 0.4,\r\n              my: 0.8,\r\n              backgroundColor: \"#F7F7FC\",\r\n              borderRadius: 5,\r\n              boxShadow: 0,\r\n            }}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<AddIcon />}\r\n              aria-controls=\"panel4bh-content\"\r\n              id=\"panel4bh-header\"\r\n            >\r\n              <Typography sx={{ width: \"33%\", flexShrink: 0, fontWeight: 600 }}>\r\n                Past Visit Notes\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n            {afterSummary && afterSummary.map((item, index) => (\r\n            <Accordion className=\"mt-3\" expanded={subExpanded === 'panel1'+(index+1)} onChange={subhandleChange('panel1'+(index+1))} style={{backgroundColor:\"#ECF0F1\", borderRadius: 15, padding: 12}}>\r\n              <AccordionSummary aria-controls=\"panel1d-content\" id={`panel${index+1}d-header`}>\r\n                <div className=\"d-flex justify-content-between w-100\">\r\n                  <div className=\"d-flex\">\r\n                    <div>\r\n                      <img className=\"img-circle\" src={item['doctor_info']['avatar']} style={{width:84, height:84}} />\r\n                    </div>\r\n                    <div className=\"align-self-center pl-3 pt-3\">\r\n                      <p style={{fontWeight:700}}>Dr. {item['doctor_info']['last_name']}</p>\r\n                      <p style={{fontWeight:400}}>{item['doctor_info']['speciality']}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"align-self-center\" style={{textAlign:\"right\"}}>\r\n                    <p style={{fontWeight:400}}>{item['reviewed_date']}</p>\r\n                    <p style={{fontWeight:400}}>{Moment(item['created_at']).format('hh:mm a')}</p>\r\n                  </div>\r\n                </div>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                <div className=\"pt-4\">\r\n                    <p style={{fontWeight:700, fontSize:19}}>After Visit Summary</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"fw-400\">Dear {patient.patient_name}.</p>\r\n                    <p className=\"fw-400 pt-1\">\r\n                      {Moment(item['reviewed_date']).format('MM/DD/YYYY')} {item['short_text']}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"py-2\">\r\n                    <div>\r\n                      <p className=\"fw-600\">During the course of our review, it was our goal to:</p>\r\n                    </div>\r\n                    <div className=\"w-85 mx-auto\">\r\n                      <ul>\r\n                        {item['goals'].map((subitem) => (\r\n                          <li style={{fontWeight:400, lineHeight:1.4}}>{subitem['value']}</li>\r\n                        ))}                        \r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div>\r\n                        <p className=\"fw-400\">Your Current Medications Are</p>\r\n                    </div>\r\n                    <div>\r\n                      {chatMedication.map((item, i) => (\r\n                        <ListItem\r\n                          key={i}\r\n                          disableGutters\r\n                          sx={{\r\n                            borderRadius: 4,\r\n                            backgroundColor: \"#6308F7\",\r\n                            my: 3,\r\n                            py: 0.5,\r\n                          }}\r\n                          className=\"w-85 mx-auto\"\r\n                        >\r\n                          <IconButton onClick={handleAction1}>\r\n                            <CheckBoxIcon\r\n                              className=\"active\"\r\n                              sx={{ color: \"#914DFF\", backgroundColor: \"#FFFFFF\" }}\r\n                            />\r\n                          </IconButton>\r\n                          <ListItemText\r\n                            className=\"active\"\r\n                            primary={item}\r\n                            sx={{ px: 2, color: \"#FFFFFF\" }}\r\n                          />\r\n                        </ListItem>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"py-2\">\r\n                    <div>\r\n                      <p className=\"fw-400\">During the course of our review, it was our goal to:</p>\r\n                    </div>\r\n                    <div className=\"w-85 mx-auto\">\r\n                      <ul>\r\n                        <li style={{fontWeight:400, lineHeight:1.4}}>{gapsincare.data && gapsincare.data.length !== 0 && gapsincare.data[0]['recommendation_for_resolution']}</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{padding:8}}>\r\n                      <p style={{fontWeight:400, lineHeight:1.6}}  dangerouslySetInnerHTML={{__html: gapsincare.data && gapsincare.data.length !== 0 && gapsincare.data[0]['notes']}} />\r\n                  </div>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              ))}\r\n              <div className=\"pt-3\">\r\n                <ColorButton\r\n                        className=\"w-100\"\r\n                        variant=\"contained\"\r\n                        style={{\r\n                          paddingBottom: 12,\r\n                          paddingTop: 12,\r\n                          borderRadius: 32,\r\n                        }}\r\n                      >\r\n                        Mark As Reviewed\r\n                </ColorButton>\r\n              </div>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport Room from './Room';\r\nimport { useHistory } from 'react-router';\r\nimport { SideBar } from '../sideBar';\r\nimport { ChatWindow } from './chatWindow';\r\nimport { DoctorNotes } from '../userDataComponent/doctorNotes/doctorNotes';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Management } from './Management'\r\nimport jwt from 'jwt-simple';\r\nimport Moment from 'moment';\r\n\r\nconst VideoChat = ({ roomName, token, chatInfo, }) => {\r\n  // const [username, setUsername] = useState('');\r\n  const history = useHistory();\r\n  const [setVideoCallStatus] = useState(0);\r\n  const [patient, setPatient] = React.useState('');\r\n  // const [channelName, setChannelName] = useState(\"\");\r\n  // eslint-disable-next-line\r\n  const createNewRoom = () => {\r\n    setVideoCallStatus(1);\r\n  }\r\n  // eslint-disable-next-line\r\n  const config = {\r\n    headers: {\r\n      'Authorization': 'Bearer ' + localStorage.token\r\n    }\r\n  }\r\n\r\n    useEffect(()=>{\r\n      let data = jwt.decode(chatInfo, \"xxx\");\r\n      let patient = data.userInfo;\r\n      setPatient(patient);\r\n    }, [chatInfo]);\r\n\r\n    const [second, setSecond] = useState('00');\r\n    const [minute, setMinute] = useState('00');\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    // useEffect(() => {\r\n    //   let intervalId;\r\n  \r\n    //   if (isActive) {\r\n    //     intervalId = setInterval(() => {\r\n    //       const secondCounter = counter % 60;\r\n    //       const minuteCounter = Math.floor(counter / 60);\r\n  \r\n    //       const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\r\n    //       const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: minuteCounter;\r\n  \r\n    //       setSecond(computedSecond);\r\n    //       setMinute(computedMinute);\r\n  \r\n    //       setCounter(counter => counter + 1);\r\n    //     }, 1000)\r\n    //   }\r\n  \r\n    //   return () => clearInterval(intervalId);\r\n    // }, [isActive, counter])\r\n    \r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const foo = params.get('info');\r\n    console.log(foo);\r\n    const handleLogout = useCallback(event => {\r\n      if(foo == \"videocall\"){\r\n        // history.push(\"/calendar\");\r\n        // window.location.reload();\r\n        window.location.href = \"/calendar\";\r\n      }\r\n      else {\r\n        // history.push(\"/chat\");\r\n        // window.location.reload();\r\n        window.location.href = \"/chat\";\r\n      }\r\n    });\r\n    let dates = Date()\r\n  console.log(patient.DOB);\r\n  let render;\r\n  render = (\r\n    <div style={{ width: \"100%\", height: \"100%\" }}>\r\n      <SideBar select={\"chat\"} />\r\n      <div className=\"main-section\">\r\n        <div style={{ width: \"100%\", height: \"100%\" }}>\r\n          <div className=\"row video-window d-flex\" style={{ width: \"96%\", height: \"68vh\", minHeight: \"66vh\", marginBottom: \"30px\" }}>\r\n            <div className=\"col-6\" style={{ height: \"100%\" }}>\r\n            <div className=\"tele-icon d-flex justify-content-between\">\r\n                <img src=\"/assets/images/tele-icon.png\" width={230}/>                \r\n                <div className=\"btn btn-indigo\" style={{height:39, width:81}} onClick={handleLogout}>Back</div>\r\n            </div>            \r\n                <div className=\"d-flex justify-content-between fw-600\">\r\n                    <div>\r\n                        <div>Call Duration</div>\r\n                        <div>{minute} : {second}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div>{patient.patient_name} - {Moment(patient.DOB).format('MM/DD/YYYY')}</div>\r\n                    </div>\r\n                </div>\r\n              <div className=\"card-section\" style={{\r\n                width: \"100%\",\r\n                height: \"90%\",\r\n                padding: 0\r\n              }}>\r\n                \r\n                <Room roomName={roomName} token={token} handleLogout={handleLogout} />\r\n              </div>\r\n            </div>            \r\n            <div className=\"col-6 bg-white manageradius\">\r\n              <Management page={\"video\"} roomName={roomName} chatInfo={chatInfo} />\r\n            </div>         \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  return render;\r\n};\r\n\r\nexport default VideoChat;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './style.css';\r\nimport { ChatAvatarsContainer, SideBar } from '../../components';\r\nimport { ChatWindow } from '../../components';\r\nimport { ChatUserInfo } from '../../components';\r\n// import { GET_PATIENTS_LIST, SET_CHAT_CHANNEL } from '../../store/actionNames/homePageActions';\r\nimport VideoChat from '../../components/chatWindow/VideoChat';\r\nimport { useHistory } from 'react-router';\r\nimport { jwt } from 'twilio';\r\n\r\nexport const ChatPage = () => {\r\n    const dispatch = useDispatch(); \r\n    \r\n    // const settedPatient = useSelector(state => state.setPatientChat);\r\n    const [videoCallStatus, setVideoCallStatus] = useState(0);\r\n    const [channelName, setChannelName] = useState(\"\");\r\n    const [videoToken, setVideoToken] = useState(\"\");\r\n    // const [setChatLoad] = useState(false);\r\n    const history = useHistory();\r\n    const [chatInfo, setChatInfo] = useState(\"\");\r\n    const [selPatient, setSelPatient] = useState(0);\r\n\r\n    const createNewRoom = (token, channel) => {\r\n        /*   console.log(token, channel, \"token n channel\") */\r\n        if (token && channel) {\r\n            setChannelName(channel);\r\n            setVideoToken(token);\r\n            setVideoCallStatus(1);\r\n        } else {\r\n            alert(\"you didn't choose the user\");\r\n        }\r\n        window.location.href = \"/chat/\" + chatInfo + \"?info=video\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        const search = window.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const foo = params.get('info');\r\n        const channelName = params.get('channelName');\r\n        const videoToken = params.get('videoToken');\r\n        if(foo == \"videocall\" || foo == \"video\") {\r\n            setVideoCallStatus(1);\r\n            setChannelName(channelName);\r\n            setVideoToken(videoToken);\r\n            \r\n        }\r\n        dispatch({ type: 'GET_USER_CHAT', payload: {} });\r\n        dispatch({ type: 'GET_PATIENT_MEDICATION_DATA', payload: \"\" });\r\n        dispatch({ type: 'GET_ASSIGNED_DATA', payload: \"\" });\r\n        checkUserToken();\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const checkUserToken = () => {\r\n        var token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            let pathName = window.location.pathname;\r\n            setChatInfo(pathName.split(\"/\")[2]);\r\n        }\r\n    }\r\n\r\n    // const loadingSuccess = () => {\r\n    //     setChatLoad(true);\r\n    // }\r\n\r\n    const getChannelName = (e, id) => {\r\n        setChatInfo(e);\r\n        setSelPatient(id);\r\n        history.push(\"/chat/\" + e);\r\n    }\r\n\r\n    let render = (\r\n        <div className=\"chat-page-container\">\r\n            <SideBar select={\"chat\"} />\r\n            <div className=\"main-section\">\r\n                <ChatAvatarsContainer getChannelName={getChannelName} />\r\n                <div className=\"chat-section-part\">\r\n                    <div className=\"chat-page-section\">\r\n                        <div className=\"chatting-section\">\r\n                            <ChatWindow chatInfo={chatInfo} setVideoCall={createNewRoom} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chatting-user-info-section\" style={{ display: \"block\", overflow: \"auto\" }}>\r\n                        <ChatUserInfo selPatient={selPatient}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    if (videoCallStatus === 1) {\r\n        render = (\r\n            <VideoChat roomName={channelName} token={videoToken} chatInfo={chatInfo} />\r\n        );\r\n    }\r\n    return render;\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\nimport { Calendar } from '../../components';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport const CalendarPage = () => {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        checkUserToken();\r\n    }, []);\r\n    const checkUserToken = () => {\r\n        var token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            history.push(\"/calendar\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"intro-page-container\">\r\n            <SideBar select={\"calendar\"} />\r\n            <div className=\"calendar-main-section\">\r\n                <Calendar />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\n\r\nexport const NotificationPage = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"intro-page-container\">\r\n                <SideBar select={\"notify\"} />\r\n                <div className=\"main-section\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./style.css\";\r\nimport axios from 'axios';\r\nimport { server } from \"../../config/server\";\r\n// import { useSelector } from 'react-redux';\r\nexport const ChangeEmail = () => {\r\n    const config = {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.token\r\n        }\r\n    }\r\n    const onSubmitChangeEmail = e =>{\r\n        e.preventDefault();\r\n        let emailData = {\r\n            \"old_email\": e.target[\"old_email\"].value,\r\n            \"new_email\": e.target[\"new_email\"].value,\r\n            \"confirm_new_email\": e.target[\"confirm_new_email\"].value\r\n        };\r\n        axios.post(server.serverURL + 'v1/change-email', emailData, config)\r\n        .then(res => {\r\n            alert(res.data.data.message);\r\n        }).catch(function(err) {\r\n            alert('Please check input.');\r\n            if(err.response.status === '422'){\r\n                console.log(err.response.data);\r\n            }else{\r\n                console.log(err.response.data);\r\n            }\r\n        });\r\n        \r\n    }\r\n    return (\r\n        <div className=\"setting-form-parent\">\r\n            <div className=\"setting-form change-email\">\r\n                <h1>Change Email</h1>\r\n                <form className=\"change-email-form\" onSubmit={onSubmitChangeEmail}>\r\n                    <div className=\"form-row active\">\r\n                        <input type=\"email\" name=\"old_email\" placeholder=\"Old Email Address\" />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <input type=\"email\" name=\"new_email\" placeholder=\"New Email Address\" />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <input type=\"email\" name=\"confirm_new_email\" placeholder=\"Confirm New Email Address\" />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <input type=\"submit\" value=\"Save\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","import React from 'react';\r\nimport \"./style.css\";\r\nimport axios from 'axios';\r\nimport { server } from \"../../config/server\";\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\nexport const ChangePassword = () => {\r\n    const config = {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.token\r\n        }\r\n    }\r\n    \r\n    const onSubmitChangePassword = e =>{\r\n        e.preventDefault();\r\n        \r\n        let passwordData = {\r\n            \"old_password\": e.target[\"old_password\"].value,\r\n            \"new_password\": e.target[\"new_password\"].value,\r\n            \"confirm_new_password\": e.target[\"confirm_new_password\"].value\r\n        };\r\n        axios.post(server.serverURL + 'v1/change-password', passwordData, config)\r\n        .then(res => {\r\n            alert(res.data.data.message);\r\n        }).catch(function(err) {\r\n            alert('Please check input.');\r\n            if(err.response.status === '422'){\r\n                console.log(err.response.data);\r\n            }else{\r\n                console.log(err.response.data);\r\n            }\r\n        });\r\n        \r\n    }\r\n    return (\r\n            <div className=\"setting-form-parent\">\r\n                <div className=\"setting-form change-password\">\r\n                    <h1>Change Password</h1>\r\n                    <form className=\"change-password-form\" onSubmit={onSubmitChangePassword}>\r\n                        <div className=\"form-row active\">\r\n                            <input type=\"password\" name=\"old_password\" placeholder=\"Old Password\"/>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <input type=\"password\" name=\"new_password\" placeholder=\"New Password\"/>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <input type=\"password\" name=\"confirm_new_password\" placeholder=\"Confirm New Password\"/>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <input type=\"submit\" value=\"Save\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\n// import { useSelector } from 'react-redux';\r\nimport { ChangeEmail } from './changeEmail';\r\nimport { ChangePassword } from './changePassword';\r\n\r\n\r\nimport \"./style.css\";\r\n\r\nexport const Setting = () => {\r\n\r\n    return (\r\n        <div className=\"row col-12 m-0 my-auto\">\r\n            <div className=\"col-6 d-flex\">\r\n                <ChangeEmail />\r\n            </div>\r\n            <div className=\"col-6 d-flex\">\r\n                <ChangePassword />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\nimport { Setting } from '../../components/settingComponent'\r\nexport const SettingPage = () => {\r\n    // eslint-disable-next-line\r\n    const form = React.useRef();\r\n    return (\r\n        <div className=\"intro-setting-container\">\r\n            <SideBar select={\"setting\"} />\r\n            <div className=\"main-section\">\r\n                <div style={{\r\n                    position: \"absolute\",\r\n                    left: 250,\r\n                    top: 150,\r\n                    color: \"red\",\r\n                    fontSize: \"larger\",\r\n                    fontWeight: 600,\r\n                }}>\r\n                    <span>v1.92</span>\r\n                </div>\r\n                <Setting />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\nimport { useSelector } from 'react-redux';\r\nimport { ChatWindow } from '../../components/chatWindow';\r\n\r\nexport const UserDetailPage = () => {\r\n    const user = useSelector(state => state.patientSelect);\r\n    const recordInfo = (user.lapResult ? user.lapResult : {});\r\n    return (\r\n        <div className=\"details-container\">\r\n            <SideBar select={\"chat\"} />\r\n            <div className=\"detail-main-section\">\r\n                <div className=\"detail-row-grid-1\">\r\n                    <div className=\"video-call-window\">\r\n                        <div className=\"video-call-main-section\"></div>\r\n                    </div>\r\n                    <div className=\"detail-every-section\">\r\n                        <h1 className=\"detail-title\">Assigned Tasks:</h1>\r\n                        <div className=\"assigned-tasks-container\">\r\n                            <div className=\"add-tasks-button\">\r\n                                <p className=\"add-tasks-button-text\">Add New Task</p>\r\n                            </div>\r\n                            <div className=\"assigned-tasks-cards\">\r\n                                <p className=\"assigned-tasks-texts-title\">Check Blood Sugar</p>\r\n                                <p className=\"assigned-tasks-texts-description\">3 / 7 Days Complete</p>\r\n                            </div>\r\n                            <div className=\"assigned-tasks-cards\">\r\n                                <p className=\"assigned-tasks-texts-title\">Schedule a Blood Test</p>\r\n                                <p className=\"assigned-tasks-texts-description\">Complete</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"assigned-tasks-container\">\r\n                            <div className=\"assigned-tasks-cards\">\r\n                                <p className=\"assigned-tasks-texts-title\">Make a Follow-Up Appointment</p>\r\n                                <p className=\"assigned-tasks-texts-description\">Incomplete</p>\r\n                            </div>\r\n                            <div className=\"assigned-tasks-cards\">\r\n                                <p className=\"assigned-tasks-texts-title\">Task #5</p>\r\n                                <p className=\"assigned-tasks-texts-description\"></p>\r\n                            </div>\r\n                            <div className=\"assigned-tasks-cards\">\r\n                                <p className=\"assigned-tasks-texts-title\">Task #6</p>\r\n                                <p className=\"assigned-tasks-texts-description\"></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail-every-section\">\r\n                        <h1 className=\"detail-title\">Lab Work</h1>\r\n                        <div className=\"detail-lab-work-description-section\">\r\n                            <div className=\"description-card\">\r\n                                <div className=\"title-section\">\r\n                                    <p className=\"title-text\">Blood Test</p>\r\n                                    <p className=\"title-date-text\">7-8-2020</p>\r\n                                </div>\r\n                                \r\n                                {recordInfo.bloodTest && recordInfo.bloodTest.map((item, i) =>\r\n                                    <div key={i} className=\"description-row\">\r\n                                        <p className=\"description-row-title\">{item.title}</p>\r\n                                        <p className=\"description-row-info\"><span>{item.info.amount}</span>&nbsp;{item.info.unit}</p>\r\n                                    </div>\r\n                                )}\r\n\r\n                            </div>\r\n                            <div className=\"record-data-container\">\r\n                                <div className=\"description-card-rigth-side\">\r\n                                    <div className=\"title-section\">\r\n                                        <p className=\"title-text\">X-Rays</p>\r\n                                    </div>\r\n                                    \r\n                                    {recordInfo.xRays && recordInfo.xRays.map((item, i) =>\r\n                                        <div key={i} className=\"description-row\">\r\n                                            <p className=\"description-row-title\">{item.title}</p>\r\n                                            <p className=\"description-row-info\"><span>{item.info}</span></p>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className=\"description-card-rigth-side\">\r\n                                    <div className=\"title-section\">\r\n                                        <p className=\"title-text\">MRI</p>\r\n                                    </div>\r\n                                    {recordInfo.mri && recordInfo.mri.map((item, i) =>\r\n                                        <div key={i} className=\"description-row\">\r\n                                            <p className=\"description-row-title\">{item.title}</p>\r\n                                            <p className=\"description-row-info\"><span>{item.info}</span></p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"detail-row-grid-2\">\r\n                    <div className=\"detail-grid-2-every-section\">\r\n                        <h1 className=\"detail-title\">Doctor’s Notes</h1>\r\n                        <div className=\"notes-container-card\">\r\n                            <h1 className=\"notes-title\">Chief Complaint:</h1>\r\n                            <p className=\"notes-description\">Lorem ipsum dolor sit amet, has an nobis viderer</p>\r\n                            <h1 className=\"notes-title\">HPI:</h1>\r\n                            <p className=\"notes-description\">Lorem ipsum dolor sit amet, has an nobis viderer, has et exerci omnesque. Quo probo albucius at, at docendi molestie vis, id tempor mucius propriae his. Omnium sententiae id vim, eu nonumes quaestio sed, diceret consetetur incorrupte usu at.</p>\r\n                            <h1 className=\"notes-title\">Objective:</h1>\r\n                            <p className=\"notes-description\">Lorem ipsum dolor sit amet, has an nobis viderer, has et exerci omnesque. Quo probo albucius at,</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail-every-section-personal-info\">\r\n                        <h1 className=\"detail-title\">Patient Profile</h1>\r\n                        <div className=\"user-details-personal-info-card\">\r\n                            <div className=\"personal-info-section\">\r\n                                    <p className=\"personal-info-description\">{user.age}</p>\r\n                                    <p className=\"personal-info-title\">Age</p>\r\n                            </div>\r\n                            <div className=\"personal-info-section\">\r\n                                    <p className=\"personal-info-description\">{user.birthday}</p>\r\n                                    <p className=\"personal-info-title\">D.O.B</p>\r\n                            </div>\r\n                            <div className=\"personal-info-section\">\r\n                                    <p className=\"personal-info-description\">{user.allergies}</p>\r\n                                    <p className=\"personal-info-title\">Allergies</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"details-page-chat-window\">\r\n                        <ChatWindow page={\"details\"} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './style.css';\r\nimport { server } from \"../../config/server\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { USER_ROLE_SET } from '../../store/actionNames';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport const LoginPage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const usernameRef = React.useRef();\r\n    const passwordRef = React.useRef();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const checkUserToken = () => {\r\n            var token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n                history.push(\"/login\");\r\n            } else if (token) {\r\n                history.push(\"/calendar\");\r\n            }\r\n        };\r\n        checkUserToken();\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n    const FormHeader = props => (\r\n        <h2 className=\"form-header\">{props.title}</h2>\r\n    );\r\n\r\n    const handleEnter = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            onLoginClick();\r\n        }\r\n    }\r\n\r\n    const Form = props => {\r\n        return (\r\n            <div className=\"input-form\">\r\n                <label className=\"greeting\">Hi there!</label>\r\n                <div>\r\n                    <input onKeyDown={handleEnter} ref={usernameRef} type=\"text\" placeholder=\"Email address\" className=\"login-form\" />\r\n                    <input onKeyDown={handleEnter} ref={passwordRef} type=\"password\" placeholder=\"Password\" className=\"login-form\"/>\r\n                    {/* <TextField onKeyDown={handleEnter} ref={usernameRef} id=\"filled-basic\" label=\"Email address\" variant=\"filled\" className=\"login-form\" />\r\n                    <TextField onKeyDown={handleEnter} ref={passwordRef} id=\"filled-basic\" label=\"Password\" variant=\"filled\" className=\"login-form\" /> */}\r\n                </div>\r\n                <label className=\"forgot\">Forgot Password?</label>\r\n                <div class=\"log-button\">\r\n                    <button className=\"login-btn\" onClick={onLoginClick}>{props.title}</button>\r\n                </div>\r\n                {/* <div className=\"login-row\">\r\n                    <label>Username</label>\r\n                    <input onKeyDown={handleEnter} ref={usernameRef} type=\"text\" placeholder=\"Enter your username\" />\r\n                </div>\r\n                <div className=\"login-row\">\r\n                    <label>Password</label>\r\n                    <input onKeyDown={handleEnter} ref={passwordRef} type=\"password\" placeholder=\"Enter your password\" />\r\n                </div>\r\n                <div id=\"button\" className=\"login-row\">\r\n                    <button onClick={onLoginClick}>{props.title}</button>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onLoginClick = (event) => {\r\n        if (!usernameRef.current.value || !passwordRef.current.value) {\r\n            alert(\"Enter Username or Password\");\r\n            return false;\r\n        }\r\n        var user = {\r\n            email: usernameRef.current.value,\r\n            password: passwordRef.current.value\r\n        }\r\n        axios.post(server.serverURL + 'v1/login', user)\r\n            .then(res => {\r\n                var data = res.data.data;\r\n                console.log(data)\r\n                if (data.access_token) {\r\n                    axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.access_token;\r\n                    localStorage.setItem(\"token\", data.access_token);\r\n                    localStorage.setItem(\"userName\", data.user_info.name);\r\n                    localStorage.setItem(\"userImage\", data.user_info.userimage);\r\n                    localStorage.setItem(\"userId\", data.user_info.id);\r\n                    localStorage.setItem(\"profileDescription\", data.user_info.profile_description);\r\n                    dispatch({ type: \"USER_INFO_SET\", payload: data.user_info });\r\n                    if (localStorage.token) {\r\n                        if (data.role_id === 1) {\r\n                            localStorage.setItem(\"userRole\", \"admin\");\r\n                            dispatch({ type: USER_ROLE_SET, payload: \"admin\" });\r\n                        } else {\r\n                            localStorage.setItem(\"userRole\", \"user\");\r\n                            dispatch({ type: USER_ROLE_SET, payload: \"user\" });\r\n                        }\r\n                        history.push(\"/calendar\");\r\n                    }\r\n                } else {\r\n                    alert(\"This user isn't registered user\");\r\n                }\r\n            })\r\n    }\r\n    // eslint-disable-next-line\r\n    const OtherMethods = props => {\r\n        return (\r\n            <div id=\"alternativeLogin\">\r\n                <label>Forgot Password</label>\r\n                <div id=\"iconGroup\">\r\n                    <Facebook />\r\n                    <Twitter />\r\n                    <Google />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const Facebook = props => (\r\n        // eslint-disable-next-line\r\n        <a href=\"#\" id=\"facebookIcon\"></a>\r\n    );\r\n\r\n    const Twitter = props => (\r\n        // eslint-disable-next-line\r\n        <a href=\"#\" id=\"twitterIcon\"></a>\r\n    );\r\n\r\n    const Google = props => (\r\n        // eslint-disable-next-line\r\n        <a href=\"#\" id=\"googleIcon\"></a>\r\n    );\r\n\r\n    return (\r\n        // <div className=\"page-main-container\" id=\"loginform\">\r\n        //     <FormHeader title=\"Nexpil\" />\r\n        //     <Form title=\"Login\" />\r\n        //     {/* <OtherMethods /> */}\r\n        // </div>\r\n        <div>\r\n            <div className=\"login-section justify-content-center\">\r\n                <div><img src=\"assets/images/login-logo.png\" className=\"form-header\" width=\"200\" height=\"58\" /></div>\r\n                <Form title=\"LOGIN\"></Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import './style.css';\r\nimport { server } from \"../../config/server\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { BsLayoutSidebarReverse } from 'react-icons/bs';\r\n\r\nexport const RegisterPage = () => {\r\n    const history = useHistory();\r\n    // const [user, setUser] = useState()\r\n    const [userStatus, setUserStatus] = useState(false)\r\n\r\n    const FormHeader = props => (\r\n        <h2 id=\"headerTitle\">{props.title}</h2>\r\n    );\r\n        \r\n    const FormPatient = props => {\r\n        return (\r\n            <form onSubmit={onPatientRegisterSubmit}>\r\n                <FormInput name=\"firstName\" description=\"First Name\" placeholder=\"Enter your First Name\" type=\"text\" />\r\n                <FormInput name=\"lastName\" description=\"Last Name\" placeholder=\"Enter your Last Name\" type=\"text\" />\r\n                <FormInput name=\"birthday\" description=\"Birthday\" placeholder=\"Enter your Birthday\" type=\"date\" />\r\n                <FormInput name=\"email\" description=\"Email\" placeholder=\"Enter your email\" type=\"text\" />\r\n                <FormInput name=\"phone\" description=\"Phone\" placeholder=\"Enter your phone\" type=\"number\" />\r\n                <FormInput name=\"password\" description=\"Password\" placeholder=\"Enter your password\" type=\"password\"/>\r\n                <FormInput name=\"repassword\" description=\"Reset\" placeholder=\"Enter your password\" type=\"password\"/>\r\n                <FormButton title=\"Sign Up\"/>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const FormPhysician = props => {\r\n        return (\r\n            <form onSubmit={onPhysicianRegisterSubmit}>\r\n                <FormInput name=\"firstName\" description=\"First Name\" placeholder=\"Enter your First Name\" type=\"text\" />\r\n                <FormInput name=\"lastName\" description=\"Last Name\" placeholder=\"Enter your Last Name\" type=\"text\" />\r\n                <FormInput name=\"birthday\" description=\"Birthday\" placeholder=\"Enter your Birthday\" type=\"date\" />\r\n                <FormInput name=\"email\" description=\"Email\" placeholder=\"Enter your email\" type=\"text\" />\r\n                <FormInput name=\"phone\" description=\"Phone\" placeholder=\"Enter your phone\" type=\"number\" />\r\n                <FormButton title=\"Sign Up\"/>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const onPatientRegisterSubmit = e => {\r\n        e.preventDefault();\r\n        let user = {\r\n            \"firstName\": e.target[\"firstName\"].value,\r\n            \"lastName\": e.target[\"lastName\"].value,\r\n            \"date_of_birth\": e.target[\"birthday\"].value,\r\n            \"phone_number\": e.target[\"phone\"].value,\r\n            \"email\": e.target[\"email\"].value,\r\n            \"password\": e.target[\"password\"].value,\r\n            \"password_confirmation\": e.target[\"repassword\"].value,\r\n        };\r\n        axios.post(server.serverURL + 'v1/patient', user)\r\n        .then(res => {\r\n            var data = res.data.data;\r\n            if(data.status === true) {\r\n                history.push(\"/\");\r\n            } else {\r\n                alert(\"This user isn't registered user\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const onPhysicianRegisterSubmit = e => {\r\n        e.preventDefault();\r\n        let user = {\r\n            \"firstName\": e.target[\"firstName\"].value,\r\n            \"lastName\": e.target[\"lastName\"].value,\r\n            \"DOB\": e.target[\"birthday\"].value,\r\n            \"email\": e.target[\"email\"].value,\r\n            \"phone_number\": e.target[\"phone\"].value,\r\n        };\r\n        axios.post(server.serverURL + 'v1/physician-register', user)\r\n        .then(res => {\r\n            var data = res.data.data;\r\n            if(data.status === true) {\r\n                history.push(\"/\");\r\n            } else {\r\n                alert(\"This user isn't registered user\");\r\n            }\r\n        })\r\n    }\r\n    \r\n    const FormButton = props => {\r\n        return (\r\n            <div id=\"button\" className=\"row\">\r\n                <button type=\"submit\">{props.title}</button>\r\n            </div>\r\n        );\r\n    };\r\n    \r\n    const FormInput = props => (\r\n        <div className=\"row\">\r\n            <label>{props.description}</label>\r\n            <input name={props.name} type={props.type} placeholder={props.placeholder}/>\r\n        </div>  \r\n    );\r\n\r\n    const handleUserStatus = () => {\r\n        setUserStatus(!userStatus);\r\n    }\r\n    \r\n    const OtherMethods = props => {\r\n        return (\r\n            <div id=\"alternativeLogin\">\r\n                <p> <label>You are Physician</label> <input  checked={userStatus} type=\"checkbox\" onChange={handleUserStatus} /> </p>\r\n                <p> <a href=\"login\" >Login Here</a> </p>\r\n                <label>Or sign in with:</label>\r\n                <div id=\"iconGroup\">\r\n                <Facebook />\r\n                <Twitter />\r\n                <Google />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    \r\n    const Facebook = props => (\r\n        // eslint-disable-next-line\r\n    <a href=\"#\" id=\"facebookIcon\"></a>\r\n    );\r\n    \r\n    const Twitter = props => (\r\n        // eslint-disable-next-line\r\n    <a href=\"#\" id=\"twitterIcon\"></a>\r\n    );\r\n    \r\n    const Google = props => (\r\n        // eslint-disable-next-line\r\n    <a href=\"#\" id=\"googleIcon\"></a>\r\n    );\r\n\r\n    return(\r\n        <div id=\"loginform\">\r\n            <FormHeader title=\"Sign Up\" />\r\n            { userStatus === false &&\r\n                <FormPatient />\r\n            }\r\n            { userStatus === true &&\r\n                <FormPhysician />\r\n            }\r\n            <OtherMethods />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\nexport const TelehealthPage = (props) => {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        // checkUserToken();\r\n    }, []);\r\n    const checkUserToken = () => {\r\n        var token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            history.push(\"/calendar\");\r\n        }\r\n    }\r\n    const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    return (\r\n        <div className=\"intro-page-container\">\r\n            <SideBar select={\"telehealth\"}></SideBar>\r\n            <div className=\"d-flex justify-content-around\">\r\n                <div className=\"tele-main flex-column justify-content-center\">\r\n                    <div className=\"d-flex flex-column\">\r\n                        <div className=\"tele-icon\">\r\n                            <img src=\"assets/images/tele-icon.png\" width={230}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column justify-content-around\">                    \r\n                        <div className=\"d-flex justify-content-between fw-600\">\r\n                            <div>\r\n                                <div>Call Duration</div>\r\n                                <div>07:08</div>\r\n                            </div>\r\n                            <div>\r\n                                <div>Dwayne Johnson</div>\r\n                                <div>5/26/1988 - Male</div>\r\n                            </div>\r\n                        </div>                        \r\n                        <div><img src=\"assets/images/tele-user.png\" className=\"large-img\" /></div>\r\n                        <div className=\"avatar-group\">\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <div className=\"align-self-end pl-3\"><img src=\"assets/images/phone1.png\" width=\"60\"/></div>\r\n                                <div className=\"align-self-end pl-3\"><img src=\"assets/images/phone2.png\" width=\"40\"/></div>\r\n                                <div className=\"align-self-end pl-3\"><img src=\"assets/images/avatar3.png\" width=\"90\"/></div>\r\n                                <div className=\"align-self-end pl-3\"><img src=\"assets/images/avatar2.png\" width=\"90\"/></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"health-info d-flex flex-column justify-content-center\">\r\n                    <div className=\"checked-header\">\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <div className=\"checked-title\">Medication Therapy<br/> Management Tasks</div>\r\n                            <div className=\"checked-info\">6 out of 6<br/> completed</div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"complete-item d-flex flex-column\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <CheckCircleIcon color=\"success\" />\r\n                                <List dense={dense}>\r\n                                    <ListItem\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        <AddIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    >\r\n                                    <ListItemText\r\n                                        primary=\"Allergies\"\r\n                                        secondary={secondary ? 'Secondary text' : null}\r\n                                    />\r\n                                    </ListItem>\r\n                                </List>                            \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"complete-item d-flex flex-column\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <CheckCircleIcon color=\"success\" />\r\n                                <List dense={dense}>\r\n                                    <ListItem\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        <AddIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    >\r\n                                    <ListItemText\r\n                                        primary=\"Medication History\"\r\n                                        secondary={secondary ? 'Secondary text' : null}\r\n                                    />\r\n                                    </ListItem>\r\n                                </List>                            \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"complete-item d-flex flex-column\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <CheckCircleIcon color=\"success\" />\r\n                                <List dense={dense}>\r\n                                    <ListItem\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        <AddIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    >\r\n                                    <ListItemText\r\n                                        primary=\"Survey Answers\"\r\n                                        secondary={secondary ? 'Secondary text' : null}\r\n                                    />\r\n                                    </ListItem>\r\n                                </List>                            \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"complete-item d-flex flex-column\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <CheckCircleIcon color=\"success\" />\r\n                                <List dense={dense}>\r\n                                    <ListItem\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        <AddIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    >\r\n                                    <ListItemText\r\n                                        primary=\"Past Visit Notes\"\r\n                                        secondary={secondary ? 'Secondary text' : null}\r\n                                    />\r\n                                    </ListItem>\r\n                                </List>                            \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"complete-item d-flex flex-column\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <CheckCircleIcon color=\"success\" />\r\n                                <List dense={dense}>\r\n                                    <ListItem\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        <AddIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    >\r\n                                    <ListItemText\r\n                                        primary=\"Gaps In Care\"\r\n                                        secondary={secondary ? 'Secondary text' : null}\r\n                                    />\r\n                                    </ListItem>\r\n                                </List>                            \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"complete-item d-flex flex-column\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <CheckCircleIcon color=\"success\" />\r\n                                <List dense={dense}>\r\n                                    <ListItem\r\n                                    secondaryAction={\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                        <AddIcon />\r\n                                        </IconButton>\r\n                                    }\r\n                                    >\r\n                                    <ListItemText\r\n                                        primary=\"After Visit Summary\"\r\n                                        secondary={secondary ? 'Secondary text' : null}\r\n                                    />\r\n                                    </ListItem>\r\n                                </List>                            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\nimport './style.css';\r\nimport { SideBar } from '../../components';\r\nimport { server } from \"../../config/server\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport { purple } from '@mui/material/colors';\r\nimport { getAvatarGroupUtilityClass } from '@mui/material';\r\n// import { BsLayoutSidebarReverse } from 'react-icons/bs';\r\nconst ColorButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText(purple[500]),\r\n    backgroundColor: \"#6308F7\",\r\n    borderRadius:15,\r\n    width:300,\r\n    '&:hover': {\r\n      backgroundColor: \"#6308F7\",\r\n    },\r\n}));\r\nconst BootstrapButton = styled(Button)({\r\n    boxShadow: 'none',\r\n    textTransform: 'none',\r\n    fontSize: 16,\r\n    padding: '6px 12px',\r\n    border: '1px solid',\r\n    lineHeight: 1.5,\r\n    backgroundColor: '#0063cc',\r\n    borderColor: '#0063cc',\r\n    fontFamily: [\r\n        \"poppins\"\r\n    ].join(','),\r\n    '&:hover': {\r\n        backgroundColor: '#0069d9',\r\n        borderColor: '#0062cc',\r\n        boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: '#0062cc',\r\n        borderColor: '#005cbf',\r\n    },\r\n    '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n});\r\nlet token = localStorage.getItem(\"token\");\r\nexport const ProfilePage = () => {\r\n\r\n    const [selectedFile, setSelectedFile] = React.useState(null);\r\n    const [avatarStatus, setAvatarStatus] = React.useState(true);\r\n    const [avatar, setAvatar] = React.useState(localStorage.getItem('userImage'));\r\n    const [profileDescription, setProfileDescription] = React.useState(localStorage.getItem('profileDescription'));\r\n\r\n    const [user, setUser] = React.useState([]);\r\n\r\n\r\n    const [oldPassowrd, setOldPassword] = React.useState();\r\n    const [newPassowrd, setNewPassword] = React.useState();\r\n    const [confirmPassowrd, setConfirmPassword] = React.useState();\r\n\r\n    const [type1, setType1] = React.useState(\"password\");\r\n    const [type2, setType2] = React.useState(\"password\");\r\n    const [type3, setType3] = React.useState(\"password\");\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(localStorage);\r\n        setUser(localStorage.getItem('userImage'))\r\n        getAvatar()\r\n    }, [])\r\n\r\n    const onFileChange = event => {\r\n    \r\n        // Update the state\r\n        setSelectedFile(event.target.files[0]);\r\n      \r\n    };\r\n    const getAvatar = () => {\r\n        axios.get(server.serverURL + 'v1/profile', {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        })\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setUser(res.data.data)\r\n            localStorage.setItem('userImage', res.data.data.avatar)\r\n        });\r\n    }\r\n      // On file upload (click the upload button)\r\n    const onFileUpload =  () => {\r\n       if(avatarStatus == true){\r\n           setAvatarStatus(false)\r\n       }\r\n       else {\r\n            // Create an object of formData\r\n            const formData = new FormData();\r\n            formData.append('image',selectedFile)\r\n        \r\n            // Update the formData object\r\n            // Details of the uploaded file\r\n        \r\n            // Request made to the backend api\r\n            // Send formData object\r\n            axios.post(server.serverURL + \"v1/change-avatar\", formData, {\r\n                headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                    Authorization: \"Bearer \" + token,\r\n                },\r\n            }).then(res => {\r\n                localStorage.setItem('userImage', res.data.data.avatar);\r\n                setAvatar(res.data.data.avatar);\r\n            }) \r\n            setAvatarStatus(false)     \r\n        }  \r\n    }\r\n\r\n    const changePasswordHandle = (e) => {\r\n        if(e.target.name == \"oldPassword\") {\r\n            setOldPassword(e.target.value)\r\n        }\r\n        else if(e.target.name == \"newPassword\") {\r\n            setNewPassword(e.target.value)\r\n        }\r\n        else if(e.target.name == \"confirmPassword\") {\r\n            setConfirmPassword(e.target.value)\r\n        }\r\n     }\r\n     let formData = {\r\n         \"old_password\": oldPassowrd,\r\n         \"new_password\": newPassowrd,\r\n         \"confirm_new_password\":confirmPassowrd\r\n     }\r\n     const changePassword = () => {\r\n        axios.post(server.serverURL + \"v1/change-password\", formData, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(res => {\r\n            alert(\"error\");\r\n            if(res.data.data.message) {\r\n                alert(res.data.data.message);\r\n                setOldPassword('');\r\n                setNewPassword('');\r\n                setConfirmPassword('');\r\n            }\r\n        }).catch(error => {\r\n            alert(error)   \r\n        }); \r\n    }\r\n\r\n    const saveProfile = () => {\r\n        const formData = {\r\n            \"profile_description\":profileDescription\r\n        }\r\n        axios.post(server.serverURL + \"v1/change-avatar\", formData, {\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        }).then(res => {\r\n            localStorage.setItem('profileDescription', res.data.data.profile_description);\r\n            setAvatar(res.data.data.avatar);\r\n            setAvatarStatus(true);\r\n        }) \r\n    }\r\n\r\n    const changeProfile = (e) => {\r\n        setProfileDescription(e.target.value);\r\n    }\r\n\r\n    const viewPass = (id) => {\r\n        if(id == 1) {\r\n            setType1(\"text\")\r\n        }\r\n        else if(id == 2) {\r\n            setType2(\"text\")\r\n        }\r\n        else if(id == 3) {\r\n            setType3(\"text\");\r\n        }\r\n    }\r\n    const nonePass = (e) => {\r\n        setType1(\"password\");\r\n        setType2(\"password\");\r\n        setType3(\"password\");\r\n    }\r\n    return(\r\n        <div>\r\n            <SideBar select={\"profile\"}/>\r\n            <div className=\"profile-app justify-content-center\">\r\n                <div className=\"profile-form\">\r\n                    <div>\r\n                        <h1 class=\"avatars-title-text\" style={{fontSize:33}}>\r\n                            Profile\r\n                            <span style={{color: \"rgb(57, 211, 227)\"}}>.</span>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column justify-content-center\" style={{margin:\"auto\"}}>\r\n                            <div style={{textAlign:\"center\"}}>                            \r\n                                <img className=\"profile-avatar img-circle avatar-size\" src={avatar}/>                            \r\n                                <div className=\"d-flex\">\r\n                                    <button className=\"btn btn-primary\" onClick={onFileUpload}>\r\n                                        <i className=\"fa fa-save\"></i>\r\n                                    </button>\r\n                                    {!avatarStatus && <input  className=\"btn btn-default w-75 m-0\" type=\"file\" onChange={onFileChange} style={{display:avatarStatus}} />}\r\n                                </div>      \r\n                                <p className=\"profile-name pt-1\">{localStorage.getItem(\"userName\")}</p>                            \r\n                            </div>\r\n                        <div>\r\n                            {avatarStatus && <textarea disabled className=\"profile-textfield form-control\" style={{borderRadius:15, borderColor:\"transparent\"}} rows=\"5\" cols=\"40\">\r\n                                {profileDescription}\r\n                            </textarea>}\r\n                            {!avatarStatus &&<textarea className=\"profile-textfield form-control\" style={{borderRadius:15, borderColor:\"transparent\"}} onChange={changeProfile} rows=\"5\" cols=\"40\" placeholder=\"Profile - 2/200 words\">\r\n                                {profileDescription}\r\n                            </textarea>}\r\n                            <div className=\"w-25 btn btn-success\" onClick={!avatarStatus && saveProfile} style={{float:\"right\", marginTop:12, marginBottom:12, paddingBottom:12, paddingTop:12, borderRadius:32, backgroundColor:\"#6308F7\", borderColor:\"#6308F7\"}}>Save</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-form ml-2\">\r\n                    <div>\r\n                        <h1 class=\"avatars-title-text\" style={{fontSize:33}}>\r\n                            Login & Password\r\n                            <span style={{color: \"rgb(57, 211, 227)\"}}>.</span>\r\n                        </h1>\r\n                    </div>\r\n                    <div style={{paddingTop:15}}>\r\n                        <div className=\"Icon-inside\">\r\n                            <input type=\"email\" placeholder=\"Email address\" className=\"profile-input\" value={user['email']} disabled/>                                         \r\n                        </div>\r\n                        <div className=\"Icon-inside\">\r\n                            <input type={type1} name=\"oldPassword\" placeholder=\"Old Password\" className=\"profile-input\" value={oldPassowrd}  onChange={changePasswordHandle}/>\r\n                            <i class=\"fa fa-eye fa-lg fa-fw\" name=\"oldPassword\" aria-hidden=\"true\" style={{cursor:\"pointer\"}} onMouseDown={() => viewPass(1)} onMouseUp={nonePass}></i>  \r\n                        </div>\r\n                        <div className=\"Icon-inside\">\r\n                            <input type={type2} name=\"newPassword\" placeholder=\"New Password\" className=\"profile-input\" value={newPassowrd} onChange={changePasswordHandle}/>\r\n                            <i class=\"fa fa-eye fa-lg fa-fw\" name=\"newPassword\" aria-hidden=\"true\" style={{cursor:\"pointer\"}} onMouseDown={() => viewPass(2)} onMouseUp={nonePass}></i>  \r\n                        </div>\r\n                        <div className=\"Icon-inside\">\r\n                            <input type={type3} name=\"confirmPassword\" placeholder=\"Confirm Password\" className=\"profile-input\" value={confirmPassowrd} onChange={changePasswordHandle}/>\r\n                            <i class=\"fa fa-eye fa-lg fa-fw\"  name=\"confirmPassword\" aria-hidden=\"true\" style={{cursor:\"pointer\"}} onMouseDown={() => viewPass(3)} onMouseUp={nonePass}></i> \r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"w-25 btn btn-success\" style={{float:\"right\", marginTop:12, marginBottom:12, paddingBottom:12, paddingTop:12, borderRadius:32, backgroundColor:\"#6308F7\", borderColor:\"#6308F7\"}} onClick={changePassword}>Change</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useBeforeunload } from 'react-beforeunload';\r\nimport {\r\n  HomePage,\r\n  PatientPage,\r\n  ChatPage,\r\n  CalendarPage,\r\n  NotificationPage,\r\n  SettingPage,\r\n  UserDetailPage,\r\n  LoginPage,\r\n  RegisterPage,\r\n  TelehealthPage,\r\n  ProfilePage,\r\n} from './pages';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { routers } from './config/router';\r\nimport Echo from 'laravel-echo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Pusher from 'pusher-js';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport { store } from 'react-notifications-component';\r\n\r\nimport './App.css';\r\nimport { ADD_NEW_PATIENT, GET_ASSIGNED_DATA, GET_PATIENT_HEALTH_DATA, GET_PATIENT_MEDICATION_DATA, GET_PATIENT_PERSONAL_DATA, GET_PATIENT_TASK_DATA, GET_USER, SET_PATIENT_SELECTED } from './store/actionNames';\r\n\r\n// window.Pusher = require('pusher-js');\r\n\r\n// console.log(\"process.env :: \", process.env)\r\n// window.Echo = new Echo({\r\n//   broadcaster: 'pusher',\r\n//   // key: process.env.MIX_PUSHER_APP_KEY,\r\n//   // cluster: process.env.MIX_PUSHER_APP_CLUSTER,\r\n//   key: \"289fb69b45fa3edfc19d\",\r\n//   cluster: \"mt1\",\r\n//   wsHost: window.location.hostname,\r\n//   wsPort: 6001,\r\n//   wssPort: 6001,\r\n//   disableStats: true,\r\n//   enabledTransports: ['ws', 'wss'],\r\n//   forceTLS: false,\r\n// });\r\nvar pusher = new Pusher('289fb69b45fa3edfc19d', {\r\n  cluster: 'mt1'\r\n});\r\nvar channel = pusher.subscribe('my-channel');\r\n\r\nfunction App() {\r\n  \r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector(state => state.userInfo);\r\n  const patientsList = useSelector(state => state.patientsList);\r\n\r\n\r\n  // useBeforeunload(() => { localStorage.removeItem('token'); });\r\n\r\n  useEffect(() => {\r\n    // if (jwt_decode(token).exp < Date.now() / 1000) {\r\n    //   localStorage.clear();\r\n    // }\r\n    channel.bind('my-event', function (data) {\r\n      const { patient, task } = data.payload;\r\n      const patientFullName = patient[\"first_name\"] + \" \" + patient[\"last_name\"];\r\n      if (Array.isArray(patientsList) && patientsList.length > 0) {\r\n        store.addNotification({\r\n          title: `${patientFullName} has completed a task.`,\r\n          message: <a style={{ color: \"#0e9ef3\" }} onClick={() => onClickViewResults(patient, task)}>View Results</a>,\r\n          type: \"info\",\r\n          insert: \"top\",\r\n          container: \"top-right\",\r\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n          dismiss: {\r\n            duration: 10000,\r\n            onScreen: true,\r\n            pauseOnHover: true,\r\n            click: false,\r\n            touch: false,\r\n            showIcon: true,\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [patientsList]);\r\n  console.log(\" patientsList---------- first \", patientsList)\r\n  const onClickViewResults = (user, task) => {\r\n    const selectedUserId = user.id;\r\n    const patient = patientsList.find(item => item.id === selectedUserId);\r\n    console.log(\" patientsList---------- inside \", patientsList)\r\n    console.log(\" user---------- \", user)\r\n    console.log(\" patient---------- \", patient)\r\n    if (patient) {\r\n      dispatch({ type: \"SET_MAIN_SECTION\", payload: \"userData\" });\r\n\r\n      dispatch({ type: GET_USER, payload: patient });\r\n      dispatch({ type: SET_PATIENT_SELECTED, payload: patient });\r\n\r\n      dispatch({ type: GET_PATIENT_PERSONAL_DATA, payload: user.id });\r\n      dispatch({ type: GET_PATIENT_MEDICATION_DATA, payload: user.id });\r\n      dispatch({ type: GET_PATIENT_HEALTH_DATA, payload: user.id });\r\n      dispatch({ type: GET_ASSIGNED_DATA, payload: user.id });\r\n      dispatch({ type: GET_PATIENT_TASK_DATA, payload: user.id });\r\n      dispatch({ type: ADD_NEW_PATIENT, payload: false });\r\n    } else alert(\"Notified patient is not in the patient list.\");\r\n  }\r\n  return (\r\n    <div className=\"super-container\">\r\n      <div className=\"page-main-container\">\r\n        <Switch>\r\n          <Route path={routers.HOMEPAGE} exact component={HomePage} />\r\n          <Route path={routers.PATIENTPAGE} exact component={PatientPage} />\r\n          <Route path={routers.CHATPAGE} component={ChatPage} />\r\n          <Route path={routers.CALENDAR_PAGE} component={CalendarPage} />\r\n          <Route path={routers.NOTIFICATION} component={NotificationPage} />\r\n          <Route path={routers.SETTINGS} component={SettingPage} />\r\n          <Route path={routers.DETAIL_PAGE} component={UserDetailPage} />\r\n          <Route path={routers.LOGINPAGE} component={LoginPage} />\r\n          <Route path={routers.REGISTERPAGE} component={RegisterPage} />\r\n          <Route path={routers.SETTINGPAGE} component={SettingPage} />\r\n          <Route path={routers.TELEHEALTHPAGE} component={TelehealthPage} />\r\n          <Route path={routers.PROFILEPAGE} component={ProfilePage} />\r\n\r\n        </Switch>\r\n        <ReactNotification />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  // alert('regi');\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.log('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport {\r\n    mainPart,\r\n    userInfo, \r\n    patientsList, \r\n    patientSelect, \r\n    patientPersonalInfo,\r\n    medication,\r\n    addNewPatientStatus,\r\n    userRole,\r\n    patientHealthData,\r\n    assignedData,\r\n    chatUserSelect,\r\n    userTaskGroupList,\r\n    selectedTaskGroup,\r\n    patientPersonalAllergy\r\n} from './usersReducers';\r\nimport {\r\n    setPatientChat,\r\n} from './chatReducers';\r\n\r\n// Export combined reducers\r\nexport default combineReducers({\r\n    mainPart,\r\n    userInfo,\r\n    patientsList,\r\n    patientSelect,\r\n    patientPersonalInfo,\r\n    setPatientChat,\r\n    medication,\r\n    addNewPatientStatus,\r\n    userRole,\r\n    patientHealthData,\r\n    assignedData,\r\n    chatUserSelect,\r\n    userTaskGroupList,\r\n    selectedTaskGroup,\r\n    patientPersonalAllergy\r\n})\r\n","// import { act } from 'react-dom/test-utils';\r\n\r\n// import { users } from '../../service/users';\r\n\r\nexport const mainPart = (state = \"intro\", action) => {\r\n    switch (action.type) {\r\n        case \"SET_MAIN_SECTION\":\r\n            return action.payload ? action.payload : \"intro\";\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userInfo = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"USER_INFO_SET\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const chatUserSelect = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_SELECTED_CHAT_USER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Export reducer for getting patients list\r\nexport const patientsList = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"PATIENTS_LIST\":\r\n            return action.payload;\r\n        case \"ADD_TO_PATIENTS_LIST\":\r\n            return [action.payload, ...state]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const patientHealthData = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"SET_PATIENT_HEALTH_DATA\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const assignedData = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"SET_ASSIGNED_DATA\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userTaskGroupList = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"SET_PATIENT_TASK_DATA\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const selectedTaskGroup = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"SELECT_PATIENT_TASK_GROUP\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// Export reducer for getting selected patient\r\nexport const patientSelect = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"SET_SELECTED_PATIENT\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Export reducer for getting patient information\r\nexport const patientPersonalInfo = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_PATIENT_PERSONAL_INFOS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const patientPersonalAllergy = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_PATIENT_PERSONAL_ALLERGY\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const medication = (state = [], action) => {\r\n    switch (action.type) {\r\n        case \"GET_PATIENT_MEDICATION_DATAS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addNewPatientStatus = (state = false, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_NEW_PATIENT_ACTION\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRole = (state = \"user\", action) => {\r\n    switch (action.type) {\r\n        case \"USER_ROLE_SETED\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\n// Set patient for chat reducer\r\nexport const setPatientChat = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"SET_PATIENT_FOR_CHAT\":\r\n            return action.payload;\r\n        case \"SET_PATIENT_FOR_CHAT_CHANGED\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport * as initialActions from '../store/actionNames/homePageActions';\r\nimport * as API from '../api';\r\n\r\n/* These are saga functions for patient page. */\r\n\r\n\r\nfunction* getSelectedUser(action) {\r\n    try {\r\n        yield put({ type: \"GET_SELECTED_USER\", payload: action.payload });\r\n    } catch (e) {\r\n        yield put({ type: \"GET_SELECTED_USER_FAILED\", message: e.message });\r\n    }\r\n}\r\n\r\nfunction* getSelectedChatUser(action) {\r\n    try {\r\n        yield put({ type: \"GET_SELECTED_CHAT_USER\", payload: action.payload });\r\n    } catch (e) {\r\n        yield put({ type: \"GET_SELECTED_CHAT_USER_FAILED\", message: e.message });\r\n    }\r\n}\r\n\r\n/* ----------- Call and dispatch functions ------------- */\r\n\r\n// Get full patients list\r\nfunction* getPatientsList() {\r\n    try {\r\n        const patients = yield call(API.resultGet, \"v1/patients\");\r\n        yield put({ type: \"PATIENTS_LIST\", payload: patients.data.data.results })\r\n    } catch (e) {\r\n        yield put({ type: \"GET_PATIENTS_LIST_FAILED\", message: e.message });\r\n    }\r\n}\r\n\r\n// Get selected patient from patient list\r\nfunction* setPatientSelected(action) {\r\n    try {\r\n        yield put({ type: 'SET_SELECTED_PATIENT', payload: action.payload });\r\n    } catch (e) {\r\n        yield put({ type: 'SET_PATIENT_SELECT_FAILED' });\r\n    }\r\n}\r\n\r\n// Get selected patient informations\r\nfunction* getPatientPersonalInfo(action) {\r\n    try {\r\n        const patientPersonalInfo = yield call(API.getPatientPersonalInfoAPI, action.payload);\r\n        yield put({ type: \"GET_PATIENT_PERSONAL_INFOS\", payload: patientPersonalInfo.data.data });\r\n    } catch (e) {\r\n        yield put({ type: \"GET_PATIENT_PERSONAL_INFO_FAILED\" });\r\n    }\r\n}\r\nfunction* getPatientPersonalAllergy(action) {\r\n    try {\r\n        const patientPersonalAllergy = yield call(API.getPatientPersonalAllergyAPI, action.payload);\r\n        yield put({ type: \"GET_PATIENT_PERSONAL_ALLERGY\", payload: patientPersonalAllergy.data.data });\r\n    } catch (e) {\r\n        yield put({ type: \"GET_PATIENT_PERSONAL_ALLERGY_FAILED\" });\r\n    }\r\n}\r\n\r\n// Set patient to have chat with\r\nfunction* setPatientChatTarget(action) {\r\n    try {\r\n        const patientSet = yield call(API.getPatientPersonalInfoAPI, action.payload.id);\r\n        yield put({ type: \"SET_PATIENT_FOR_CHAT\", payload: patientSet.data.data })\r\n    } catch (e) {\r\n        yield put({ type: \"SET_PATIENT_FOR_CHAT_FAILED\" });\r\n    }\r\n}\r\n\r\n// Change patient to have chat with\r\nfunction* setPatientChatTargetChange(action) {\r\n    try {\r\n        const patientSets = yield call(API.getPatientPersonalInfoAPI, action.payload.id);\r\n        yield put({ type: \"SET_PATIENT_FOR_CHAT_CHANGED\", payload: patientSets.data.data });\r\n    } catch (e) {\r\n        yield put({ type: \"SET_PATIENT_FOR_CHAT_CHANGED_FAILED\" });\r\n    }\r\n}\r\n\r\n\r\nfunction* getAssignedData(action) {\r\n    if (action[\"payload\"] === \"\") {\r\n        yield put({ type: \"SET_ASSIGNED_DATA\", payload: [] });\r\n    } else {\r\n        try {\r\n            const patientSets = yield call(API.getAssignedDataAPI, action.payload);\r\n            yield put({ type: \"SET_ASSIGNED_DATA\", payload: patientSets.data.data.results });\r\n        } catch (e) {\r\n            yield put({ type: \"SET_ASSIGNED_DATA\", payload: [] });\r\n        }\r\n    }\r\n}\r\nfunction* getPatientTaskData(action) {\r\n    if (action[\"payload\"] === \"\") {\r\n        yield put({ type: \"SET_PATIENT_TASK_DATA\", payload: [] });\r\n    } else {\r\n        // console.log(\"TESt\", action)\r\n        try {\r\n            const taskSets = yield call(API.getPatientTaskDataAPI, action.payload);\r\n            // console.log(taskSets.data.data.results)\r\n            yield put({ type: \"SET_PATIENT_TASK_DATA\", payload: taskSets.data.data.results })\r\n        } catch (e) {\r\n            yield put({ type: \"SET_PATIENT_TASK_DATA\", payload: [] });\r\n        }\r\n    }\r\n}\r\n\r\nfunction* getPatientHealthData(action) {\r\n    try {\r\n        const patientSets = yield call(API.getPatientHealthDataAPI, action.payload);\r\n        console.log(\" patient health data response ===> \", patientSets.data.data)\r\n        yield put({ type: \"SET_PATIENT_HEALTH_DATA\", payload: patientSets.data.data && patientSets.data.data.length ? patientSets.data.data.results : null });\r\n    } catch (e) {\r\n        yield put({ type: \"SET_PATIENT_HEALTH_DATA_FAILED\" });\r\n    }\r\n}\r\n\r\nfunction* getPatientMedicationData(action) {\r\n    if (action[\"payload\"] === \"\") {\r\n        yield put({ type: \"GET_PATIENT_MEDICATION_DATAS\", payload: [] });\r\n    } else {\r\n        try {\r\n            const patientSets = yield call(API.getPatientMedicationDataAPI, action.payload);\r\n            yield put({ type: \"GET_PATIENT_MEDICATION_DATAS\", payload: patientSets.data.data.results });\r\n        } catch (e) {\r\n            yield put({ type: \"GET_PATIENT_MEDICATION_DATAS\", payload: [] });\r\n        }\r\n    }\r\n}\r\n\r\nfunction* onAddNewPatient(action) {\r\n    yield put({ type: \"ADD_NEW_PATIENT_ACTION\", payload: action.payload });\r\n}\r\n\r\nfunction* onUserRoleSet(action) {\r\n    yield put({ type: \"USER_ROLE_SETED\", payload: action.payload });\r\n}\r\n\r\n// Export saga functions\r\nexport default function* mySaga() {\r\n    yield takeEvery(initialActions.GET_USER, getSelectedUser);\r\n    yield takeEvery(initialActions.GET_USER_CHAT, getSelectedChatUser);\r\n    yield takeEvery(initialActions.SET_PATIENT_SELECTED, setPatientSelected);\r\n    yield takeEvery(initialActions.GET_PATIENTS_LIST, getPatientsList);\r\n    yield takeEvery(initialActions.GET_PATIENT_PERSONAL_DATA, getPatientPersonalInfo);\r\n    yield takeEvery(initialActions.GET_CHAT_PATIENT_TARGET, setPatientChatTarget);\r\n    yield takeEvery(initialActions.SET_GET_CHAT_PATIENT_TARGET, setPatientChatTargetChange);\r\n    yield takeEvery(initialActions.GET_PATIENT_MEDICATION_DATA, getPatientMedicationData);\r\n    yield takeEvery(initialActions.ADD_NEW_PATIENT, onAddNewPatient);\r\n    yield takeEvery(initialActions.USER_ROLE_SET, onUserRoleSet);\r\n    yield takeEvery(initialActions.GET_PATIENT_HEALTH_DATA, getPatientHealthData);\r\n    yield takeEvery(initialActions.GET_ASSIGNED_DATA, getAssignedData);\r\n    yield takeEvery(initialActions.GET_PATIENT_TASK_DATA, getPatientTaskData)\r\n    yield takeEvery(initialActions.GET_PATIENT_PERSONAL_ALLERGY, getPatientPersonalAllergy)\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from '../store/reducers';\r\nimport { createLogger } from 'redux-logger';\r\nimport mySaga from './patientsSaga';\r\n\r\n// Creat saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet middlewares = [sagaMiddleware, createLogger()];\r\nif (process.env.NODE_ENV === 'production') middlewares = [sagaMiddleware];\r\n\r\n// Export store from saga and reducer\r\nexport const store = createStore(reducer, composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\n// Run the saga middleware\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './saga';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <Route component={App} />\r\n      </BrowserRouter>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// if(window.location.reload) {\r\n//   localStorage.clear();\r\n// }\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}